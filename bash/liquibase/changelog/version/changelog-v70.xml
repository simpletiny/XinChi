<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext"
	xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.1.xsd
        http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd">
	<changeSet id="1" author="simpletiny">
		<sql>
            <![CDATA[
            		DROP VIEW IF EXISTS air_ticket_need;
					 CREATE VIEW air_ticket_need AS
					    SELECT 
					    A.confirm_flg,
					    A.operate_flg,
					    A.standard_flg,
					    B.pk AS product_pk,
					    A.pk AS sale_order_pk,
					    A.passenger_captain AS passenger,
					    B.product_manager_number AS ticket_client_number,
					    CASE
					        WHEN ISNULL(A.departure_date) OR ISNULL(B.pk) THEN NULL
					        ELSE DATE_ADD(A.departure_date,
					            INTERVAL B.day_index - 1 DAY)
					    END AS first_ticket_date,
					    CASE
					        WHEN ISNULL(B.pk) THEN NULL
					        ELSE B.from_to_city
					    END AS first_from_to,
					    (IF(ISNULL(A.adult_count),
					        0,
					        A.adult_count) + IF(ISNULL(A.special_count),
					        0,
					        A.special_count)) AS people_count,
					    A.team_number,
					    IF(C.pk IS NULL, 'N', 'Y') AS ordered
					FROM
					    budget_order_view A
					        LEFT JOIN
					    view_order_air_info B ON A.team_number = B.team_number
					        AND B.info_index = 0
					        AND B.air_index = 1
					        LEFT JOIN
					    air_ticket_order C ON A.team_number = C.team_number
					WHERE
					    A.operate_flg = 'I'
					        AND A.confirm_date >= '2019-05-01';
             ]]>
			<comment>ALTER VIEW air_ticket_need</comment>
		</sql>
	</changeSet>
	<changeSet id="2" author="simpletiny">
		<sql>
            <![CDATA[
            		DROP VIEW IF EXISTS air_ticket_need;
					 CREATE VIEW air_ticket_need AS
					   SELECT 
						    A.confirm_flg,
						    A.operate_flg,
						    A.standard_flg,
						    A.pk AS sale_order_pk,
						    A.passenger_captain AS passenger,
						    A.product_manager_number AS ticket_client_number,
						    CASE
						        WHEN ISNULL(A.departure_date) OR ISNULL(B.pk) THEN NULL
						        ELSE DATE_ADD(A.departure_date,
						            INTERVAL C.day_index - 1 DAY)
						    END AS first_ticket_date,
						    CASE
						        WHEN ISNULL(C.pk) THEN NULL
						        ELSE C.from_to_city
						    END AS first_from_to,
						    (IF(ISNULL(A.adult_count),
						        0,
						        A.adult_count) + IF(ISNULL(A.special_count),
						        0,
						        A.special_count)) AS people_count,
						    A.team_number,
						    IF(D.pk IS NULL, 'N', 'Y') AS ordered
						FROM
						    budget_order_view A
						        LEFT JOIN
						    order_supplier B ON B.order_pk = A.pk
						        LEFT JOIN
						    view_order_air_info_base C ON B.pk = C.order_supplier_pk
						        AND C.info_index = 0
						        AND C.air_index = 1
						        LEFT JOIN
						    air_ticket_order D ON A.team_number = D.team_number
						WHERE
						    A.operate_flg = 'I'
						        AND A.confirm_date >= '2019-05-01';
             ]]>
			<comment>ALTER VIEW air_ticket_need</comment>
		</sql>
	</changeSet>
	<changeSet id="3" author="simpletiny">
		<sql>
            <![CDATA[
            		DROP VIEW IF EXISTS client_relation_summary;
             ]]>
			<comment>DROP VIEW client_relation_summary</comment>
		</sql>
	</changeSet>
	<changeSet id="4" author="simpletiny">
		<sql>
            <![CDATA[
			 DROP VIEW IF EXISTS view_order_count;
			 CREATE VIEW view_order_count AS
			 SELECT 
			        A.client_employee_pk AS client_employee_pk,
			        COUNT(A.pk) AS order_count,
			        COUNT(if(A.confirm_date >= date_format( date_add(now(),interval -20 day) ,'%Y-%m-%d'),1,null)) AS day21_count,
			        max(A.confirm_date) AS last_confirm_date,
			        min(A.confirm_date) AS first_confirm_date
			    FROM
			        budget_order_view A
			        LEFT JOIN client_employee B ON A.client_employee_pk = B.pk
			    GROUP BY A.client_employee_pk ;
             ]]>
			<comment>ALTER VIEW view_order_count</comment>
		</sql>
	</changeSet>
	<changeSet id="5" author="simpletiny">
		<sql>
            <![CDATA[
			drop view if exists view_incoming_count;
			CREATE VIEW view_incoming_count AS
			    SELECT 
			        A.client_employee_pk,
			        A.date AS incoming_date,
			        COUNT(IF(A.type = '微信', A.pk, NULL)) AS wechat_count,
			        COUNT(IF(A.type = '电话', A.pk, NULL)) AS tel_count,
			        B.relation_level,
			        B.market_level,
			        B.back_level
			    FROM
			        incoming_call A
			            LEFT JOIN
			        client_employee B ON A.client_employee_pk = B.pk
			    GROUP BY A.client_employee_pk , A.date;
             ]]>
			<comment>CREATE VIEW view_incoming_count </comment>
		</sql>
	</changeSet>
	<changeSet id="6" author="simpletiny">
		<sql>
            <![CDATA[
			CREATE TABLE product_order_air_base (
			  pk CHAR(22) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NOT NULL,
			  create_user VARCHAR(10) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL,
			  create_time VARCHAR(15) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL,
			  update_user VARCHAR(10) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL,
			  update_time VARCHAR(15) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL,
			  name VARCHAR(50) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NOT NULL COMMENT '航班名称',
			  number VARCHAR(10) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NOT NULL COMMENT '航班编号',
			  adult_price DECIMAL(12,2) NOT NULL DEFAULT '0.00',
			  child_price DECIMAL(12,2) NOT NULL DEFAULT '0.00',
			  comment VARCHAR(200) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL COMMENT '票务要求',
			  team_number VARCHAR(10) NOT NULL,
			  PRIMARY KEY (pk))
			ENGINE = InnoDB
			DEFAULT CHARACTER SET = utf8
			COLLATE = utf8_bin
			COMMENT = '产品订单机票基础表';
             ]]>
			<comment>CREATE TABLE product_order_air_base </comment>
		</sql>
	</changeSet>
	<changeSet id="7" author="simpletiny">
		<sql>
            <![CDATA[
			CREATE TABLE product_order_air_info (
				  pk CHAR(22) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NOT NULL,
				  flight_index TINYINT(4) NOT NULL COMMENT '航段排序',
				  flight_leg VARCHAR(10) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NOT NULL COMMENT '航段名',
				  start_day TINYINT(4) NOT NULL COMMENT '起始天次',
				  start_city VARCHAR(10) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NOT NULL COMMENT '起飞城市',
				  end_day TINYINT(4) NOT NULL COMMENT '降落天次',
				  end_city VARCHAR(10) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NOT NULL COMMENT '降落城市',
				  flight_number VARCHAR(10) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL COMMENT '指定的航班号',
				  base_pk CHAR(22) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NOT NULL COMMENT '航班pk',
				  create_user VARCHAR(10) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL,
				  create_time VARCHAR(15) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL,
				  update_user VARCHAR(10) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL,
				  update_time VARCHAR(15) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL,
				  PRIMARY KEY (pk))
				ENGINE = InnoDB
				DEFAULT CHARACTER SET = utf8
				COLLATE = utf8_bin
				COMMENT = '产品订单机票信息基础表';
             ]]>
			<comment>CREATE TABLE product_order_air_info</comment>
		</sql>
	</changeSet>
	<changeSet id="8" author="simpletiny">
		<sql>
            <![CDATA[
            		DROP VIEW IF EXISTS air_ticket_need;
					 CREATE VIEW air_ticket_need AS
					 SELECT 
						    A.confirm_flg,
						    A.operate_flg,
						    A.standard_flg,
						    A.pk AS sale_order_pk,
						    A.passenger_captain AS passenger,
						    A.product_manager_number AS ticket_client_number,
                            B.comment,
						    CASE
						        WHEN ISNULL(A.departure_date) OR ISNULL(B.pk) THEN NULL
						        ELSE DATE_ADD(A.departure_date,
						            INTERVAL C.start_day - 1 DAY)
						    END AS first_ticket_date,
						    CASE
						        WHEN ISNULL(C.pk) THEN NULL
						        ELSE CONCAT(C.start_city,'--',C.end_city)
						    END AS first_from_to,
						    (IF(ISNULL(A.adult_count),
						        0,
						        A.adult_count) + IF(ISNULL(A.special_count),
						        0,
						        A.special_count)) AS people_count,
						    A.team_number,
						    IF(D.pk IS NULL, 'N', 'Y') AS ordered
						FROM
						    budget_order_view A
						        LEFT JOIN
						    product_order_air_base B ON B.team_number = A.team_number
						        LEFT JOIN
						    product_order_air_info C ON B.pk = C.base_pk
						        AND C.flight_index = 1
						        LEFT JOIN
						    air_ticket_order D ON A.team_number = D.team_number
						WHERE
						    (A.operate_flg = 'I' OR A.operate_flg = 'A')
						        AND A.confirm_date >= '2019-05-01';
             ]]>
			<comment>ALTER VIEW air_ticket_need</comment>
		</sql>
	</changeSet>
	<changeSet id="9" author="simpletiny">
		<sql>
            <![CDATA[
            		DROP VIEW IF EXISTS view_order_air_info;
					CREATE VIEW view_order_air_info AS
					   SELECT 
					        A.pk,
					        B.flight_leg AS air_leg,
					        B.flight_index AS info_index,
							B.start_day AS day_index,
					        CONCAT(B.start_city,'--',B.end_city) AS from_to_city,
					        C.team_number,
					        C.product_manager_number,
					        C.standard_flg,
					        C.departure_date,
					        C.operate_flg,
					        C.confirm_flg,
					        C.confirm_date
					    FROM
					        product_order_air_base A
					            LEFT JOIN
					        product_order_air_info B ON A.pk = B.base_pk
					            LEFT JOIN
					        budget_order_view C ON A.team_number = C.team_number;
             ]]>
			<comment>ALTER VIEW view_order_air_info</comment>
		</sql>
	</changeSet>
	<changeSet id="10" author="simpletiny">
		<sql>
            <![CDATA[
            		ALTER TABLE waiting_for_paid 
					ADD COLUMN comment VARCHAR(200) NULL AFTER pay_user;
             ]]>
			<comment>ALTER TABLE waiting_for_paid</comment>
		</sql>
	</changeSet>
	<changeSet id="11" author="simpletiny">
		<sql>
            <![CDATA[
            		CREATE TABLE base_data (
					  name VARCHAR(10) NOT NULL COMMENT '名称',
					  code VARCHAR(10) NULL COMMENT '代号',
					  type VARCHAR(10) NOT NULL COMMENT '数据类型',
					  order_index INT NOT NULL DEFAULT 999 COMMENT '排序号',
					  level INT NOT NULL DEFAULT 1 COMMENT '层级',
					  father_level_pk CHAR(22) NULL COMMENT '父层级pk',
					  ext1 VARCHAR(45) NULL COMMENT '扩展1',
					  ext2 VARCHAR(45) NULL COMMENT '扩展2',
					  ext3 VARCHAR(45) NULL COMMENT '扩展3',
					  delete_flg CHAR(1) NOT NULL DEFAULT 'N' COMMENT '停用标识',
					  can_edit CHAR(1) NOT NULL DEFAULT 'Y' COMMENT '是否能编辑标识',
					  pk CHAR(22) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NOT NULL,
					  create_user VARCHAR(10) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL,
					  update_user VARCHAR(10) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL,
					  update_time VARCHAR(15) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL,
					  create_time VARCHAR(15) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL,
					  PRIMARY KEY (pk))
					ENGINE = InnoDB
					DEFAULT CHARACTER SET = utf8
					COLLATE = utf8_bin
					COMMENT = '基础数据表';
             ]]>
			<comment>CREATE TABLE base_data</comment>
		</sql>
	</changeSet>
	<changeSet id="12" author="simpletiny">
		<sql>
            <![CDATA[
            		ALTER TABLE budget_standard_order 
					ADD INDEX team_number (team_number ASC);
					ALTER TABLE budget_non_standard_order 
					ADD INDEX team_number (team_number ASC);
					ALTER TABLE receivable 
					ADD INDEX team_number (team_number ASC);
             ]]>
			<comment>ALTER TABLE budget_standard_order,budget_non_standard_order,receivable</comment>
		</sql>
	</changeSet>
	<changeSet id="13" author="simpletiny">
		<sql>
            <![CDATA[
            	 DROP VIEW IF EXISTS received_detail;
					CREATE VIEW received_detail AS
					    SELECT 
					        team_number AS team_number,
					        received AS received,
					        received_time AS received_time,
					        type AS type,
					        confirm_time AS confirm_time,
					        status AS status,
					        comment AS comment,
					        sum_received AS sum_received,
					        allot_received AS allot_received,
					        related_pk AS related_pk,
					        card_pk AS card_pk,
					        card_account AS card_account,
					        create_user AS create_user,
					        create_time AS create_time,
					        update_time AS update_time,
					        update_user AS update_user,
					        pk AS pk,
					        client_employee_pk AS client_employee_pk,
					        client_pk AS client_pk,
					        voucher_file AS voucher_file,
					        collecter AS collecter
					    FROM
					        client_received_detail
					    WHERE
					        (type <> 'SUM') 
					    UNION SELECT 
					        group_concat(team_number) AS team_number,
					        received AS received,
					        received_time AS received_time,
					        type AS type,
					        confirm_time AS confirm_time,
					        status AS status,
					        comment AS comment,
					        sum_received AS sum_received,
					        allot_received AS allot_received,
					        related_pk AS related_pk,
					        card_pk AS card_pk,
					        card_account AS card_account,
					        create_user AS create_user,
					        create_time AS create_time,
					        update_time AS update_time,
					        update_user AS update_user,
					        pk AS pk,
					        client_employee_pk AS client_employee_pk,
					        client_pk AS client_pk,
					        voucher_file AS voucher_file,
					        collecter AS collecter
					    FROM
					        client_received_detail
					    WHERE
					        (type = 'SUM')
					    GROUP BY related_pk;
             ]]>
			<comment>ALTER VIEW received_detail</comment>
		</sql>
	</changeSet>
	<changeSet id="14" author="simpletiny">
		<sql>
            <![CDATA[
            	DROP VIEW IF EXISTS view_order_count;
				CREATE VIEW view_order_count AS
				    SELECT 
				        A.client_employee_pk AS client_employee_pk,
				        COUNT(A.pk) AS order_count,
				        COUNT(IF(A.departure_date >= DATE_FORMAT(DATE_ADD(NOW(), INTERVAL - 20 DAY),
				                    '%Y-%m-%d'),
				            1,
				            NULL)) AS day21_count,
				        MAX(A.departure_date) AS last_confirm_date,
				        MIN(A.departure_date) AS first_confirm_date
				    FROM
				        budget_order_view A
				            LEFT JOIN
				        client_employee B ON A.client_employee_pk = B.pk
				    GROUP BY A.client_employee_pk;
             ]]>
			<comment>ALTER VIEW view_order_count</comment>
		</sql>
	</changeSet>
	<changeSet id="15" author="simpletiny">
		<sql>
            <![CDATA[
            	ALTER TABLE budget_standard_order 
					ADD COLUMN lock_flg CHAR(1) NULL DEFAULT 'N' COMMENT '锁定标识' AFTER product_value;
				ALTER TABLE budget_non_standard_order 
					ADD COLUMN lock_flg CHAR(1) NULL DEFAULT 'N' COMMENT '锁定标识' AFTER product_cost;
             ]]>
			<comment>ALTER TABLE budget_standard_order and TABLE budget_non_standard_order</comment>
		</sql>
	</changeSet>
	<changeSet id="16" author="simpletiny">
		<sql>
            <![CDATA[
            	ALTER TABLE budget_standard_order 
					ADD COLUMN name_confirm_status CHAR(1) NULL DEFAULT '1' COMMENT '1,未确认，2：产品提示待确认，3：产品确认，4：票务提示待确认，5票务确认（最终确认）' AFTER lock_flg;
				ALTER TABLE budget_non_standard_order 
					ADD COLUMN name_confirm_status CHAR(1) NULL DEFAULT '1' COMMENT '1,未确认，2：产品提示待确认，3：产品确认，4：票务提示待确认，5票务确认（最终确认）' AFTER lock_flg;
             ]]>
			<comment>ALTER TABLE budget_standard_order and TABLE budget_non_standard_order</comment>
		</sql>
	</changeSet>
	<changeSet id="17" author="simpletiny">
		<sql>
            <![CDATA[
            	DROP VIEW IF EXISTS budget_order_view;
				CREATE VIEW budget_order_view AS
					select  A.team_number, 
					    	A.product_name,
							'' as product_pk,
					    	A.client_employee_pk, 
					    	C.name AS client_employee_name,
					    	A.independent_flg, 
					    	A.comment, 
					    	A.other_cost_comment, 
					    	A.other_cost, 
					    	A.fy, 
					    	A.special_cost, 
					    	A.special_count, 
					    	A.adult_cost, 
					    	A.adult_count, 
					    	A.receivable, 
					    	A.days, 
					    	A.departure_date, 
					    	A.pk, 
					    	A.update_user,
					    	A.create_user AS create_user_number,
					    	B.user_name AS create_user,
					    	A.confirm_flg, 
					    	A.create_time,
					    	A.update_time,
					    	A.confirm_date,
					    	A.confirm_file,
					    	'N' AS standard_flg,
					    	A.product_manager AS product_manager_number,
					    	D.user_name AS product_manager,
					    	A.air_ticket_cost,
					    	A.product_cost,
					    	A.operate_flg,
					    	A.name_list,
                            A.lock_flg,
                            A.name_confirm_status,
                            substring_index(A.name_list,':',1) AS passenger_captain,
                            '' AS receivable_comment,
                            '' AS treat_comment,
                            '' AS client_name,
                            '' AS ticket_number,
                            '' AS start_city,
                            '' AS start_airport,
                            '' AS end_city,
                            '' AS end_airport,
                            '' AS off_time,
                            '' AS land_time,
                            '' AS next_day,
                            case when
							A.departure_date>now() then 'no'
							when now()>=A.departure_date and
							DATE_ADD(A.departure_date,interval A.days-1 day) >
							now()
							then 'yes'
							when now()>=DATE_ADD(A.departure_date,interval A.days-1 day) then 'back'
							end
							AS status,
							0 AS product_value
					from budget_non_standard_order A LEFT JOIN user_base B ON A.create_user = B.user_number
					LEFT JOIN client_employee C ON A.client_employee_pk = C.pk
					LEFT JOIN user_base D ON A.product_manager = D.user_number
					union all 
					select  A.team_number, 
					    	C.name AS product_name,
							A.product_pk,
					    	A.client_employee_pk,
					    	D.name AS client_employee_name,
					    	A.independent_flg, 
					    	A.comment, 
					    	A.other_cost_comment, 
					    	A.other_cost, 
					    	A.fy, 
					    	A.special_cost, 
					    	A.special_count, 
					    	A.adult_cost, 
					    	A.adult_count, 
					    	A.receivable, 
					    	A.days, 
					    	A.departure_date, 
					    	A.pk, 
					    	A.update_user, 
					    	A.create_user AS create_user_number, 
					    	B.user_name AS create_user,
					    	A.confirm_flg, 
					    	A.create_time,
					    	A.update_time,
					    	A.confirm_date,
					    	A.confirm_file,
					    	'Y' AS standard_flg,
					    	C.product_manager AS product_manager_number,
					    	E.user_name AS product_manager,
					    	A.air_ticket_cost,
					    	A.product_cost,
					    	A.operate_flg,
					    	A.name_list,
                            A.lock_flg,
                            A.name_confirm_status,
                            A.passenger_captain,
                            A.receivable_comment,
                            A.treat_comment,
                            F.client_short_name AS client_name,
                            A.ticket_number,
                            A.start_city,
                            A.start_airport,
                            A.end_city,
                            A.end_airport,
                            A.off_time,
                            A.land_time,
                            A.next_day,
                            case when
							A.departure_date>now() then 'no'
							when now()>=A.departure_date and
							DATE_ADD(A.departure_date,interval A.days-1 day) >
							now()
							then 'yes'
							when now()>=DATE_ADD(A.departure_date,interval A.days-1 day) then 'back'
							end
							AS status,
							A.product_value
					from budget_standard_order A LEFT JOIN user_base B ON A.create_user = B.user_number
					LEFT JOIN product C ON A.product_pk = C.pk
					LEFT JOIN client_employee D ON A.client_employee_pk = D.pk
       				LEFT JOIN user_base E ON C.product_manager = E.user_number
       				LEFT JOIN client F ON D.financial_body_pk = F.pk;
             ]]>
			<comment>ALTER VIEW budget_order_view </comment>
		</sql>
	</changeSet>
	<changeSet id="18" author="simpletiny">
		<sql>
            <![CDATA[
            		DROP VIEW IF EXISTS air_ticket_need;
					 CREATE VIEW air_ticket_need AS
					 SELECT 
						    A.confirm_flg,
						    A.operate_flg,
						    A.standard_flg,
						    A.pk AS sale_order_pk,
						    A.passenger_captain AS passenger,
						    A.product_manager_number AS ticket_client_number,
                            B.comment,
						    CASE
						        WHEN ISNULL(A.departure_date) OR ISNULL(B.pk) THEN NULL
						        ELSE DATE_ADD(A.departure_date,
						            INTERVAL C.start_day - 1 DAY)
						    END AS first_ticket_date,
						    CASE
						        WHEN ISNULL(C.pk) THEN NULL
						        ELSE CONCAT(C.start_city,'--',C.end_city)
						    END AS first_from_to,
						    (IF(ISNULL(A.adult_count),
						        0,
						        A.adult_count) + IF(ISNULL(A.special_count),
						        0,
						        A.special_count)) AS people_count,
						    A.team_number,
						    IF(D.pk IS NULL, 'N', 'Y') AS ordered
						FROM
						    budget_order_view A
						        LEFT JOIN
						    product_order_air_base B ON B.team_number = A.team_number
						        LEFT JOIN
						    product_order_air_info C ON B.pk = C.base_pk
						        AND C.flight_index = 1
						        LEFT JOIN
						    air_ticket_order D ON A.team_number = D.team_number
						WHERE
						    (A.operate_flg = 'I' OR A.operate_flg = 'A')
						        AND A.confirm_date >= '2019-10-15';
             ]]>
			<comment>ALTER VIEW air_ticket_need</comment>
		</sql>
	</changeSet>
	<changeSet id="19" author="simpletiny">
		<sql>
            <![CDATA[
            		ALTER TABLE air_leg 
					ADD INDEX HOT_FLG (hot_flg DESC);
             ]]>
			<comment>ALTER TABLE air_leg</comment>
		</sql>
	</changeSet>
	<changeSet id="20" author="simpletiny">
		<sql>
            <![CDATA[
            		DROP VIEW IF EXISTS air_ticket_need;
					 CREATE VIEW air_ticket_need AS
					 SELECT 
					    A.confirm_flg,
					    A.operate_flg,
					    A.standard_flg,
					    A.pk AS sale_order_pk,
					    A.passenger_captain AS passenger,
					    A.product_manager_number AS ticket_client_number,
					    B.comment,
					    A.product_name,
					    A.departure_date,
					    CASE
					        WHEN ISNULL(A.departure_date) OR ISNULL(B.pk) THEN NULL
					        ELSE DATE_ADD(A.departure_date,
					            INTERVAL C.start_day - 1 DAY)
					    END AS first_ticket_date,
					    CASE
					        WHEN ISNULL(C.pk) THEN NULL
					        ELSE CONCAT(C.start_city, '--', C.end_city)
					    END AS first_from_to,
					    (IF(ISNULL(A.adult_count),
					        0,
					        A.adult_count) + IF(ISNULL(A.special_count),
					        0,
					        A.special_count)) AS people_count,
					    A.team_number,
					    IF(D.pk IS NULL, 'N', 'Y') AS ordered
					FROM
					    budget_order_view A
					        LEFT JOIN
					    product_order_air_base B ON B.team_number = A.team_number
					        LEFT JOIN
					    product_order_air_info C ON B.pk = C.base_pk AND C.flight_index = 1
					        LEFT JOIN
					    air_ticket_order D ON A.team_number = D.team_number
					WHERE
					    (A.operate_flg = 'I'
					        OR A.operate_flg = 'A')
					        AND A.confirm_date >= '2019-10-15';
             ]]>
			<comment>ALTER VIEW air_ticket_need</comment>
		</sql>
	</changeSet>
	<changeSet id="21" author="simpletiny">
		<sql>
            <![CDATA[
            		DROP VIEW if exists view_back_money_balance;
					CREATE VIEW view_back_money_balance AS
					    SELECT 
					        A.team_number AS team_number,
					        A.create_user AS user_number,
					        IF((A.confirm_flg = 'Y'
					                OR A.confirm_flg = 'F')
					                AND (D.final_type IS NULL
					                OR D.final_type != 4),
					            (A.adult_count + IFNULL(A.special_count, 0)) * A.product_value,
					            0) AS product_point,
					        D.final_type,
					        A.confirm_date AS confirm_date,
					        A.receivable AS receivable,
					        C.status,
					        SUM(C.received) AS received,
					        receivable - SUM(C.received) AS balance
					    FROM
					        budget_standard_order A
					            LEFT JOIN
					        final_order_view D ON A.team_number = D.team_number
					            LEFT JOIN
					        receivable B ON A.team_number = B.team_number
					            LEFT JOIN
					        client_received_detail C ON A.team_number = C.team_number
					            AND LEFT(C.received_time, 10) <= (A.confirm_date + INTERVAL 1 DAY)
					    WHERE
					        C.team_number IS NOT NULL
					            AND C.status = 'E'
					    GROUP BY A.team_number
					    HAVING product_point != 0;
             ]]>
			<comment>ALTER VIEW view_back_money_balance</comment>
		</sql>
	</changeSet>
	<changeSet id="22" author="simpletiny">
		<sql>
            <![CDATA[
            		DROP VIEW if exists view_receivable_meter;
					CREATE VIEW view_receivable_meter AS
					   SELECT 
					    B.pk AS user_pk,
					    B.user_name AS user_name,
					    A.sales AS user_number,
					    SUM(CASE
					        WHEN A.final_flg = 'N' THEN A.budget_balance
					        ELSE A.final_balance
					    END) AS receivable,
					    SUM(CASE
					        WHEN
					            DATEDIFF(NOW(), A.return_date) >= 7
					                AND LEFT(DATE_SUB(now(),interval 2 MONTH),7) < LEFT(A.departure_date,7)
					        THEN
					            IF(A.final_flg = 'N',
					                A.budget_balance,
					                A.final_balance)
					        ELSE 0
					    END) AS warning,
					    SUM(CASE
					        WHEN
					             LEFT(DATE_SUB(now(),interval 2 MONTH),7) = LEFT(A.departure_date,7)
					        THEN
					            IF(A.final_flg = 'N',
					                A.budget_balance,
					                A.final_balance)
					        ELSE 0
					    END) AS bad,
					    SUM(CASE
					        WHEN
					            LEFT(DATE_SUB(now(),interval 3 MONTH),7) = LEFT(A.departure_date,7)
					        THEN
					            IF(A.final_flg = 'N',
					                A.budget_balance,
					                A.final_balance)
					        ELSE 0
					    END) AS month_dead,
					    SUM(CASE
					        WHEN
					            LEFT(DATE_SUB(now(),interval 3 MONTH),7) >= LEFT(A.departure_date,7)
					        THEN
					            IF(A.final_flg = 'N',
					                A.budget_balance,
					                A.final_balance)
					        ELSE 0
					    END) AS sum_dead
					FROM
					    receivable A
					        LEFT JOIN
					    user_base B ON A.sales = B.user_number
					GROUP BY A.sales;
             ]]>
			<comment>ALTER VIEW view_receivable_meter</comment>
		</sql>
	</changeSet>
	<changeSet id="23" author="simpletiny">
		<sql>
            <![CDATA[
            		CREATE TABLE accumulate_balance (
					  user_pk CHAR(22) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NOT NULL,
					  user_number VARCHAR(10) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NOT NULL,
					  date VARCHAR(10) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NOT NULL,
					  receivable DECIMAL(12,2) NULL DEFAULT '0.00',
					  receivable_balance DECIMAL(12,2) NULL DEFAULT '0.00',
					  payable DECIMAL(12,2) NULL DEFAULT '0.00',
					  payable_balance DECIMAL(12,2) NULL DEFAULT '0.00',
					  pk INT(11) NOT NULL AUTO_INCREMENT,
					  PRIMARY KEY (pk))
					ENGINE = InnoDB
					DEFAULT CHARACTER SET = utf8
					COLLATE = utf8_bin
					COMMENT = '累计费用表（应收，应付，应付尾款，已付尾款）';
             ]]>
			<comment>CREATE TABLE accumulate_balance</comment>
		</sql>
	</changeSet>
	<changeSet id="24" author="simpletiny">
		<sql>
            <![CDATA[
            		CREATE view view_accumulate_balance AS
					SELECT 
					    user_number,
					    SUM(IF(LEFT(DATE_SUB(NOW(), INTERVAL 1 MONTH),
					            7) = LEFT(date, 7),
					        receivable_balance,
					        0)) AS last_balance,
					    SUM(IF(LEFT(NOW(), 7) = LEFT(date, 7),
					        receivable_balance,
					        0)) AS this_balance,
					    SUM(IF(LEFT(DATE_SUB(NOW(), INTERVAL 1 MONTH),
					            7) <= LEFT(date, 7),
					        receivable_balance,
					        0)) AS balance,
					         round( SUM(IF(LEFT(DATE_SUB(NOW(), INTERVAL 1 MONTH),
					            7) <= LEFT(date, 7),
					        receivable_balance,
					        0))/day(now()),2)AS day_hold
					FROM
					    accumulate_balance
					GROUP BY user_number;
             ]]>
			<comment>CREATE view view_accumulate_balance</comment>
		</sql>
	</changeSet>
	<changeSet id="25" author="simpletiny">
		<sql>
            <![CDATA[
           		CREATE TABLE bad_interest (
				  pk INT NOT NULL AUTO_INCREMENT,
				  date VARCHAR(45) NOT NULL,
				  user_number VARCHAR(45) NOT NULL,
				  bad_interest DECIMAL(12,2) NULL,
				  PRIMARY KEY (pk))
				ENGINE = InnoDB
				DEFAULT CHARACTER SET = utf8
				COLLATE = utf8_bin
				COMMENT = '呆账罚息表';
             ]]>
			<comment>CREATE TABLE bad_interest </comment>
		</sql>
	</changeSet>
	<changeSet id="26" author="simpletiny">
		<sql>
            <![CDATA[
           		CREATE VIEW view_bad_interest AS
				SELECT 
				    user_number, SUM(bad_interest) AS bad_interest
				FROM
				    bad_interest A
				        LEFT JOIN
				    base_data B ON B.name = '呆罚清除日'
				WHERE
				    A.date > B.ext1
				GROUP BY user_number;
             ]]>
			<comment>CREATE VIEW view_bad_interest</comment>
		</sql>
	</changeSet>
	<changeSet id="27" author="simpletiny">
		<sql>
            <![CDATA[
           		DROP VIEW if exists view_back_money_balance;
				CREATE VIEW view_back_money_balance AS
				    SELECT 
				        A.team_number AS team_number,
				        A.create_user AS user_number,
				        IF((A.confirm_flg = 'Y'
				                OR A.confirm_flg = 'F')
				                AND (D.final_type IS NULL
				                OR D.final_type != 4),
				            (A.adult_count + IFNULL(A.special_count, 0)) * A.product_value,
				            0) AS product_point,
				        D.final_type,
				        A.confirm_date AS confirm_date,
				        A.receivable AS receivable,
				        C.status,
				        SUM(C.received) AS received,
				        receivable - SUM(C.received) AS balance
				    FROM
				        budget_standard_order A
				            LEFT JOIN
				        final_order_view D ON A.team_number = D.team_number
				            LEFT JOIN
				        receivable B ON A.team_number = B.team_number
				            LEFT JOIN
				        client_received_detail C ON A.team_number = C.team_number
				            AND LEFT(C.received_time, 10) <= (A.confirm_date + INTERVAL 1 DAY)
				    WHERE
				        C.team_number IS NOT NULL
				    GROUP BY A.team_number
				    HAVING product_point != 0;
             ]]>
			<comment>ALTER VIEW view_back_money_balance</comment>
		</sql>
	</changeSet>
	<changeSet id="28" author="simpletiny">
		<sql>
            <![CDATA[
           		  	DROP VIEW if exists view_back_money_balance;
					CREATE VIEW view_back_money_balance AS
					    SELECT 
					        A.team_number AS team_number,
					        A.create_user AS user_number,
					        IF((A.confirm_flg = 'Y'
					                OR A.confirm_flg = 'F')
					                AND (D.final_type IS NULL
					                OR D.final_type != 4),
					            (A.adult_count + IFNULL(A.special_count, 0)) * A.product_value,
					            0) AS product_point,
					        D.final_type,
					        A.confirm_date AS confirm_date,
					        A.receivable AS receivable,
					        C.status,
					        SUM(C.received) AS received,
					        receivable - SUM(C.received) AS balance
					    FROM
					        budget_standard_order A
					            LEFT JOIN
					        final_order_view D ON A.team_number = D.team_number
					            LEFT JOIN
					        receivable B ON A.team_number = B.team_number
					            LEFT JOIN
					        client_received_detail C ON A.team_number = C.team_number
					            AND LEFT(C.received_time, 10) <= (A.confirm_date + INTERVAL 1 DAY)
					            AND C.type != 'TAIL98'
					    WHERE
					        C.team_number IS NOT NULL
					    GROUP BY A.team_number
					    HAVING product_point != 0;
             ]]>
			<comment>ALTER VIEW view_back_money_balance</comment>
		</sql>
	</changeSet>
	<changeSet id="29" author="simpletiny">
		<sql>
            <![CDATA[
           		  	CREATE VIEW view_data_order_count AS
					    SELECT 
					        COUNT(A.pk) AS order_cnt,
					        A.adult_count + IF(A.special_count IS NULL,
					            0,
					            A.special_count) AS people_cnt,
					        A.confirm_date,
					        MONTH(confirm_date) AS month,
					        DAYOFMONTH(confirm_date) AS dayofm,
					        DAYOFWEEK(A.confirm_date) - 1 AS dayofw,
					        A.create_user,
					        A.create_user_number
					    FROM
					        budget_order_view A
					    WHERE
					        confirm_date IS NOT NULL
					    GROUP BY A.create_user , A.confirm_date;
             ]]>
			<comment>CREATE VIEW view_data_order_count</comment>
		</sql>
	</changeSet>
	<changeSet id="30" author="simpletiny">
		<sql>
            <![CDATA[
           		  	ALTER TABLE air_ticket_payable 
					ADD COLUMN passenger VARCHAR(10) NULL AFTER update_time,
					ADD COLUMN from_to_city VARCHAR(50) NULL AFTER passenger,
					ADD COLUMN first_date VARCHAR(10) NULL AFTER from_to_city;
             ]]>
			<comment>ALTER TABLE air_ticket_payable</comment>
		</sql>
	</changeSet>
	<changeSet id="31" author="simpletiny">
		<sql>
            <![CDATA[
           		  	ALTER TABLE air_ticket_paid_detail 
					ADD COLUMN voucher_number VARCHAR(170) NULL COMMENT '支付的凭证号，用逗号分隔' AFTER PNR;
             ]]>
			<comment>ALTER TABLE air_ticket_paid_detail</comment>
		</sql>
	</changeSet>
	<changeSet id="32" author="simpletiny">
		<sql>
            <![CDATA[
            	DROP VIEW if exists view_air_ticket_paid_detail;
          		CREATE VIEW view_air_ticket_paid_detail AS 
				SELECT * FROM air_ticket_paid_detail WHERE type LIKE '%STRIKE%'
				union all
				SELECT * FROM air_ticket_paid_detail WHERE type NOT LIKE '%STRIKE%' 
				GROUP BY related_pk
             ]]>
			<comment>ALTER VIEW view_air_ticket_paid_detail</comment>
		</sql>
	</changeSet>
	<changeSet id="33" author="simpletiny">
		<sql>
            <![CDATA[
            	DROP view if exists air_ticket_need;
            	CREATE TABLE air_ticket_need (
				  passenger_captain VARCHAR(10) NULL,
				  ticket_client_number VARCHAR(10) NULL,
				  comment VARCHAR(200) NULL,
				  product_name VARCHAR(10) NOT NULL,
				  departure_date VARCHAR(10) NULL,
				  first_ticket_date VARCHAR(10) NULL,
				  first_from_to VARCHAR(20) NULL,
				  adult_cnt INT NULL,
				  special_cnt INT NULL,
				  ordered CHAR(1) NULL DEFAULT 'N' ,
				  pk CHAR(22) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NOT NULL,
				  create_user VARCHAR(10) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL,
				  update_user VARCHAR(10) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL,
				  update_time VARCHAR(15) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL,
				  create_time VARCHAR(15) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL,
				  PRIMARY KEY (pk))
				ENGINE = InnoDB
				DEFAULT CHARACTER SET = utf8
				COLLATE = utf8_bin
				COMMENT = '票务需求列表';
				
				CREATE TABLE air_need_team_number (
					  need_pk CHAR(22) NOT NULL,
					  team_number VARCHAR(10) NULL,
					  pk CHAR(22) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NOT NULL,
					  create_time VARCHAR(15) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL,
					  create_user VARCHAR(10) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL,
					  update_user VARCHAR(10) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL,
					  update_time VARCHAR(15) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL,
					  PRIMARY KEY (pk))
					ENGINE = InnoDB
					DEFAULT CHARACTER SET = utf8
					COLLATE = utf8_bin
					COMMENT = '票务需求和团号对应表';
             ]]>
			<comment>CREATE TABLE air_ticket_need and air_need_team_number</comment>
		</sql>
	</changeSet>
	<changeSet id="34" author="simpletiny">
		<sql>
            <![CDATA[
            	CREATE TABLE order_other_money (
				  team_number VARCHAR(10) NOT NULL,
				  type CHAR(1) NOT NULL COMMENT '类型：I for income 收入，P for payment 支出',
				  money DECIMAL(12,2) NOT NULL,
				  comment VARCHAR(200) NOT NULL COMMENT '备注',
				  pk CHAR(22) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NOT NULL,
				  create_user VARCHAR(10) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL,
				  update_user VARCHAR(10) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL,
				  update_time VARCHAR(15) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL,
				  create_time VARCHAR(15) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL,
				  PRIMARY KEY (pk))
				ENGINE = InnoDB
				DEFAULT CHARACTER SET = utf8
				COLLATE = utf8_bin
				COMMENT = '订单其他收支表';
             ]]>
			<comment>CREATE TABLE order_other_money</comment>
		</sql>
	</changeSet>
	<changeSet id="35" author="simpletiny">
		<sql>
            <![CDATA[
            	CREATE TABLE product_order_air_team_number (
				  base_pk CHAR(22) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NOT NULL,
				  team_number VARCHAR(10) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL,
				  pk CHAR(22) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NOT NULL,
				  create_time VARCHAR(15) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL,
				  create_user VARCHAR(10) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL,
				  update_user VARCHAR(10) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL,
				  update_time VARCHAR(15) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL,
				  PRIMARY KEY (pk))
				ENGINE = InnoDB
				DEFAULT CHARACTER SET = utf8
				COLLATE = utf8_bin
				COMMENT = '产品订单机票和团号对应表';
             ]]>
			<comment>CREATE TABLE product_order_air_team_number</comment>
		</sql>
	</changeSet>
	<changeSet id="36" author="simpletiny">
		<sql>
            <![CDATA[
            					
				ALTER TABLE product_order_air_base 
				CHANGE COLUMN number number VARCHAR(10) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL COMMENT '航班编号' ,
				CHANGE COLUMN team_number team_number VARCHAR(10) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL ;
             ]]>
			<comment>ALTER TABLE product_order_air_base</comment>
		</sql>
	</changeSet>
	<changeSet id="37" author="simpletiny">
		<sql>
            <![CDATA[
            ALTER TABLE air_ticket_need 
			ADD COLUMN product_order_base_pk CHAR(22) NULL AFTER ticket_client_number;
             ]]>
			<comment>ALTER TABLE product_order_air_base</comment>
		</sql>
	</changeSet>
	<changeSet id="38" author="simpletiny">
		<sql>
            <![CDATA[
             DROP VIEW IF EXISTS view_order_air_info;
				CREATE VIEW view_order_air_info AS
					   SELECT 
					        A.pk AS base_pk,
					        B.flight_leg AS air_leg,
					        B.flight_index AS info_index,
							B.start_day AS day_index,
					        CONCAT(B.start_city,'--',B.end_city) AS from_to_city,
                            C.pk AS need_pk,
					        C.ticket_client_number,
					        C.departure_date
					    FROM
					        product_order_air_base A
					            LEFT JOIN
					        product_order_air_info B ON A.pk = B.base_pk
                            LEFT JOIN
                            air_ticket_need C ON A.pk = C.product_order_base_pk
             ]]>
			<comment>ALTER VIEW view_order_air_info</comment>
		</sql>
	</changeSet>
	<changeSet id="39" author="simpletiny">
		<sql>
            <![CDATA[
             CREATE TABLE season_ticket_base (
				  name VARCHAR(10) NOT NULL COMMENT '名称',
				  model VARCHAR(10) NOT NULL COMMENT '型号',
				  supplier_employee_pk CHAR(22) NOT NULL COMMENT '票源id',
				  price DECIMAL(12,2) NULL COMMENT '价格',
				  comment VARCHAR(200) NULL,
				  pk CHAR(22) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NOT NULL,
				  create_user VARCHAR(10) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL,
				  update_time VARCHAR(15) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL,
				  create_time VARCHAR(15) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL,
				  update_user VARCHAR(10) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL,
				  PRIMARY KEY (pk))
				ENGINE = InnoDB
				DEFAULT CHARACTER SET = utf8
				COLLATE = utf8_bin
				COMMENT = '套票基础表';
             ]]>
			<comment>CREATE TABLE season_ticket_base</comment>
		</sql>
	</changeSet>
	<changeSet id="40" author="simpletiny">
		<sql>
            <![CDATA[
             CREATE TABLE season_ticket_info (
				  ticket_index INT NOT NULL COMMENT '序号',
				  index_leg VARCHAR(10) NOT NULL COMMENT '航段编号',
				  start_day INT NOT NULL COMMENT '天次',
				  ticket_number VARCHAR(10) NULL COMMENT '航班号',
				  ticket_leg VARCHAR(20) NOT NULL COMMENT '票务航段',
				  start_time VARCHAR(5) NULL COMMENT '起飞时间',
				  end_time VARCHAR(5) NULL COMMENT '降落时间',
				  add_day_flg CHAR(1) NULL COMMENT '降落是否加1天',
				  start_place VARCHAR(20) NULL COMMENT '起飞机场',
				  end_place VARCHAR(20) NULL COMMENT '降落机场',
				  base_pk CHAR(22) NULL COMMENT '基础表ID',
				  pk CHAR(22) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NOT NULL,
				  create_user VARCHAR(10) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL,
				  update_time VARCHAR(15) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL,
				  create_time VARCHAR(15) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL,
				  update_user VARCHAR(10) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL,
				  PRIMARY KEY (pk))
				ENGINE = InnoDB
				DEFAULT CHARACTER SET = utf8
				COLLATE = utf8_bin
				COMMENT = '套表信息表';
             ]]>
			<comment> CREATE TABLE season_ticket_info</comment>
		</sql>
	</changeSet>
	<changeSet id="41" author="simpletiny">
		<sql>
            <![CDATA[
             ALTER TABLE product_order_air_base 
				CHANGE COLUMN name name VARCHAR(50) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL COMMENT '航班名称' ,
				CHANGE COLUMN adult_price adult_price DECIMAL(12,2) NULL DEFAULT '0.00' ,
				CHANGE COLUMN child_price child_price DECIMAL(12,2) NULL DEFAULT '0.00' ;
			ALTER TABLE product_order_air_info 
				CHANGE COLUMN flight_leg flight_leg VARCHAR(10) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL COMMENT '航段名' ,
				CHANGE COLUMN end_day end_day TINYINT(4) NULL COMMENT '降落天次' ;
             ]]>
			<comment>ALTER TABLE product_order_air_base and product_order_air_info</comment>
		</sql>
	</changeSet>
	<changeSet id="42" author="simpletiny">
		<sql>
            <![CDATA[
            ALTER TABLE air_ticket_order 
				ADD COLUMN order_number VARCHAR(10) NULL COMMENT '票务订单号' FIRST;
             ]]>
			<comment> ALTER TABLE air_ticket_order </comment>
		</sql>
	</changeSet>
	<changeSet id="43" author="simpletiny">
		<sql>
            <![CDATA[
            ALTER TABLE air_ticket_order_leg 
				ADD COLUMN start_time VARCHAR(5) NULL AFTER to_city,
				ADD COLUMN end_time VARCHAR(5) NULL AFTER start_time,
				ADD COLUMN start_place VARCHAR(20) NULL AFTER end_time,
				ADD COLUMN end_place VARCHAR(20) NULL AFTER start_place,
				ADD COLUMN add_day_flg CHAR(1) NULL DEFAULT 'N' AFTER end_place,
				ADD COLUMN ticket_number VARCHAR(10) NULL AFTER add_day_flg;
             ]]>
			<comment>ALTER TABLE air_ticket_order_leg</comment>
		</sql>
	</changeSet>
	<changeSet id="44" author="simpletiny">
		<sql>
            <![CDATA[
           ALTER TABLE air_ticket_order 
				ADD COLUMN need_pk CHAR(22) NULL COMMENT '需求pk' AFTER cost_done_flg,
				ADD COLUMN price DECIMAL(12,2) NULL COMMENT '机票单价' AFTER need_pk;
             ]]>
			<comment>ALTER TABLE air_ticket_order</comment>
		</sql>
	</changeSet>
	<changeSet id="45" author="simpletiny">
		<sql>
            <![CDATA[
           CREATE TABLE history_view (
			  title VARCHAR(20) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NOT NULL,
			  content MEDIUMTEXT CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL,
			  update_user VARCHAR(10) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL,
			  pk CHAR(22) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NOT NULL,
			  create_time VARCHAR(15) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL,
			  update_time VARCHAR(15) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL,
			  create_user VARCHAR(10) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL,
			  PRIMARY KEY (pk))
			ENGINE = InnoDB
			DEFAULT CHARACTER SET = utf8
			COLLATE = utf8_bin
			COMMENT = '欣驰历史';
             ]]>
			<comment>CREATE TABLE history_view</comment>
		</sql>
	</changeSet>
	<changeSet id="46" author="simpletiny">
		<sql>
            <![CDATA[
           CREATE TABLE team_evolution (
			  title VARCHAR(20) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NOT NULL,
			  content MEDIUMTEXT CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL,
			  update_user VARCHAR(10) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL,
			  pk CHAR(22) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NOT NULL,
			  create_time VARCHAR(15) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL,
			  update_time VARCHAR(15) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL,
			  create_user VARCHAR(10) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL,
			  PRIMARY KEY (pk))
			ENGINE = InnoDB
			DEFAULT CHARACTER SET = utf8
			COLLATE = utf8_bin
			COMMENT = '团质进化';
             ]]>
			<comment>CREATE TABLE team_evolution</comment>
		</sql>
	</changeSet>
	<changeSet id="47" author="simpletiny">
		<sql>
            <![CDATA[
        		ALTER TABLE air_ticket_need 
					DROP COLUMN product_order_base_pk,
					ADD COLUMN product_order_number VARCHAR(10) NULL COMMENT '产品订单号' AFTER ticket_client_number;
        		ALTER TABLE product_order_air_info 
					CHANGE COLUMN base_pk base_pk CHAR(22) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL COMMENT '航班pk' ,
					ADD COLUMN product_order_number VARCHAR(10) NULL COMMENT '产品订单号' AFTER update_time;
        		ALTER TABLE product_order_air_team_number 
					DROP COLUMN base_pk,
					ADD COLUMN product_order_number VARCHAR(10) NULL COMMENT '产品订单号' FIRST, 
					COMMENT = '产品订单和团号对应表' , RENAME TO  product_order_team_number ;
        		
             ]]>
			<comment>ALTER TABLE air_ticket_need,product_order_air_info,product_order_air_team_number(rename to product_order_team_number)</comment>
		</sql>
	</changeSet>
	<changeSet id="48" author="simpletiny">
		<sql>
            <![CDATA[
        		CREATE TABLE product_order (
					  order_number VARCHAR(10) NOT NULL COMMENT '产品订单号',
					  single_flg CHAR(1) NULL DEFAULT 'Y' COMMENT '合单还是单独flg，Y单独，N合单',
					  status CHAR(1) NULL DEFAULT 'N' COMMENT '状态，目前有操作和未操作两种，Y已生成操作，N未生成操作',
					  product_name VARCHAR(20) NULL,
					  product_model VARCHAR(6) NULL,
					  departure_date VARCHAR(10) NULL,
					  adult_count INT NULL,
					  special_count INT NULL,
					  air_comment VARCHAR(200) NULL COMMENT '票务需求',
					  comment VARCHAR(200) NULL COMMENT '备注',
					  product_manager_number VARCHAR(10) NULL,
					  create_time VARCHAR(15) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL,
					  update_time VARCHAR(15) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL,
					  update_user VARCHAR(10) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL,
					  create_user VARCHAR(10) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL,
					  pk CHAR(22) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NOT NULL,
					  PRIMARY KEY (pk))
					ENGINE = InnoDB
					DEFAULT CHARACTER SET = utf8
					COLLATE = utf8_bin
					COMMENT = '产品订单表';
             ]]>
			<comment>CREATE TABLE product_order</comment>
		</sql>
	</changeSet>
	<changeSet id="49" author="simpletiny">
		<sql>
            <![CDATA[
        		ALTER TABLE team_number 
					CHANGE COLUMN sale_pk user_pk CHAR(22) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NOT NULL ,
					ADD COLUMN type CHAR(1) NULL DEFAULT 'T' COMMENT '类型，T团号，P产品订单号，A票务订单号' AFTER create_time;
             ]]>
			<comment>ALTER TABLE team_number </comment>
		</sql>
	</changeSet>
	<changeSet id="50" author="simpletiny">
		<sql>
            <![CDATA[
        		ALTER TABLE product_order 
					ADD COLUMN passenger_captain VARCHAR(10) NULL COMMENT '名单代表' AFTER special_count;
             ]]>
			<comment>ALTER TABLE product_order</comment>
		</sql>
	</changeSet>
</databaseChangeLog>



