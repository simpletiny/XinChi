<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext"
	xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.1.xsd
        http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd">
	<changeSet id="1" author="simpletiny">
		<sql>
            <![CDATA[
            		ALTER TABLE product_order 
						ADD COLUMN standard_flg CHAR(1) NULL DEFAULT 'Y' COMMENT '是否为标准订单，Y是，N不是。' AFTER pk;
             ]]>
			<comment>ALTER TABLE product_order</comment>
		</sql>
	</changeSet>
	<changeSet id="2" author="simpletiny">
		<sql>
            <![CDATA[
            		ALTER TABLE product_order 
					ADD COLUMN product_pk CHAR(22) NULL COMMENT '产品pk，如果有则填写' AFTER standard_flg;
             ]]>
			<comment>ALTER TABLE product_order</comment>
		</sql>
	</changeSet>
	<changeSet id="3" author="simpletiny">
		<sql>
            <![CDATA[
            		ALTER TABLE product_order 
					ADD COLUMN days INT NULL COMMENT '游玩天数' AFTER product_pk;
             ]]>
			<comment>ALTER TABLE product_order</comment>
		</sql>
	</changeSet>
	<changeSet id="4" author="simpletiny">
		<sql>
            <![CDATA[
            		CREATE TABLE payable_order (
					  team_number VARCHAR(10) NOT NULL,
					  supplier_employee_pk CHAR(22) NOT NULL,
					  final_flg CHAR(1) NULL DEFAULT 'N',
					  budget_payable DECIMAL(12,2) NULL,
					  final_payable DECIMAL(12,2) NULL,
					  pk CHAR(22) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NOT NULL,
					  create_user VARCHAR(10) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL,
					  update_time VARCHAR(15) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL,
					  create_time VARCHAR(15) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL,
					  update_user VARCHAR(10) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL,
					  PRIMARY KEY (pk))
					ENGINE = InnoDB
					DEFAULT CHARACTER SET = utf8
					COLLATE = utf8_bin
					COMMENT = '每个订单涉及到的应付款';
             ]]>
			<comment>CREATE TABLE payable_order</comment>
		</sql>
	</changeSet>
	<changeSet id="5" author="simpletiny">
		<sql>
            <![CDATA[
            	DROP VIEW IF EXISTS view_order_air_info;
				CREATE VIEW view_order_air_info AS
				   SELECT 				
				   		A.product_order_number,
				        A.flight_leg AS air_leg,
				        A.flight_index AS info_index,
						A.start_day AS day_index,
				        CONCAT(A.start_city,'--',A.end_city) AS from_to_city,
                           B.pk AS need_pk,
				        B.ticket_client_number,
				        B.departure_date
				    FROM
				        product_order_air_info A 
                           LEFT JOIN
                           air_ticket_need B ON A.product_order_number = B.product_order_number;
             ]]>
			<comment>ALTER VIEW view_order_air_info</comment>
		</sql>
	</changeSet>
	<changeSet id="6" author="simpletiny">
		<sql>
            <![CDATA[
            	ALTER TABLE season_ticket_base 
					ADD COLUMN special_price DECIMAL(12,2) NULL COMMENT '儿童价格' AFTER update_user;
             ]]>
			<comment>ALTER TABLE season_ticket_base</comment>
		</sql>
	</changeSet>
	<changeSet id="7" author="simpletiny">
		<sql>
            <![CDATA[
            	ALTER TABLE air_ticket_order 
				ADD COLUMN special_price DECIMAL(12,2) NULL COMMENT '儿童价格' AFTER price;
             ]]>
			<comment>ALTER TABLE air_ticket_order</comment>
		</sql>
	</changeSet>
	<changeSet id="8" author="simpletiny">
		<sql>
            <![CDATA[
            	ALTER TABLE air_ticket_name_list 
					CHANGE COLUMN team_number team_number VARCHAR(10) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL ,
					CHANGE COLUMN status status CHAR(1) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT 'I' COMMENT 'I待出票，Y已出票，T航变' ,
					ADD COLUMN order_number VARCHAR(10) NULL COMMENT '票务订单号' AFTER status,
					ADD COLUMN comment VARCHAR(200) NULL COMMENT '备注' AFTER order_number;
             ]]>
			<comment>ALTER TABLE air_ticket_name_list</comment>
		</sql>
	</changeSet>
	<changeSet id="9" author="simpletiny">
		<sql>
            <![CDATA[
            DROP view if exists view_passenger_allot;
			CREATE VIEW view_passenger_allot AS
				    SELECT 
				        A.pk AS passenger_pk,
				        A.id,
				        A.name,
				        B.date,
				        B.from_city,
				        B.to_city,
                        B.start_time,
                        B.end_time,
                        B.start_place,
                        B.end_place,
                        B.ticket_number,
				        A.ticket_order_pk,
				        IF(C.pk IS NULL, 'N', 'Y') AS is_allot
				    FROM
				        air_ticket_name_list A
				            LEFT JOIN
				        air_ticket_order_leg B ON A.ticket_order_pk = B.ticket_order_pk
				            LEFT JOIN
				        passenger_ticket_info C ON A.pk = C.passenger_pk
				            AND C.from_to_city = CONCAT(B.from_city, '--', B.to_city);
             ]]>
			<comment>ALTER VIEW view_passenger_allot</comment>
		</sql>
	</changeSet>
	<changeSet id="10" author="simpletiny">
		<sql>
            <![CDATA[
          		ALTER TABLE product_order_operation 
					ADD COLUMN passenger_captain VARCHAR(10) NULL COMMENT '游客队长' AFTER off_day;
             ]]>
			<comment>ALTER TABLE product_order_operation</comment>
		</sql>
	</changeSet>
	<changeSet id="11" author="simpletiny">
		<sql>
            <![CDATA[
          		CREATE VIEW view_team_payable AS
				    SELECT 
				        team_number,
				        GROUP_CONCAT(final_flg) AS final_flg,
				        SUM(IF(final_flg = 'Y',
				            final_payable,
				            budget_payable)) AS payable
				    FROM
				        payable
				    GROUP BY team_number;
             ]]>
			<comment>CREATE VIEW view_team_payable</comment>
		</sql>
	</changeSet>
	<changeSet id="12" author="simpletiny">
		<sql>
            <![CDATA[
          		ALTER TABLE air_ticket_order 
					ADD COLUMN passenger_captain VARCHAR(10) NULL AFTER special_price,
					ADD COLUMN product_name VARCHAR(8) NULL AFTER passenger_captain,
					ADD COLUMN departure_date VARCHAR(10) NULL AFTER product_name,
					ADD COLUMN comment VARCHAR(200) NULL AFTER departure_date;
             ]]>
			<comment>ALTER TABLE air_ticket_order</comment>
		</sql>
	</changeSet>
	<changeSet id="13" author="simpletiny">
		<sql>
            <![CDATA[
          		ALTER TABLE air_ticket_order 
					CHANGE COLUMN product_name product_name VARCHAR(20) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL ;
             ]]>
			<comment>ALTER TABLE air_ticket_order</comment>
		</sql>
	</changeSet>
	<changeSet id="14" author="simpletiny">
		<sql>
            <![CDATA[
          		DROP VIEW IF EXISTS view_team_payable;
				CREATE VIEW view_team_payable AS
				    SELECT 
				        team_number,
				        GROUP_CONCAT(final_flg) AS final_flg,
				        SUM(IF(final_flg = 'Y',
				            final_payable,
				            budget_payable)) AS payable
				    FROM
				        payable_order
				    GROUP BY team_number;
             ]]>
			<comment>ALTER VIEW view_team_payable</comment>
		</sql>
	</changeSet>
	<changeSet id="15" author="simpletiny">
		<sql>
            <![CDATA[
          		CREATE VIEW view_passenger_ticket_cost AS
				SELECT DISTINCT
				    base_pk AS payable_pk,
				    ticket_source_pk,
				    ticket_cost,
				    passenger_pk
				FROM
				    passenger_ticket_info;
             ]]>
			<comment>CREATE VIEW view_passenger_ticket_cost</comment>
		</sql>
	</changeSet>
	<changeSet id="16" author="simpletiny">
		<sql>
            <![CDATA[
          		CREATE VIEW view_sum_ticket_cost AS
				    SELECT 
				        passenger_pk, SUM(ticket_cost) AS ticket_cost
				    FROM
				        view_passenger_ticket_cost
				    GROUP BY passenger_pk;
             ]]>
			<comment>CREATE VIEW view_sum_ticket_cost</comment>
		</sql>
	</changeSet>
	<changeSet id="17" author="simpletiny">
		<sql>
            <![CDATA[
          		ALTER TABLE air_ticket_name_list 
					ADD COLUMN change_pk CHAR(22) NULL COMMENT '航变信息pk，如果有航变才会有值' AFTER comment;
             ]]>
			<comment>ALTER TABLE air_ticket_name_list</comment>
		</sql>
	</changeSet>
	<changeSet id="18" author="simpletiny">
		<sql>
            <![CDATA[
          		CREATE TABLE air_ticket_change_log (
				  change_reason VARCHAR(10) NOT NULL,
				  change_cost DECIMAL(12,2) NOT NULL,
				  comment VARCHAR(200) NULL,
				  pk CHAR(22) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NOT NULL,
				  create_user VARCHAR(10) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL,
				  update_time VARCHAR(15) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL,
				  create_time VARCHAR(15) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL,
				  update_user VARCHAR(10) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL,
				  PRIMARY KEY (pk))
				ENGINE = InnoDB
				DEFAULT CHARACTER SET = utf8
				COLLATE = utf8_bin
				COMMENT = '航变记录表';
             ]]>
			<comment>CREATE TABLE air_ticket_change_log</comment>
		</sql>
	</changeSet>
	<changeSet id="19" author="simpletiny">
		<sql>
            <![CDATA[
          		ALTER TABLE air_ticket_payable 
					ADD COLUMN comment VARCHAR(20) NULL COMMENT '订单号' AFTER first_date;
             ]]>
			<comment>ALTER TABLE air_ticket_payable </comment>
		</sql>
	</changeSet>
	<changeSet id="20" author="simpletiny">
		<sql>
            <![CDATA[
            DROP view if exists view_passenger_allot;
			CREATE VIEW view_passenger_allot AS
				    SELECT 
				        A.pk AS passenger_pk,
				        A.id,
				        A.name,
				        B.date,
				        B.from_city,
				        B.to_city,
                        B.start_time,
                        B.end_time,
                        B.start_place,
                        B.end_place,
                        B.ticket_number,
				        A.ticket_order_pk,
				        IF(C.pk IS NULL, 'N', 'Y') AS is_allot,
                        A.team_number
				    FROM
				        air_ticket_name_list A
				            LEFT JOIN
				        air_ticket_order_leg B ON A.ticket_order_pk = B.ticket_order_pk
				            LEFT JOIN
				        passenger_ticket_info C ON A.pk = C.passenger_pk
				            AND C.from_to_city = CONCAT(B.from_city, '--', B.to_city);
             ]]>
			<comment>ALTER VIEW view_passenger_allot</comment>
		</sql>
	</changeSet>
	<changeSet id="21" author="simpletiny">
		<sql>
            <![CDATA[
            drop view if exists payable_return_date;
			CREATE VIEW payable_return_date AS
			    SELECT 
			        create_user, budget_balance, final_balance, return_date
			    FROM
			        payable;
				
			drop view if exists payable_a;
			CREATE VIEW payable_a AS
		    SELECT 
		        create_user,
		        COUNT(*) AS all_count,
		        SUM(budget_balance) AS all_budget_balance,
		        SUM(final_balance) AS all_final_balance,
		        SUM(CASE
		            WHEN ISNULL(final_balance) THEN budget_balance
		            ELSE final_balance
		        END) AS all_balance
		    FROM
		        payable
		    GROUP BY create_user;
				
                
            drop view if exists payable_b;
			CREATE VIEW payable_b AS
		    SELECT 
		        create_user,
		        COUNT(*) AS current_month_count,
		        SUM(budget_balance) AS current_month_budget_balance,
		        SUM(final_balance) AS current_month_final_balance,
		        SUM(CASE
		            WHEN ISNULL(final_balance) THEN budget_balance
		            ELSE final_balance
		        END) AS current_month_balance
		    FROM
		        payable_return_date
		    WHERE
		        LEFT(return_date, 7) = DATE_FORMAT(CURDATE(), '%Y-%m')
		    GROUP BY create_user;
				
			drop view if exists payable_c;
			CREATE VIEW payable_c AS
		    SELECT 
		        create_user,
		        COUNT(*) AS one_month_count,
		        SUM(budget_balance) AS one_month_budget_balance,
		        SUM(final_balance) AS one_month_final_balance,
		        SUM(CASE
		            WHEN ISNULL(final_balance) THEN budget_balance
		            ELSE final_balance
		        END) AS one_month_balance
		    FROM
		        payable_return_date
		    WHERE
		        LEFT(return_date, 7) = DATE_FORMAT(DATE_ADD(CURDATE(), INTERVAL - 1 MONTH),
		                '%Y-%m')
		    GROUP BY create_user;
				
            drop view if exists payable_d;
			CREATE VIEW payable_d AS
		    SELECT 
		        create_user,
		        COUNT(*) AS two_month_count,
		        SUM(budget_balance) AS two_month_budget_balance,
		        SUM(final_balance) AS two_month_final_balance,
		        SUM(CASE
		            WHEN ISNULL(final_balance) THEN budget_balance
		            ELSE final_balance
		        END) AS two_month_balance
		    FROM
		        payable_return_date
		    WHERE
		        LEFT(return_date, 7) = DATE_FORMAT(DATE_ADD(CURDATE(), INTERVAL - 2 MONTH),
		                '%Y-%m')
		    GROUP BY create_user;
				
            drop view if exists payable_e;
			CREATE VIEW payable_e AS
		    SELECT 
		        create_user,
		        COUNT(*) AS three_month_count,
		        SUM(budget_balance) AS three_month_budget_balance,
		        SUM(final_balance) AS three_month_final_balance,
		        SUM(CASE
		            WHEN ISNULL(final_balance) THEN budget_balance
		            ELSE final_balance
		        END) AS three_month_balance
		    FROM
		        payable_return_date
		    WHERE
		        LEFT(return_date, 7) = DATE_FORMAT(DATE_ADD(CURDATE(), INTERVAL - 3 MONTH),
		                '%Y-%m')
		    GROUP BY create_user;
    
			drop view if exists payable_f;
			CREATE VIEW payable_f AS
		    SELECT 
		        create_user,
		        COUNT(*) AS earlier_month_count,
		        SUM(budget_balance) AS earlier_month_budget_balance,
		        SUM(final_balance) AS earlier_month_final_balance,
		        SUM(CASE
		            WHEN ISNULL(final_balance) THEN budget_balance
		            ELSE final_balance
		        END) AS earlier_month_balance
		    FROM
		        payable_return_date
		    WHERE
		        LEFT(return_date, 7) < DATE_FORMAT(DATE_ADD(CURDATE(), INTERVAL - 3 MONTH),
		                '%Y-%m')
		    GROUP BY create_user;
				
			drop view if exists payable_summary;
			CREATE VIEW payable_summary AS
		    SELECT 
		        A.user_number,
		        A.user_name,
		        B.all_count,
		        B.all_budget_balance,
		        B.all_final_balance,
		        B.all_balance,
		        C.current_month_count,
		        C.current_month_budget_balance,
		        C.current_month_final_balance,
		        C.current_month_balance,
		        D.one_month_count,
		        D.one_month_budget_balance,
		        D.one_month_final_balance,
		        D.one_month_balance,
		        E.two_month_count,
		        E.two_month_budget_balance,
		        E.two_month_final_balance,
		        E.two_month_balance,
		        F.three_month_count,
		        F.three_month_budget_balance,
		        F.three_month_final_balance,
		        F.three_month_balance,
		        G.earlier_month_count,
		        G.earlier_month_budget_balance,
		        G.earlier_month_final_balance,
		        G.earlier_month_balance
		    FROM
		        user_number A
		            LEFT JOIN
		        payable_a B ON A.user_number = B.create_user
		            LEFT JOIN
		        payable_b C ON A.user_number = C.create_user
		            LEFT JOIN
		        payable_c D ON A.user_number = D.create_user
		            LEFT JOIN
		        payable_d E ON A.user_number = E.create_user
		            LEFT JOIN
		        payable_e F ON A.user_number = F.create_user
		            LEFT JOIN
		        payable_f G ON A.user_number = G.create_user;
             ]]>
			<comment>ALTER VIEW view_passenger_allot</comment>
		</sql>
	</changeSet>
	<changeSet id="22" author="simpletiny">
		<sql>
            <![CDATA[
          ALTER TABLE supplier_paid_detail 
			CHANGE COLUMN time time VARCHAR(16) NULL DEFAULT NULL COMMENT '支付时间' ,
			CHANGE COLUMN confirm_time confirm_time VARCHAR(16) NULL DEFAULT NULL COMMENT '审批时间' ,
			ADD COLUMN paid_user VARCHAR(10) NULL COMMENT '支付人' AFTER approve_user;
             ]]>
			<comment> ALTER TABLE supplier_paid_detail</comment>
		</sql>
	</changeSet>
	<changeSet id="23" author="simpletiny">
		<sql>
            <![CDATA[
            	DROP VIEW if exists paid_detail;
          		CREATE VIEW paid_detail AS 
				SELECT * FROM supplier_paid_detail WHERE type like '%STRIKE%'
				union all
				SELECT * FROM supplier_paid_detail WHERE type not like '%STRIKE%' 
				GROUP BY related_pk
             ]]>
			<comment> ALTER VIEW paid_detail</comment>
		</sql>
	</changeSet>
	<changeSet id="24" author="simpletiny">
		<sql>
            <![CDATA[
            	ALTER TABLE reimbursement 
				ADD COLUMN delete_flg CHAR NULL DEFAULT 'N' COMMENT '删除标识，因为关联待审批所以采用逻辑删除。' AFTER create_user;
             ]]>
			<comment>ALTER TABLE reimbursement </comment>
		</sql>
	</changeSet>
	<changeSet id="25" author="simpletiny">
		<sql>
            <![CDATA[
            	DROP VIEW IF EXISTS view_drop_off;
            	CREATE view view_drop_off AS
				SELECT 
				    A.first_ticket_date,
				    A.client_number,
                    A.first_start_city,
                    A.first_end_city,
				    A.name,
				    A.id,
				    B.ticket_number,
				    B.from_to_time,
				    B.from_to_city,
                    B.from_airport,
                    B.to_airport
				FROM
				    air_ticket_name_list A
				        LEFT JOIN
				    passenger_ticket_info B ON A.pk = B.passenger_pk
				WHERE
					B.ticket_index = 1;
             ]]>
			<comment>CREATE view view_drop_off</comment>
		</sql>
	</changeSet>
	<changeSet id="26" author="simpletiny">
		<sql>
            <![CDATA[
            	CREATE VIEW view_product_area AS
			    SELECT 
			        COUNT(IF(A.confirm_flg != 'N'
			                AND (B.final_type IS NULL
			                OR B.final_type != 4),
			            A.pk,
			            NULL)) AS order_cnt,
			        SUM(IF(A.confirm_flg != 'N'
			                AND (B.final_type IS NULL
			                OR B.final_type != 4),
			            (IFNULL(A.adult_count, 0) + IFNULL(A.special_count, 0)) * A.product_value,
			            0)) AS score,
			        SUM(IF(A.confirm_flg != 'N'
			                AND (B.final_type IS NULL
			                OR B.final_type != 4),
			            (IFNULL(A.adult_count, 0) + IFNULL(A.special_count, 0)),
			            0)) AS sum_people,
			        LEFT(A.confirm_date, 7) AS confirm_month,
			        A.product_manager_number AS product_manager_number,
			        C.user_name AS product_manager_name,
			        E.client_area AS area
			    FROM
			        budget_order_view A
			            LEFT JOIN
			        final_order_view B ON A.team_number = B.team_number
			            LEFT JOIN
			        user_base C ON A.product_manager_number = C.user_number
			            LEFT JOIN
			        client_employee D ON A.client_employee_pk = D.pk
			            LEFT JOIN
			        client E ON D.financial_body_pk = E.pk
			    GROUP BY A.product_manager_number , E.client_area , LEFT(A.confirm_date, 7)
			    HAVING confirm_month IS NOT NULL
			        AND area IS NOT NULL;
             ]]>
			<comment>CREATE view view_product_area</comment>
		</sql>
	</changeSet>
	<changeSet id="27" author="simpletiny">
		<sql>
            <![CDATA[
            	 CREATE view view_product_product AS
				 SELECT 
				        COUNT(IF(A.confirm_flg != 'N'
				                AND (B.final_type IS NULL
				                OR B.final_type != 4),
				            A.pk,
				            NULL)) AS order_cnt,
				        SUM(IF(A.confirm_flg != 'N'
				                AND (B.final_type IS NULL
				                OR B.final_type != 4),
				            (IFNULL(A.adult_count, 0) + IFNULL(A.special_count, 0)) * A.product_value,
				            0)) AS score,
				        SUM(IF(A.confirm_flg != 'N'
				                AND (B.final_type IS NULL
				                OR B.final_type != 4),
				            (IFNULL(A.adult_count, 0) + IFNULL(A.special_count, 0)),
				            0)) AS sum_people,
				        LEFT(A.confirm_date, 7) AS confirm_month,
				        A.product_pk AS product_pk,
				        C.name AS product_name,
				        C.product_manager AS product_manager_number,
				        D.user_name AS product_manager_name
				    FROM
				        budget_standard_order A
				            LEFT JOIN
				        final_standard_order B ON A.team_number = B.team_number
				            LEFT JOIN
				        product C ON A.product_pk = C.pk
				            LEFT JOIN
				        user_base D ON C.product_manager = D.user_number
				    GROUP BY C.product_manager , C.pk , LEFT(A.confirm_date, 7)
				    HAVING product_manager_number is not null;
             ]]>
			<comment>CREATE view view_product_product</comment>
		</sql>
	</changeSet>
	<changeSet id="28" author="simpletiny">
		<sql>
            <![CDATA[
            	 CREATE view view_product_sale AS
				    SELECT 
				        COUNT(IF(A.confirm_flg != 'N'
				                AND (B.final_type IS NULL
				                OR B.final_type != 4),
				            A.pk,
				            NULL)) AS order_cnt,
				        SUM(IF(A.confirm_flg != 'N'
				                AND (B.final_type IS NULL
				                OR B.final_type != 4),
				            (IFNULL(A.adult_count, 0) + IFNULL(A.special_count, 0)) * A.product_value,
				            0)) AS score,
				        SUM(IF(A.confirm_flg != 'N'
				                AND (B.final_type IS NULL
				                OR B.final_type != 4),
				            (IFNULL(A.adult_count, 0) + IFNULL(A.special_count, 0)),
				            0)) AS sum_people,
				        LEFT(A.confirm_date, 7) AS confirm_month,
				        A.create_user_number AS sale_number,
				        C.user_name AS sale_name,
				        A.product_manager_number AS product_manager_number,
				        D.user_name AS product_manager_name
				    FROM
				        budget_order_view A
				            LEFT JOIN
				        final_order_view B ON A.team_number = B.team_number
				            LEFT JOIN
				        user_base C ON A.create_user_number = C.user_number
							LEFT JOIN
						user_base D ON A.product_manager_number = D.user_number
				    GROUP BY A.product_manager_number, A.create_user , LEFT(A.confirm_date, 7);
             ]]>
			<comment>CREATE view view_product_sale</comment>
		</sql>
	</changeSet>
	<changeSet id="29" author="simpletiny">
		<sql>
            <![CDATA[
            	 CREATE TABLE supplier_deposit (
					  voucher_number CHAR(16) NOT NULL COMMENT '凭证号，与支出银行流水挂钩',
					  received_voucher_number CHAR(16) NULL COMMENT '退回凭证号，与收入银行流水或业务冲账挂钩',
					  account VARCHAR(20) NOT NULL COMMENT '支出账户',
					  supplier_pk VARCHAR(45) NOT NULL COMMENT '供应商pk',
					  money DECIMAL(12,2) NOT NULL COMMENT '金额',
					  received DECIMAL(12,2) NULL COMMENT '已收回',
					  balance DECIMAL(12,2) NULL COMMENT '还剩',
					  return_date VARCHAR(10) NULL COMMENT '到期时间(归还时间)',
					  status CHAR(1) NULL DEFAULT 'N' COMMENT 'N在押有balance就是在押，Y已清',
					  return_way VARCHAR(3) NULL COMMENT '归还途径，C冲账，T退还，C,T冲账加退还',
					  deposit_type CHAR(1) NOT NULL DEFAULT 'A' COMMENT '押金用途,A航司押金（后期有别的再添加)',
					  comment VARCHAR(200) NULL COMMENT '备注',
					  update_user VARCHAR(10) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL,
					  create_time VARCHAR(15) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL,
					  update_time VARCHAR(15) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL,
					  create_user VARCHAR(10) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL,
					  pk CHAR(22) NOT NULL,
					  PRIMARY KEY (pk))
					ENGINE = InnoDB
					DEFAULT CHARACTER SET = utf8
					COLLATE = utf8_bin
					COMMENT = '供应商押金表';
             ]]>
			<comment> CREATE TABLE supplier_deposit</comment>
		</sql>
	</changeSet>
	<changeSet id="30" author="simpletiny">
		<sql>
            <![CDATA[
            	 CREATE TABLE deposit_payment (
				  deposit_pk CHAR(22) NOT NULL COMMENT '押金账pk',
				  payment_voucher_number CHAR(16) NOT NULL COMMENT '银行流水押金退反收入voucher_number',
				  pk CHAR(22) NOT NULL COMMENT '押金账和银行流水押金退反收入对应关系表',
				  PRIMARY KEY (pk));
             ]]>
			<comment> CREATE TABLE deposit_payment</comment>
		</sql>
	</changeSet>
</databaseChangeLog>




