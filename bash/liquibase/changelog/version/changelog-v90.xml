<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext"
	xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.1.xsd
        http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd">
	<changeSet id="1" author="simpletiny">
		<sql>
            <![CDATA[
            		ALTER TABLE deposit_ticket_paid 
						ADD COLUMN type VARCHAR(10) NULL COMMENT '支付类型' AFTER money;
             ]]>
			<comment>ALTER TABLE deposit_ticket_paid</comment>
		</sql>
	</changeSet>
	<changeSet id="2" author="simpletiny">
		<sql>
            <![CDATA[
            		CREATE VIEW view_discount_receivable AS
						SELECT 
						    A.team_number AS team_number,
						    A.create_user AS user_number,
						    D.final_type,
						    A.confirm_date AS confirm_date,
							IF(B.final_flg='Y',B.final_receivable,B.budget_receivable) as receivable,
						    C.status,
						    SUM(C.received) AS discount_received,
						    IF(B.final_flg='Y',B.final_balance,B.budget_balance) as balance,
						    DATE_FORMAT(FROM_UNIXTIME( B.update_time/1000),'%Y-%m-%d') AS update_time
						FROM
						    budget_order_view A
						        LEFT JOIN
						    final_order_view D ON A.team_number = D.team_number
						        LEFT JOIN
						    receivable B ON A.team_number = B.team_number
						        LEFT JOIN
						    client_received_detail C ON A.team_number = C.team_number
						        AND LEFT(C.received_time, 10) <= (A.confirm_date + INTERVAL 1 DAY)
						        AND C.status = 'E'
						        AND C.type != 'TAIL98'
						WHERE
						    C.team_number IS NOT NULL AND (D.final_type is null OR D.final_type!=4)
						GROUP BY A.team_number
						HAVING balance=0 AND discount_received>=receivable*0.98 and receivable >=discount_received;
             ]]>
			<comment>CREATE VIEW view_discount_receivable</comment>
		</sql>
	</changeSet>
	<changeSet id="3" author="simpletiny">
		<sql>
            <![CDATA[
            		ALTER TABLE air_ticket_need 
						CHANGE COLUMN product_name product_name VARCHAR(20) NOT NULL ;
             ]]>
			<comment>ALTER TABLE air_ticket_need </comment>
		</sql>
	</changeSet>
	<changeSet id="4" author="simpletiny">
		<sql>
            <![CDATA[
            		ALTER TABLE supplier_paid_detail
					ADD COLUMN payable_pk CHAR(22) NULL COMMENT '关联的应付款pk' AFTER paid_user;
             ]]>
			<comment>ALTER TABLE supplier_paid_detail</comment>
		</sql>
	</changeSet>
	<changeSet id="5" author="simpletiny">
		<sql>
            <![CDATA[
            		ALTER TABLE budget_non_standard_order 
					CHANGE COLUMN independent_flg independent_flg CHAR(1) NULL DEFAULT 'N' COMMENT '是否为独立团，Y独立团，N非独立，A单机票';
             ]]>
			<comment>ALTER TABLE budget_non_standard_order</comment>
		</sql>
	</changeSet>
	<changeSet id="6" author="simpletiny">
		<sql>
            <![CDATA[
            		CREATE TABLE sale_order_ticket_info (
					  create_user VARCHAR(10) NULL DEFAULT NULL,
					  update_user VARCHAR(10) NULL DEFAULT NULL,
					  create_time VARCHAR(15) NULL DEFAULT NULL,
					  update_time VARCHAR(15) NULL DEFAULT NULL,
					  pk CHAR(22) NOT NULL,
					  team_number VARCHAR(10) NULL,
					  ticket_index TINYINT NULL,
					  ticket_date VARCHAR(10) NULL,
					  from_city VARCHAR(10) NULL,
					  to_city VARCHAR(10) NULL,
					  order_pk CHAR(22) NULL,
					  comment VARCHAR(200) NULL COMMENT '票务需求，有多条记录的数据，只存储于ticket_index为1的行',
					  PRIMARY KEY (pk))
					ENGINE = InnoDB
					DEFAULT CHARACTER SET = utf8
					COLLATE = utf8_bin
					COMMENT = '订单机票信息（目前用于单机票）';
             ]]>
			<comment>CREATE TABLE sale_order_ticket_info</comment>
		</sql>
	</changeSet>
	<changeSet id="7" author="simpletiny">
		<sql>
            <![CDATA[
            	DROP VIEW IF EXISTS view_order_count;
				CREATE VIEW view_order_count AS
				    SELECT 
				        A.client_employee_pk AS client_employee_pk,
				        COUNT(A.pk) AS order_count,
				        COUNT(IF(A.departure_date >= DATE_FORMAT(DATE_ADD(NOW(), INTERVAL - 20 DAY),
				                    '%Y-%m-%d'),
				            1,
				            NULL)) AS day21_count,
				        MAX(A.departure_date) AS last_confirm_date,
				        MIN(if(A.departure_date is null or A.departure_date = '','2099-01-01',A.departure_date)) AS first_confirm_date
				    FROM
				        budget_order_view A
				            LEFT JOIN
				        client_employee B ON A.client_employee_pk = B.pk
				        where B.pk is not null
				    GROUP BY A.client_employee_pk;
             ]]>
			<comment>ALTER VIEW view_order_count</comment>
		</sql>
	</changeSet>
	<changeSet id="8" author="simpletiny">
		<sql>
            <![CDATA[
            	ALTER TABLE supplier_paid_detail 
				ADD COLUMN voucher_file VARCHAR(30) NULL COMMENT '当类型为back即收入时的收入凭证文件' AFTER payable_pk,
				ADD COLUMN voucher_number VARCHAR(20) NULL DEFAULT NULL COMMENT '当类型为back即收入时的收入匹配之后与银行流水之间的凭证号' AFTER voucher_file;
             ]]>
			<comment>ALTER TABLE supplier_paid_detail</comment>
		</sql>
	</changeSet>
	<changeSet id="9" author="simpletiny">
		<sql>
            <![CDATA[
            	DROP VIEW if exists paid_detail;
          		CREATE VIEW paid_detail AS 
				SELECT * FROM supplier_paid_detail WHERE type like '%STRIKE%'
				union all
				SELECT * FROM supplier_paid_detail WHERE type not like '%STRIKE%' 
				GROUP BY related_pk
             ]]>
			<comment> ALTER VIEW paid_detail</comment>
		</sql>
	</changeSet>
	<changeSet id="10" author="simpletiny">
		<sql>
            <![CDATA[
            	ALTER TABLE air_ticket_paid_detail 
					ADD COLUMN card_account VARCHAR(50) NULL COMMENT '当type是BACK即收入时， 所记录的收入账户' AFTER receiver,
					ADD COLUMN voucher_file VARCHAR(30) NULL COMMENT '当为退返时的收入凭证' AFTER card_account;
             ]]>
			<comment>ALTER TABLE air_ticket_paid_detail </comment>
		</sql>
	</changeSet>
	<changeSet id="11" author="simpletiny">
		<sql>
            <![CDATA[
            	DROP VIEW if exists view_air_ticket_paid_detail;
          		CREATE VIEW view_air_ticket_paid_detail AS 
				SELECT * FROM air_ticket_paid_detail WHERE type LIKE '%STRIKE%'
				union all
				SELECT * FROM air_ticket_paid_detail WHERE type NOT LIKE '%STRIKE%' 
				GROUP BY related_pk
             ]]>
			<comment>ALTER VIEW view_air_ticket_paid_detail</comment>
		</sql>
	</changeSet>
	<changeSet id="12" author="simpletiny">
		<sql>
            <![CDATA[
            	CREATE VIEW view_all_need_match_received AS
				    SELECT 
				        IF(A.type = 'SUM',
				            A.sum_received,
				            A.received) AS received,
				        A.type AS type,
				        A.received_time,
				        A.card_account,
				        A.related_pk,
				        A.create_user AS apply_user,
				        DATE_FORMAT(FROM_UNIXTIME(A.create_time / 1000),
				                '%Y-%m-%d') AS apply_date,
				        B.name AS pay_user,
				        A.client_employee_pk AS pay_user_pk,
				        'C' AS from_where
				    FROM
				        received_detail A
				            LEFT JOIN
				        client_employee B ON A.client_employee_pk = B.pk
				    WHERE
				        A.type IN ('SUM' , 'RECEIVED')
				            AND A.status = 'I' 
				    UNION ALL SELECT 
				        A.allot_money AS received,
				        'BACK' AS type,
				        A.time AS received_time,
				        A.card_account,
				        A.related_pk,
				        A.create_user AS apply_user,
				        DATE_FORMAT(FROM_UNIXTIME(A.create_time / 1000),
				                '%Y-%m-%d') AS apply_date,
				        B.name AS pay_user,
				        A.supplier_employee_pk AS pay_user_pk,
				        'D' AS from_where
				    FROM
				        paid_detail A
				            LEFT JOIN
				        supplier_employee B ON A.supplier_employee_pk = B.pk
				    WHERE
				        A.type = 'BACK' AND A.status = 'I' 
				    UNION ALL SELECT 
				        A.allot_money AS received,
				        A.type AS type,
				        A.time AS received_time,
				        A.card_account,
				        A.related_pk,
				        A.create_user AS apply_user,
				        DATE_FORMAT(FROM_UNIXTIME(A.create_time / 1000),
				                '%Y-%m-%d') AS apply_date,
				        B.name AS pay_user,
				        A.supplier_employee_pk AS pay_user_pk,
				        'A' AS from_where
				    FROM
				        view_air_ticket_paid_detail A
				            LEFT JOIN
				        supplier_employee B ON A.supplier_employee_pk = B.pk
				    WHERE
				        A.type in('BACK','RECEIVE') AND A.status = 'I';
             ]]>
			<comment>CREATE VIEW view_all_need_match_received </comment>
		</sql>
	</changeSet>
	<changeSet id="13" author="simpletiny">
		<sql>
            <![CDATA[
            	ALTER TABLE received_match 
					ADD COLUMN from_where CHAR(1) NULL COMMENT '收入来源，A，票务退返，C，客户收入，D，地接退返' AFTER create_time;
             ]]>
			<comment>ALTER TABLE received_match</comment>
		</sql>
	</changeSet>
	<changeSet id="14" author="simpletiny">
		<sql>
            <![CDATA[
            	DROP VIEW if exists view_all_need_match_received;
				CREATE VIEW view_all_need_match_received AS
				SELECT 
				    IF(A.type = 'SUM',
				        A.sum_received,
				        A.received) AS received,
				    A.type AS type,
				    A.received_time,
				    A.card_account,
				    A.related_pk,
				    A.create_user AS apply_user,
				    DATE_FORMAT(FROM_UNIXTIME(A.create_time / 1000),
				            '%Y-%m-%d') AS apply_date,
				    B.name AS pay_user,
				    A.client_employee_pk AS pay_user_pk,
				    'C' AS from_where,
				   A.voucher_file As voucher_file
				FROM
				    received_detail A
				        LEFT JOIN
				    client_employee B ON A.client_employee_pk = B.pk
				WHERE
				    A.type IN ('SUM' , 'RECEIVED')
				        AND A.status = 'I' 
				UNION ALL SELECT 
				    A.allot_money AS received,
				    'BACK' AS type,
				    A.time AS received_time,
				    A.card_account,
				    A.related_pk,
				    A.create_user AS apply_user,
				    DATE_FORMAT(FROM_UNIXTIME(A.create_time / 1000),
				            '%Y-%m-%d') AS apply_date,
				    B.name AS pay_user,
				    A.supplier_employee_pk AS pay_user_pk,
				    'D' AS from_where,
				    A.voucher_file As voucher_file
				FROM
				    paid_detail A
				        LEFT JOIN
				    supplier_employee B ON A.supplier_employee_pk = B.pk
				WHERE
				    A.type = 'BACK' AND A.status = 'I' 
				UNION ALL SELECT 
				    A.allot_money AS received,
				    A.type AS type,
				    A.time AS received_time,
				    A.card_account,
				    A.related_pk,
				    A.create_user AS apply_user,
				    DATE_FORMAT(FROM_UNIXTIME(A.create_time / 1000),
				            '%Y-%m-%d') AS apply_date,
				    B.name AS pay_user,
				    A.supplier_employee_pk AS pay_user_pk,
				    'A' AS from_where,
				    A.voucher_file AS voucher_file
				FROM
				    view_air_ticket_paid_detail A
				        LEFT JOIN
				    supplier_employee B ON A.supplier_employee_pk = B.pk
				WHERE
				    A.type IN ('BACK' , 'RECEIVE')
				        AND A.status = 'I';
             ]]>
			<comment>ALTER TABLE received_match</comment>
		</sql>
	</changeSet>
	<changeSet id="15" author="simpletiny">
		<sql>
            <![CDATA[
            	ALTER TABLE team_report 
				CHANGE COLUMN pk pk CHAR(22) NOT NULL ;
             ]]>
			<comment>ALTER TABLE team_report </comment>
		</sql>
	</changeSet>
	<changeSet id="16" author="simpletiny">
		<sql>
            <![CDATA[
            	DROP VIEW if exists paid_detail;
				CREATE VIEW paid_detail AS
				    SELECT 
				        *,
				        team_number AS order_number,
				        'SINGLE' AS isOne
				    FROM
				        supplier_paid_detail
				    WHERE
				        type LIKE '%STRIKE%' 
				    UNION ALL SELECT 
				        *,
				        GROUP_CONCAT(team_number) AS order_number,
				        IF(COUNT(pk) > 1, 'SUM', 'SINGLE') AS isOne
				    FROM
				        supplier_paid_detail
				    WHERE
				        type NOT LIKE '%STRIKE%'
				    GROUP BY related_pk
             ]]>
			<comment>ALTER VIEW paid_detail </comment>
		</sql>
	</changeSet>
	<changeSet id="17" author="simpletiny">
		<sql>
            <![CDATA[
            	ALTER TABLE user_info 
					ADD COLUMN credit_limit DECIMAL(12,2) NULL DEFAULT '0.00' COMMENT '信用额度总额' AFTER user_role,
					ADD COLUMN credit_balance DECIMAL(12,2) NULL DEFAULT 0 COMMENT '可用信用额度' AFTER credit_limit;
             ]]>
			<comment>ALTER TABLE user_info </comment>
		</sql>
	</changeSet>
	<changeSet id="18" author="simpletiny">
		<sql>
            <![CDATA[
            	INSERT INTO base_data (name, type, order_index, level, ext1, delete_flg, can_edit, pk, update_user) VALUES ('销售信用额度', 'SCREDIT', '1', '1', 'N', 'N', 'Y', 'pk_scredit', 'N00000');
             ]]>
			<comment>INSERT INTO base_data</comment>
		</sql>
	</changeSet>
	<changeSet id="19" author="simpletiny">
		<sql>
            <![CDATA[
            	ALTER TABLE budget_non_standard_order 
					ADD COLUMN receivable_first_flg CHAR(1) NULL DEFAULT 'N' COMMENT '先生成团款标识' AFTER passenger_captain;
             ]]>
			<comment>ALTER TABLE budget_non_standard_order </comment>
		</sql>
	</changeSet>
	<changeSet id="20" author="simpletiny">
		<sql>
            <![CDATA[
            	ALTER TABLE budget_standard_order 
					ADD COLUMN receivable_first_flg CHAR(1) NULL DEFAULT 'N' COMMENT '先生成团款标识' AFTER name_confirm_status;

             ]]>
			<comment>ALTER TABLE budget_standard_order </comment>
		</sql>
	</changeSet>
	<changeSet id="21" author="simpletiny">
		<sql>
            <![CDATA[
            	DROP VIEW IF EXISTS budget_order_view;
				CREATE VIEW budget_order_view AS
					select  A.team_number, 
					    	A.product_name,
							'' as product_pk,
					    	A.client_employee_pk, 
					    	C.name AS client_employee_name,
					    	A.independent_flg, 
					    	A.comment, 
					    	A.other_cost_comment, 
					    	A.other_cost, 
					    	A.fy, 
					    	A.special_cost, 
					    	A.special_count, 
					    	A.adult_cost, 
					    	A.adult_count, 
					    	A.receivable, 
					    	A.days, 
					    	A.departure_date, 
					    	A.pk, 
					    	A.update_user,
					    	A.create_user AS create_user_number,
					    	B.user_name AS create_user,
					    	A.confirm_flg, 
					    	A.create_time,
					    	A.update_time,
					    	A.confirm_date,
					    	A.confirm_file,
					    	'N' AS standard_flg,
					    	A.product_manager AS product_manager_number,
					    	D.user_name AS product_manager,
					    	A.air_ticket_cost,
					    	A.product_cost,
					    	A.operate_flg,
					    	A.name_list,
                            A.lock_flg,
                            A.name_confirm_status,
                            A.passenger_captain,
                            '' AS receivable_comment,
                            '' AS treat_comment,
                            '' AS client_name,
                            '' AS ticket_number,
                            '' AS start_city,
                            '' AS start_airport,
                            '' AS end_city,
                            '' AS end_airport,
                            '' AS off_time,
                            '' AS land_time,
                            '' AS next_day,
                            case when
							A.departure_date>now() then 'no'
							when now()>=A.departure_date and
							DATE_ADD(A.departure_date,interval A.days-1 day) >
							now()
							then 'yes'
							when now()>=DATE_ADD(A.departure_date,interval A.days-1 day) then 'back'
							end
							AS status,
							0 AS product_value,
							A.receivable_first_flg
					from budget_non_standard_order A LEFT JOIN user_base B ON A.create_user = B.user_number
					LEFT JOIN client_employee C ON A.client_employee_pk = C.pk
					LEFT JOIN user_base D ON A.product_manager = D.user_number
					union all 
					select  A.team_number, 
					    	C.name AS product_name,
							A.product_pk,
					    	A.client_employee_pk,
					    	D.name AS client_employee_name,
					    	A.independent_flg, 
					    	A.comment, 
					    	A.other_cost_comment, 
					    	A.other_cost, 
					    	A.fy, 
					    	A.special_cost, 
					    	A.special_count, 
					    	A.adult_cost, 
					    	A.adult_count, 
					    	A.receivable, 
					    	A.days, 
					    	A.departure_date, 
					    	A.pk, 
					    	A.update_user, 
					    	A.create_user AS create_user_number, 
					    	B.user_name AS create_user,
					    	A.confirm_flg, 
					    	A.create_time,
					    	A.update_time,
					    	A.confirm_date,
					    	A.confirm_file,
					    	'Y' AS standard_flg,
					    	C.product_manager AS product_manager_number,
					    	E.user_name AS product_manager,
					    	A.air_ticket_cost,
					    	A.product_cost,
					    	A.operate_flg,
					    	A.name_list,
                            A.lock_flg,
                            A.name_confirm_status,
                            A.passenger_captain,
                            A.receivable_comment,
                            A.treat_comment,
                            F.client_short_name AS client_name,
                            A.ticket_number,
                            A.start_city,
                            A.start_airport,
                            A.end_city,
                            A.end_airport,
                            A.off_time,
                            A.land_time,
                            A.next_day,
                            case when
							A.departure_date>now() then 'no'
							when now()>=A.departure_date and
							DATE_ADD(A.departure_date,interval A.days-1 day) >
							now()
							then 'yes'
							when now()>=DATE_ADD(A.departure_date,interval A.days-1 day) then 'back'
							end
							AS status,
							A.product_value,
							A.receivable_first_flg
					from budget_standard_order A LEFT JOIN user_base B ON A.create_user = B.user_number
					LEFT JOIN product C ON A.product_pk = C.pk
					LEFT JOIN client_employee D ON A.client_employee_pk = D.pk
       				LEFT JOIN user_base E ON C.product_manager = E.user_number
       				LEFT JOIN client F ON D.financial_body_pk = F.pk;

             ]]>
			<comment>ALTER VIEW budget_order_view </comment>
		</sql>
	</changeSet>
</databaseChangeLog>




