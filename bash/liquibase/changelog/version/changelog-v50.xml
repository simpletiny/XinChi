<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext"
	xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.1.xsd
        http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd">
	<changeSet id="1" author="simpletiny">
		<sql>
            <![CDATA[
            	ALTER TABLE xinchi.budget_standard_order 
				ADD COLUMN passenger_captain VARCHAR(10) NULL COMMENT '队长名称' AFTER receivable_comment;
             ]]>
			<comment>ALTER TABLE budget_standard_order </comment>
		</sql>
	</changeSet>
	<changeSet id="2" author="simpletiny">
		<sql>
            <![CDATA[
            		DROP VIEW IF EXISTS budget_order_view;
            		CREATE VIEW budget_order_view AS
					select  A.team_number, 
					    	A.product_name,
							'' as product_pk,
					    	A.client_employee_pk, 
					    	C.name AS client_employee_name,
					    	A.independent_flg, 
					    	A.comment, 
					    	A.other_cost_comment, 
					    	A.other_cost, 
					    	A.fy, 
					    	A.special_cost, 
					    	A.special_count, 
					    	A.adult_cost, 
					    	A.adult_count, 
					    	A.receivable, 
					    	A.days, 
					    	A.departure_date, 
					    	A.pk, 
					    	A.update_user,
					    	A.create_user AS create_user_number,
					    	B.user_name AS create_user,
					    	A.confirm_flg, 
					    	A.create_time,
					    	A.update_time,
					    	A.confirm_date,
					    	A.confirm_file,
					    	'N' AS standard_flg,
					    	A.product_manager AS product_manager_number,
					    	D.user_name AS product_manager,
					    	A.air_ticket_cost,
					    	A.product_cost,
					    	A.operate_flg,
					    	A.name_list,
                            '' AS passenger_captain,
                            '' AS receivable_comment,
                            '' AS treat_comment
					from budget_non_standard_order A LEFT JOIN user_base B ON A.create_user = B.user_number
					LEFT JOIN client_employee C ON A.client_employee_pk = C.pk
					LEFT JOIN user_base D ON A.product_manager = D.user_number
					union all 
					select  A.team_number, 
					    	C.name AS product_name,
							A.product_pk,
					    	A.client_employee_pk,
					    	D.name AS client_employee_name,
					    	A.independent_flg, 
					    	A.comment, 
					    	A.other_cost_comment, 
					    	A.other_cost, 
					    	A.fy, 
					    	A.special_cost, 
					    	A.special_count, 
					    	A.adult_cost, 
					    	A.adult_count, 
					    	A.receivable, 
					    	A.days, 
					    	A.departure_date, 
					    	A.pk, 
					    	A.update_user, 
					    	A.create_user AS create_user_number, 
					    	B.user_name AS create_user,
					    	A.confirm_flg, 
					    	A.create_time,
					    	A.update_time,
					    	A.confirm_date,
					    	A.confirm_file,
					    	'Y' AS standard_flg,
					    	C.product_manager AS product_manager_number,
					    	E.user_name AS product_manager,
					    	A.air_ticket_cost,
					    	A.product_cost,
					    	A.operate_flg,
					    	A.name_list,
                            A.passenger_captain,
                            A.receivable_comment,
                            A.treat_comment
					from budget_standard_order A LEFT JOIN user_base B ON A.create_user = B.user_number
					LEFT JOIN product C ON A.product_pk = C.pk
					LEFT JOIN client_employee D ON A.client_employee_pk = D.pk
       				LEFT JOIN user_base E ON C.product_manager = E.user_number
             ]]>
			<comment>ALTER VIEW budget_order_view </comment>
		</sql>
	</changeSet>
	<changeSet id="3" author="simpletiny">
		<sql>
            <![CDATA[
            		update sale_order_name_list set chairman='Y' where pk in(
					select A.pk from (SELECT 
						pk,
					    MIN(SUBSTR(id, 7, 8))
					FROM
					    sale_order_name_list
					    where isnull(order_pk )
					    group by team_number) A)
             ]]>
			<comment>UPDATE sale_order_name_list</comment>
		</sql>
	</changeSet>
	<changeSet id="4" author="simpletiny">
		<sql>
            <![CDATA[
            		ALTER TABLE budget_standard_order 
						ADD COLUMN ticket_number VARCHAR(10) NULL AFTER passenger_captain,
						ADD COLUMN start_city VARCHAR(10) NULL AFTER ticket_number,
						ADD COLUMN start_airport VARCHAR(10) NULL AFTER start_city,
						ADD COLUMN end_city VARCHAR(10) NULL AFTER start_airport,
						ADD COLUMN end_airport VARCHAR(10) NULL AFTER end_city,
						ADD COLUMN off_time VARCHAR(5) NULL AFTER end_airport,
						ADD COLUMN land_time VARCHAR(5) NULL AFTER off_time,
						ADD COLUMN next_day TINYINT NULL DEFAULT 0  AFTER land_time;
             ]]>
			<comment>ALTER TABLE budget_standard_order </comment>
		</sql>
	</changeSet>
	<changeSet id="5" author="simpletiny">
		<sql>
            <![CDATA[
            		DROP VIEW IF EXISTS budget_order_view;
            		CREATE VIEW budget_order_view AS
					select  A.team_number, 
					    	A.product_name,
							'' as product_pk,
					    	A.client_employee_pk, 
					    	C.name AS client_employee_name,
					    	A.independent_flg, 
					    	A.comment, 
					    	A.other_cost_comment, 
					    	A.other_cost, 
					    	A.fy, 
					    	A.special_cost, 
					    	A.special_count, 
					    	A.adult_cost, 
					    	A.adult_count, 
					    	A.receivable, 
					    	A.days, 
					    	A.departure_date, 
					    	A.pk, 
					    	A.update_user,
					    	A.create_user AS create_user_number,
					    	B.user_name AS create_user,
					    	A.confirm_flg, 
					    	A.create_time,
					    	A.update_time,
					    	A.confirm_date,
					    	A.confirm_file,
					    	'N' AS standard_flg,
					    	A.product_manager AS product_manager_number,
					    	D.user_name AS product_manager,
					    	A.air_ticket_cost,
					    	A.product_cost,
					    	A.operate_flg,
					    	A.name_list,
                            '' AS passenger_captain,
                            '' AS receivable_comment,
                            '' AS treat_comment,
                            '' AS client_name,
                            '' AS ticket_number,
                            '' AS start_city,
                            '' AS start_airport,
                            '' AS end_city,
                            '' AS end_airport,
                            '' AS off_time,
                            '' AS land_time,
                            '' AS next_day
					from budget_non_standard_order A LEFT JOIN user_base B ON A.create_user = B.user_number
					LEFT JOIN client_employee C ON A.client_employee_pk = C.pk
					LEFT JOIN user_base D ON A.product_manager = D.user_number
					union all 
					select  A.team_number, 
					    	C.name AS product_name,
							A.product_pk,
					    	A.client_employee_pk,
					    	D.name AS client_employee_name,
					    	A.independent_flg, 
					    	A.comment, 
					    	A.other_cost_comment, 
					    	A.other_cost, 
					    	A.fy, 
					    	A.special_cost, 
					    	A.special_count, 
					    	A.adult_cost, 
					    	A.adult_count, 
					    	A.receivable, 
					    	A.days, 
					    	A.departure_date, 
					    	A.pk, 
					    	A.update_user, 
					    	A.create_user AS create_user_number, 
					    	B.user_name AS create_user,
					    	A.confirm_flg, 
					    	A.create_time,
					    	A.update_time,
					    	A.confirm_date,
					    	A.confirm_file,
					    	'Y' AS standard_flg,
					    	C.product_manager AS product_manager_number,
					    	E.user_name AS product_manager,
					    	A.air_ticket_cost,
					    	A.product_cost,
					    	A.operate_flg,
					    	A.name_list,
                            A.passenger_captain,
                            A.receivable_comment,
                            A.treat_comment,
                            F.client_short_name AS client_name,
                            A.ticket_number,
                            A.start_city,
                            A.start_airport,
                            A.end_city,
                            A.end_airport,
                            A.off_time,
                            A.land_time,
                            A.next_day
					from budget_standard_order A LEFT JOIN user_base B ON A.create_user = B.user_number
					LEFT JOIN product C ON A.product_pk = C.pk
					LEFT JOIN client_employee D ON A.client_employee_pk = D.pk
       				LEFT JOIN user_base E ON C.product_manager = E.user_number
       				LEFT JOIN client F ON D.financial_body_pk = F.pk
             ]]>
			<comment>ALTER VIEW budget_order_view </comment>
		</sql>
	</changeSet>
	<changeSet id="6" author="simpletiny">
		<sql>
            <![CDATA[
            	ALTER TABLE budget_standard_order 
				CHANGE COLUMN start_city start_city VARCHAR(10) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT '' ,
				CHANGE COLUMN start_airport start_airport VARCHAR(10) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT '' ,
				CHANGE COLUMN end_city end_city VARCHAR(10) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT '' ,
				CHANGE COLUMN end_airport end_airport VARCHAR(10) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT '' ;
				
				update budget_standard_order set start_city ='' where start_city is null;
				update budget_standard_order set start_airport ='' where start_airport is null;
				update budget_standard_order set end_city ='' where end_city is null;
				update budget_standard_order set end_airport ='' where end_airport is null;
             ]]>
			<comment>ALTER TABLE budget_standard_order </comment>
		</sql>
	</changeSet>


	<changeSet id="7" author="simpletiny">
		<sql>
            <![CDATA[
            		DROP VIEW IF EXISTS budget_order_view;
            		CREATE VIEW budget_order_view AS
					select  A.team_number, 
					    	A.product_name,
							'' as product_pk,
					    	A.client_employee_pk, 
					    	C.name AS client_employee_name,
					    	A.independent_flg, 
					    	A.comment, 
					    	A.other_cost_comment, 
					    	A.other_cost, 
					    	A.fy, 
					    	A.special_cost, 
					    	A.special_count, 
					    	A.adult_cost, 
					    	A.adult_count, 
					    	A.receivable, 
					    	A.days, 
					    	A.departure_date, 
					    	A.pk, 
					    	A.update_user,
					    	A.create_user AS create_user_number,
					    	B.user_name AS create_user,
					    	A.confirm_flg, 
					    	A.create_time,
					    	A.update_time,
					    	A.confirm_date,
					    	A.confirm_file,
					    	'N' AS standard_flg,
					    	A.product_manager AS product_manager_number,
					    	D.user_name AS product_manager,
					    	A.air_ticket_cost,
					    	A.product_cost,
					    	A.operate_flg,
					    	A.name_list,
                            '' AS passenger_captain,
                            '' AS receivable_comment,
                            '' AS treat_comment,
                            '' AS client_name,
                            '' AS ticket_number,
                            '' AS start_city,
                            '' AS start_airport,
                            '' AS end_city,
                            '' AS end_airport,
                            '' AS off_time,
                            '' AS land_time,
                            '' AS next_day,
                            case when
							A.departure_date>now() then 'no'
							when now()>=A.departure_date and
							DATE_ADD(A.departure_date,interval A.days-1 day) >
							now()
							then 'yes'
							when now()>=DATE_ADD(A.departure_date,interval A.days-1 day) then 'back'
							end
							AS status
					from budget_non_standard_order A LEFT JOIN user_base B ON A.create_user = B.user_number
					LEFT JOIN client_employee C ON A.client_employee_pk = C.pk
					LEFT JOIN user_base D ON A.product_manager = D.user_number
					union all 
					select  A.team_number, 
					    	C.name AS product_name,
							A.product_pk,
					    	A.client_employee_pk,
					    	D.name AS client_employee_name,
					    	A.independent_flg, 
					    	A.comment, 
					    	A.other_cost_comment, 
					    	A.other_cost, 
					    	A.fy, 
					    	A.special_cost, 
					    	A.special_count, 
					    	A.adult_cost, 
					    	A.adult_count, 
					    	A.receivable, 
					    	A.days, 
					    	A.departure_date, 
					    	A.pk, 
					    	A.update_user, 
					    	A.create_user AS create_user_number, 
					    	B.user_name AS create_user,
					    	A.confirm_flg, 
					    	A.create_time,
					    	A.update_time,
					    	A.confirm_date,
					    	A.confirm_file,
					    	'Y' AS standard_flg,
					    	C.product_manager AS product_manager_number,
					    	E.user_name AS product_manager,
					    	A.air_ticket_cost,
					    	A.product_cost,
					    	A.operate_flg,
					    	A.name_list,
                            A.passenger_captain,
                            A.receivable_comment,
                            A.treat_comment,
                            F.client_short_name AS client_name,
                            A.ticket_number,
                            A.start_city,
                            A.start_airport,
                            A.end_city,
                            A.end_airport,
                            A.off_time,
                            A.land_time,
                            A.next_day,
                            case when
							A.departure_date>now() then 'no'
							when now()>=A.departure_date and
							DATE_ADD(A.departure_date,interval A.days-1 day) >
							now()
							then 'yes'
							when now()>=DATE_ADD(A.departure_date,interval A.days-1 day) then 'back'
							end
							AS status
					from budget_standard_order A LEFT JOIN user_base B ON A.create_user = B.user_number
					LEFT JOIN product C ON A.product_pk = C.pk
					LEFT JOIN client_employee D ON A.client_employee_pk = D.pk
       				LEFT JOIN user_base E ON C.product_manager = E.user_number
       				LEFT JOIN client F ON D.financial_body_pk = F.pk
             ]]>
			<comment>ALTER VIEW budget_order_view </comment>
		</sql>
	</changeSet>
	<changeSet id="8" author="simpletiny">
		<sql>
            <![CDATA[
            		ALTER TABLE client_received_detail ADD COLUMN voucher_file VARCHAR(30) NULL COMMENT '收入凭证文件名'  AFTER client_pk ;
             ]]>
			<comment>ALTER VIEW client_received_detail </comment>
		</sql>
	</changeSet>
	<changeSet id="9" author="simpletiny">
		<sql>
            <![CDATA[
            		ALTER TABLE client_received_detail ADD COLUMN collecter VARCHAR(10) NULL COMMENT '代收方'  AFTER voucher_file ;
             ]]>
			<comment>ALTER VIEW client_received_detail </comment>
		</sql>
	</changeSet>
	<changeSet id="10" author="simpletiny">
		<sql>
            <![CDATA[
            		ALTER TABLE pay_approval ADD COLUMN receiver_card_number VARCHAR(30) NULL COMMENT '收款方卡号'  AFTER approval_time , ADD COLUMN receiver_bank VARCHAR(30) NULL COMMENT '收款方开户行'  AFTER receiver_card_number ;
             ]]>
			<comment>ALTER TABLE pay_approval </comment>
		</sql>
	</changeSet>
	<changeSet id="11" author="simpletiny">
		<sql>
            <![CDATA[
            		ALTER TABLE client ADD COLUMN market_level VARCHAR(50) NULL DEFAULT '未知'  AFTER back_level , ADD COLUMN talk_level VARCHAR(50) NULL DEFAULT '未知'  AFTER market_level ;
             ]]>
			<comment>ALTER TABLE client </comment>
		</sql>
	</changeSet>
	<changeSet id="12" author="simpletiny">
		<sql>
            <![CDATA[
            		ALTER TABLE final_standard_order ADD COLUMN receivable_comment VARCHAR(200) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL  AFTER product_cost , ADD COLUMN next_day TINYINT(4) NULL DEFAULT '0'  AFTER receivable_comment , ADD COLUMN land_time VARCHAR(5) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL  AFTER next_day , ADD COLUMN off_time VARCHAR(5) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL  AFTER land_time , ADD COLUMN end_airport VARCHAR(10) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT ''  AFTER off_time , ADD COLUMN end_city VARCHAR(10) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT ''  AFTER end_airport , ADD COLUMN start_airport VARCHAR(10) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT ''  AFTER end_city , ADD COLUMN start_city VARCHAR(10) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT ''  AFTER start_airport , ADD COLUMN ticket_number VARCHAR(10) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL  AFTER start_city , ADD COLUMN passenger_captain VARCHAR(10) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL COMMENT '队长名称'  AFTER ticket_number , ADD COLUMN treat_comment VARCHAR(200) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL  AFTER passenger_captain , ADD COLUMN final_type CHAR(1) NULL DEFAULT 0  AFTER treat_comment , ADD COLUMN raise_money DECIMAL(12,2) NULL DEFAULT 0  AFTER final_type , ADD COLUMN raise_comment VARCHAR(200) NULL  AFTER raise_money , ADD COLUMN reduce_money DECIMAL(12,2) NULL DEFAULT 0  AFTER raise_comment , ADD COLUMN reduce_comment VARCHAR(200) NULL  AFTER reduce_money , ADD COLUMN complain_money DECIMAL(12,2) NULL DEFAULT 0  AFTER reduce_comment , ADD COLUMN complain_reason VARCHAR(200) NULL  AFTER complain_money , ADD COLUMN complain_solution VARCHAR(200) NULL  AFTER complain_reason , ADD COLUMN status CHAR(1) NULL DEFAULT 'I'  AFTER complain_solution ,ADD COLUMN voucher_file VARCHAR(30) NULL  AFTER status ,ADD COLUMN sale CHAR(22) NULL  AFTER voucher_file;
             ]]>
			<comment>ALTER TABLE final_standard_order </comment>
		</sql>
	</changeSet>
	<changeSet id="13" author="simpletiny">
		<sql>
            <![CDATA[
            		ALTER TABLE final_non_standard_order ADD COLUMN receivable_comment VARCHAR(200) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL  AFTER product_cost , ADD COLUMN next_day TINYINT(4) NULL DEFAULT '0'  AFTER receivable_comment , ADD COLUMN land_time VARCHAR(5) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL  AFTER next_day , ADD COLUMN off_time VARCHAR(5) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL  AFTER land_time , ADD COLUMN end_airport VARCHAR(10) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT ''  AFTER off_time , ADD COLUMN end_city VARCHAR(10) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT ''  AFTER end_airport , ADD COLUMN start_airport VARCHAR(10) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT ''  AFTER end_city , ADD COLUMN start_city VARCHAR(10) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT ''  AFTER start_airport , ADD COLUMN ticket_number VARCHAR(10) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL  AFTER start_city , ADD COLUMN passenger_captain VARCHAR(10) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL COMMENT '队长名称'  AFTER ticket_number , ADD COLUMN treat_comment VARCHAR(200) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL  AFTER passenger_captain , ADD COLUMN final_type CHAR(1) NULL DEFAULT 0  AFTER treat_comment , ADD COLUMN raise_money DECIMAL(12,2) NULL DEFAULT 0  AFTER final_type , ADD COLUMN raise_comment VARCHAR(200) NULL  AFTER raise_money , ADD COLUMN reduce_money DECIMAL(12,2) NULL DEFAULT 0  AFTER raise_comment , ADD COLUMN reduce_comment VARCHAR(200) NULL  AFTER reduce_money , ADD COLUMN complain_money DECIMAL(12,2) NULL DEFAULT 0  AFTER reduce_comment , ADD COLUMN complain_reason VARCHAR(200) NULL  AFTER complain_money , ADD COLUMN complain_solution VARCHAR(200) NULL  AFTER complain_reason , ADD COLUMN status CHAR(1) NULL DEFAULT 'I'  AFTER complain_solution ,ADD COLUMN voucher_file VARCHAR(30) NULL  AFTER status ,ADD COLUMN sale CHAR(22) NULL  AFTER voucher_file;
             ]]>
			<comment>ALTER TABLE final_non_standard_order </comment>
		</sql>
	</changeSet>
	<changeSet id="14" author="simpletiny">
		<sql>
            <![CDATA[
            	update final_standard_order set sale = create_user;
				update final_non_standard_order set sale = create_user;
				update final_standard_order A,
				    (select
				       team_number,name
				    from
				        sale_order_name_list 
				where team_number is not null
				group by team_number) B 
				set 
				    A.passenger_captain = LEFT(B.name,10)
				where
				    A.team_number = B.team_number;
				    
				update final_non_standard_order A,
				    (select
				       team_number,name
				    from
				        sale_order_name_list 
				where team_number is not null
				group by team_number) B 
				set 
				    A.passenger_captain = LEFT(B.name,10)
				where
				    A.team_number = B.team_number;
				
             ]]>
			<comment>update final_standard_order and final_non_standard_order</comment>
		</sql>
	</changeSet>
	<changeSet id="15" author="simpletiny">
		<sql>
            <![CDATA[
            DROP VIEW IF EXISTS final_order_view;
            CREATE VIEW final_order_view AS
			select 
			    A.team_number,
			    A.product_name,
			    '' as product_pk,
			    A.client_employee_pk,
			    C.name AS client_employee_name,
			    E.client_short_name AS client_name,
			    A.independent_flg,
			    A.comment,
			    A.other_cost_comment,
			    A.other_cost,
			    A.fy,
			    A.special_cost,
			    A.special_count,
			    A.adult_cost,
			    A.adult_count,
			    A.receivable AS final_receivable,
				F.receivable AS budget_receivable,
				A.days,
			    A.departure_date,
			    A.pk,
			    A.update_user,
			    A.create_user,
			    A.create_time,
			    A.update_time,
			    A.confirm_date,
			    A.confirm_file,
			    'N' AS standard_flg,
			    A.product_manager AS product_manager_number,
			    D.user_name AS product_manager,
			    A.air_ticket_cost,
			    A.product_cost,
			    A.operate_flg,
			    A.name_list,
			    A.receivable_comment,
			    A.next_day,
			    A.land_time,
			    A.off_time,
			    A.end_airport,
			    A.end_city,
			    A.start_airport,
			    A.start_city,
			    A.ticket_number,
			    A.passenger_captain,
			    A.treat_comment,
			    A.final_type,
			    A.raise_money,
			    A.raise_comment,
			    A.reduce_money,
			    A.reduce_comment,
			    A.complain_money,
			    A.complain_reason,
			    A.complain_solution,
			    A.status,
			    A.voucher_file,
			    A.sale AS sale_number,
			    B.user_name AS sale_name
			from
			    final_non_standard_order A
			        LEFT JOIN
			    user_base B ON A.sale = B.user_number
			        LEFT JOIN
			    client_employee C ON A.client_employee_pk = C.pk
			        LEFT JOIN
			    user_base D ON A.product_manager = D.user_number
			        LEFT JOIN
			    client E ON E.pk = C.financial_body_pk 
					LEFT JOIN
				budget_non_standard_order F ON A.team_number = F.team_number
			union all select 
			    A.team_number,
			    C.name AS product_name,
			    A.product_pk,
			    A.client_employee_pk,
			    D.name AS client_employee_name,
			    F.client_short_name AS client_name,
			    A.independent_flg,
			    A.comment,
			    A.other_cost_comment,
			    A.other_cost,
			    A.fy,
			    A.special_cost,
			    A.special_count,
			    A.adult_cost,
			    A.adult_count,
			    A.receivable AS final_receivable,
				G.receivable AS budget_receivable,
			    A.days,
			    A.departure_date,
			    A.pk,
			    A.update_user,
			    A.create_user,
			    A.create_time,
			    A.update_time,
			    A.confirm_date,
			    A.confirm_file,
			    'Y' AS standard_flg,
			    C.product_manager AS product_manager_number,
			    E.user_name AS product_manager,
			    A.air_ticket_cost,
			    A.product_cost,
			    A.operate_flg,
			    A.name_list,
			    A.receivable_comment,
			    A.next_day,
			    A.land_time,
			    A.off_time,
			    A.end_airport,
			    A.end_city,
			    A.start_airport,
			    A.start_city,
			    A.ticket_number,
			    A.passenger_captain,
			    A.treat_comment,
			    A.final_type,
			    A.raise_money,
			    A.raise_comment,
			    A.reduce_money,
			    A.reduce_comment,
			    A.complain_money,
			    A.complain_reason,
			    A.complain_solution,
			    A.status,
			    A.voucher_file,
			    A.sale AS sale_number,
			    B.user_name AS sale_name
			from
			    final_standard_order A
			        LEFT JOIN
			    user_base B ON A.sale = B.user_number
			        LEFT JOIN
			    product C ON A.product_pk = C.pk
			        LEFT JOIN
			    client_employee D ON A.client_employee_pk = D.pk
			        LEFT JOIN
			    user_base E ON C.product_manager = E.user_number
			        LEFT JOIN
			    client F ON D.financial_body_pk = F.pk
					LEFT JOIN
				budget_standard_order G ON A.team_number = G.team_number
             ]]>
			<comment>ALTER VIEW final_order_view</comment>
		</sql>
	</changeSet>
	<changeSet id="16" author="simpletiny">
		<sql>
			<![CDATA[
				ALTER TABLE academy_view 
				RENAME TO sale_academy_view;
			]]>
			<comment>RENAME TABLE academy_view to sale_academy_view</comment>
		</sql>
	</changeSet>
	<changeSet id="17" author="simpletiny">
		<sql>
			<![CDATA[
				ALTER TABLE product_view 
				RENAME TO  product_academy_view;
			]]>
			<comment>RENAME TABLE product_view to product_academy_view</comment>
		</sql>
	</changeSet>
	<changeSet id="18" author="simpletiny">
		<sql>
            <![CDATA[
          		CREATE  TABLE product_rule_view (
				  title VARCHAR(20) NOT NULL ,
				  content MEDIUMTEXT NULL ,
				  update_user VARCHAR(10) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL ,
				  pk CHAR(22) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NOT NULL ,
				  create_time VARCHAR(15) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL ,
				  update_time VARCHAR(15) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL ,
				  create_user VARCHAR(10) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL ,
				  PRIMARY KEY (pk) )
				DEFAULT CHARACTER SET = utf8
				COLLATE = utf8_bin
				COMMENT = '产品制度';
				
          		CREATE  TABLE sale_rule_view (
				  title VARCHAR(20) NOT NULL ,
				  content MEDIUMTEXT NULL ,
				  update_user VARCHAR(10) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL ,
				  pk CHAR(22) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NOT NULL ,
				  create_time VARCHAR(15) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL ,
				  update_time VARCHAR(15) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL ,
				  create_user VARCHAR(10) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL ,
				  PRIMARY KEY (pk) )
				DEFAULT CHARACTER SET = utf8
				COLLATE = utf8_bin
				COMMENT = '销售制度';
				
          		CREATE  TABLE ticket_rule_view (
				  title VARCHAR(20) NOT NULL ,
				  content MEDIUMTEXT NULL ,
				  update_user VARCHAR(10) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL ,
				  pk CHAR(22) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NOT NULL ,
				  create_time VARCHAR(15) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL ,
				  update_time VARCHAR(15) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL ,
				  create_user VARCHAR(10) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL ,
				  PRIMARY KEY (pk) )
				DEFAULT CHARACTER SET = utf8
				COLLATE = utf8_bin
				COMMENT = '票务制度';
				
          		CREATE  TABLE top_academy_view (
				  title VARCHAR(20) NOT NULL ,
				  content MEDIUMTEXT NULL ,
				  update_user VARCHAR(10) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL ,
				  pk CHAR(22) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NOT NULL ,
				  create_time VARCHAR(15) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL ,
				  update_time VARCHAR(15) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL ,
				  create_user VARCHAR(10) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL ,
				  PRIMARY KEY (pk) )
				DEFAULT CHARACTER SET = utf8
				COLLATE = utf8_bin
				COMMENT = '高层学院';
             ]]>
			<comment> CREATE TABLE product_rule_view,sale_rule_view,ticket_rule_view,top_academy_view</comment>
		</sql>
	</changeSet>
	<changeSet id="19" author="simpletiny">
		<sql>
            <![CDATA[
          		ALTER TABLE budget_standard_order
				ADD COLUMN product_value DECIMAL(3,2) NULL COMMENT '产品分值' AFTER next_day;
             ]]>
			<comment>ALTER TABLE budget_standard_order </comment>
		</sql>
	</changeSet>
	<changeSet id="20" author="simpletiny">
		<sql>
            <![CDATA[
            		DROP VIEW IF EXISTS budget_order_view;
            		CREATE VIEW budget_order_view AS
					select  A.team_number, 
					    	A.product_name,
							'' as product_pk,
					    	A.client_employee_pk, 
					    	C.name AS client_employee_name,
					    	A.independent_flg, 
					    	A.comment, 
					    	A.other_cost_comment, 
					    	A.other_cost, 
					    	A.fy, 
					    	A.special_cost, 
					    	A.special_count, 
					    	A.adult_cost, 
					    	A.adult_count, 
					    	A.receivable, 
					    	A.days, 
					    	A.departure_date, 
					    	A.pk, 
					    	A.update_user,
					    	A.create_user AS create_user_number,
					    	B.user_name AS create_user,
					    	A.confirm_flg, 
					    	A.create_time,
					    	A.update_time,
					    	A.confirm_date,
					    	A.confirm_file,
					    	'N' AS standard_flg,
					    	A.product_manager AS product_manager_number,
					    	D.user_name AS product_manager,
					    	A.air_ticket_cost,
					    	A.product_cost,
					    	A.operate_flg,
					    	A.name_list,
                            '' AS passenger_captain,
                            '' AS receivable_comment,
                            '' AS treat_comment,
                            '' AS client_name,
                            '' AS ticket_number,
                            '' AS start_city,
                            '' AS start_airport,
                            '' AS end_city,
                            '' AS end_airport,
                            '' AS off_time,
                            '' AS land_time,
                            '' AS next_day,
                            0 AS product_value
					from budget_non_standard_order A LEFT JOIN user_base B ON A.create_user = B.user_number
					LEFT JOIN client_employee C ON A.client_employee_pk = C.pk
					LEFT JOIN user_base D ON A.product_manager = D.user_number
					union all 
					select  A.team_number, 
					    	C.name AS product_name,
							A.product_pk,
					    	A.client_employee_pk,
					    	D.name AS client_employee_name,
					    	A.independent_flg, 
					    	A.comment, 
					    	A.other_cost_comment, 
					    	A.other_cost, 
					    	A.fy, 
					    	A.special_cost, 
					    	A.special_count, 
					    	A.adult_cost, 
					    	A.adult_count, 
					    	A.receivable, 
					    	A.days, 
					    	A.departure_date, 
					    	A.pk, 
					    	A.update_user, 
					    	A.create_user AS create_user_number, 
					    	B.user_name AS create_user,
					    	A.confirm_flg, 
					    	A.create_time,
					    	A.update_time,
					    	A.confirm_date,
					    	A.confirm_file,
					    	'Y' AS standard_flg,
					    	C.product_manager AS product_manager_number,
					    	E.user_name AS product_manager,
					    	A.air_ticket_cost,
					    	A.product_cost,
					    	A.operate_flg,
					    	A.name_list,
                            A.passenger_captain,
                            A.receivable_comment,
                            A.treat_comment,
                            F.client_short_name AS client_name,
                            A.ticket_number,
                            A.start_city,
                            A.start_airport,
                            A.end_city,
                            A.end_airport,
                            A.off_time,
                            A.land_time,
                            A.next_day,
                            A.product_value
					from budget_standard_order A LEFT JOIN user_base B ON A.create_user = B.user_number
					LEFT JOIN product C ON A.product_pk = C.pk
					LEFT JOIN client_employee D ON A.client_employee_pk = D.pk
       				LEFT JOIN user_base E ON C.product_manager = E.user_number
       				LEFT JOIN client F ON D.financial_body_pk = F.pk
             ]]>
			<comment>ALTER VIEW budget_order_view </comment>
		</sql>
	</changeSet>
	<changeSet id="21" author="simpletiny">
		<sql>
            <![CDATA[
            		UPDATE budget_standard_order A,
					    (SELECT 
					        pk, product_value
					    FROM
					        product) B 
					SET 
					    A.product_value = B.product_value
					WHERE
					    A.product_pk = B.pk;
             ]]>
			<comment>UPDATE budget_standard_order A</comment>
		</sql>
	</changeSet>
	<changeSet id="22" author="simpletiny">
		<sql>
            <![CDATA[
            		DROP VIEW IF EXISTS budget_order_view;
            		CREATE VIEW budget_order_view AS
					select  A.team_number, 
					    	A.product_name,
							'' as product_pk,
					    	A.client_employee_pk, 
					    	C.name AS client_employee_name,
					    	A.independent_flg, 
					    	A.comment, 
					    	A.other_cost_comment, 
					    	A.other_cost, 
					    	A.fy, 
					    	A.special_cost, 
					    	A.special_count, 
					    	A.adult_cost, 
					    	A.adult_count, 
					    	A.receivable, 
					    	A.days, 
					    	A.departure_date, 
					    	A.pk, 
					    	A.update_user,
					    	A.create_user AS create_user_number,
					    	B.user_name AS create_user,
					    	A.confirm_flg, 
					    	A.create_time,
					    	A.update_time,
					    	A.confirm_date,
					    	A.confirm_file,
					    	'N' AS standard_flg,
					    	A.product_manager AS product_manager_number,
					    	D.user_name AS product_manager,
					    	A.air_ticket_cost,
					    	A.product_cost,
					    	A.operate_flg,
					    	A.name_list,
                            '' AS passenger_captain,
                            '' AS receivable_comment,
                            '' AS treat_comment,
                            '' AS client_name,
                            '' AS ticket_number,
                            '' AS start_city,
                            '' AS start_airport,
                            '' AS end_city,
                            '' AS end_airport,
                            '' AS off_time,
                            '' AS land_time,
                            '' AS next_day,
                            case when
							A.departure_date>now() then 'no'
							when now()>=A.departure_date and
							DATE_ADD(A.departure_date,interval A.days-1 day) >
							now()
							then 'yes'
							when now()>=DATE_ADD(A.departure_date,interval A.days-1 day) then 'back'
							end
							AS status,
							0 AS product_value
					from budget_non_standard_order A LEFT JOIN user_base B ON A.create_user = B.user_number
					LEFT JOIN client_employee C ON A.client_employee_pk = C.pk
					LEFT JOIN user_base D ON A.product_manager = D.user_number
					union all 
					select  A.team_number, 
					    	C.name AS product_name,
							A.product_pk,
					    	A.client_employee_pk,
					    	D.name AS client_employee_name,
					    	A.independent_flg, 
					    	A.comment, 
					    	A.other_cost_comment, 
					    	A.other_cost, 
					    	A.fy, 
					    	A.special_cost, 
					    	A.special_count, 
					    	A.adult_cost, 
					    	A.adult_count, 
					    	A.receivable, 
					    	A.days, 
					    	A.departure_date, 
					    	A.pk, 
					    	A.update_user, 
					    	A.create_user AS create_user_number, 
					    	B.user_name AS create_user,
					    	A.confirm_flg, 
					    	A.create_time,
					    	A.update_time,
					    	A.confirm_date,
					    	A.confirm_file,
					    	'Y' AS standard_flg,
					    	C.product_manager AS product_manager_number,
					    	E.user_name AS product_manager,
					    	A.air_ticket_cost,
					    	A.product_cost,
					    	A.operate_flg,
					    	A.name_list,
                            A.passenger_captain,
                            A.receivable_comment,
                            A.treat_comment,
                            F.client_short_name AS client_name,
                            A.ticket_number,
                            A.start_city,
                            A.start_airport,
                            A.end_city,
                            A.end_airport,
                            A.off_time,
                            A.land_time,
                            A.next_day,
                            case when
							A.departure_date>now() then 'no'
							when now()>=A.departure_date and
							DATE_ADD(A.departure_date,interval A.days-1 day) >
							now()
							then 'yes'
							when now()>=DATE_ADD(A.departure_date,interval A.days-1 day) then 'back'
							end
							AS status,
							A.product_value
					from budget_standard_order A LEFT JOIN user_base B ON A.create_user = B.user_number
					LEFT JOIN product C ON A.product_pk = C.pk
					LEFT JOIN client_employee D ON A.client_employee_pk = D.pk
       				LEFT JOIN user_base E ON C.product_manager = E.user_number
       				LEFT JOIN client F ON D.financial_body_pk = F.pk
             ]]>
			<comment>UPDATE budget_standard_order A</comment>
		</sql>
	</changeSet>
	<changeSet id="23" author="simpletiny">
		<sql>
            <![CDATA[
            	ALTER TABLE product 
				CHANGE COLUMN product_value product_value DECIMAL(3,2) NULL DEFAULT '1.00' COMMENT '产品成人分值' ,
				CHANGE COLUMN gross_profit gross_profit DECIMAL(12,2) NULL DEFAULT NULL COMMENT '毛利' ,
				CHANGE COLUMN gross_profit_rate gross_profit_rate FLOAT(7,2) NULL DEFAULT NULL COMMENT '毛利率' ,
				ADD COLUMN product_model VARCHAR(6) NULL COMMENT '产品型号' AFTER gross_profit_rate,
				ADD COLUMN adult_price DECIMAL(12,2) NULL COMMENT '成人直客报价' AFTER product_model,
				ADD COLUMN child_price DECIMAL(12,2) NULL COMMENT '儿童直客报价' AFTER adult_price,
				ADD COLUMN business_profit_substract DECIMAL(12,2) NULL COMMENT '同业返利' AFTER child_price,
				ADD COLUMN air_ticket_child_cost DECIMAL(12,2) NULL COMMENT '机票儿童成本' AFTER business_profit_substract,
				ADD COLUMN local_adult_cost DECIMAL(12,2) NULL COMMENT '地接成人成本' AFTER air_ticket_child_cost,
				ADD COLUMN local_child_cost DECIMAL(12,2) NULL COMMENT '地接儿童成本' AFTER local_adult_cost,
				ADD COLUMN other_child_cost DECIMAL(12,2) NULL COMMENT '其他儿童成本' AFTER local_child_cost,
				ADD COLUMN product_child_value DECIMAL(3,2) NULL COMMENT '产品儿童分值' AFTER other_child_cost,
				ADD COLUMN cash_flow DECIMAL(12,2) NULL COMMENT '现金流' AFTER product_child_value,
				ADD COLUMN spot_cash DECIMAL(12,2) NULL COMMENT '现付资金' AFTER cash_flow,
				ADD COLUMN first_air_start VARCHAR(10) NULL COMMENT '首段出港' AFTER spot_cash,
				ADD COLUMN first_air_end VARCHAR(10) NULL COMMENT '首段目的' AFTER first_air_start,
				ADD COLUMN sale_attention VARCHAR(200) NULL COMMENT '销售注意' AFTER first_air_end,
				ADD COLUMN sale_strategy VARCHAR(200) NULL COMMENT '销售策略' AFTER sale_attention,
				ADD COLUMN strict_price_flg CHAR(1) NULL DEFAULT 'Y' COMMENT '严格执行产品价格' AFTER sale_strategy,
				ADD COLUMN cash_flow_air_flg CHAR(1) NULL DEFAULT 'Y' COMMENT '机票现付标签' AFTER strict_price_flg,
				ADD COLUMN cash_flow_local_flg CHAR(1) NULL DEFAULT 'N' COMMENT '地接现付标签' AFTER cash_flow_air_flg,
				ADD COLUMN cash_flow_other_flg CHAR(1) NULL DEFAULT 'Y' COMMENT '其他现付标签' AFTER cash_flow_local_flg;
             ]]>
			<comment>ALTER TABLE product </comment>
		</sql>
	</changeSet>
	<changeSet id="24" author="simpletiny">
		<sql>
            <![CDATA[
            	ALTER TABLE budget_standard_order 
					CHANGE COLUMN product_value product_value DECIMAL(5,2) NULL DEFAULT NULL COMMENT '产品分值' ;
				ALTER TABLE product 
					CHANGE COLUMN product_value product_value DECIMAL(5,2) NULL DEFAULT '1.00' COMMENT '产品成人分值' ,
					CHANGE COLUMN product_child_value product_child_value DECIMAL(5,2) NULL DEFAULT NULL COMMENT '产品儿童分值' ;
             ]]>
			<comment>ALTER TABLE budget_standard_order and product</comment>
		</sql>
	</changeSet>
	<changeSet id="25" author="simpletiny">
		<sql>
            <![CDATA[
            	ALTER TABLE product 
				CHANGE COLUMN product_number product_number VARCHAR(4) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL ;
             ]]>
			<comment>ALTER TABLE product</comment>
		</sql>
	</changeSet>
	<changeSet id="26" author="simpletiny">
		<sql>
            <![CDATA[
            	ALTER TABLE product 
				ADD COLUMN off_shelves_date VARCHAR(10) NULL COMMENT '下架日期' AFTER cash_flow_other_flg;
             ]]>
			<comment>ALTER TABLE product</comment>
		</sql>
	</changeSet>
	<changeSet id="27" author="simpletiny">
		<sql>
            <![CDATA[
            	CREATE TABLE product_delay (
				  pk CHAR(22) NOT NULL,
				  product_pk CHAR(22) NULL,
				  adult_price DECIMAL(12,2) NULL,
				  business_profit_substract DECIMAL(12,2) NULL,
				  max_profit_substract DECIMAL(12,2) NULL,
				  product_value DECIMAL(5,2) NULL,
				  product_child_value DECIMAL(5,2) NULL,
				  child_price DECIMAL(12,2) NULL,
				  update_cnt TINYINT NULL DEFAULT 1,
				  gross_profit DECIMAL(12,2) NULL DEFAULT NULL COMMENT '毛利',
				  gross_profit_rate FLOAT(7,2) NULL DEFAULT NULL COMMENT '毛利率',
				  cash_flow DECIMAL(12,2) NULL DEFAULT NULL COMMENT '现金流',
				  spot_cash DECIMAL(12,2) NULL DEFAULT NULL COMMENT '现付资金',
				  
				  create_user VARCHAR(10) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL,
				  create_time VARCHAR(15) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL,
				  update_user VARCHAR(10) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL,
				  update_time VARCHAR(15) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL,
				  PRIMARY KEY (pk))
				COMMENT = '产品延时更新表';
             ]]>
			<comment>CREATE TABLE product_delay</comment>
		</sql>
	</changeSet>
	<changeSet id="28" author="simpletiny">
		<sql>
            <![CDATA[
            	update product set adult_price = business_price +400,product_value = product_value *10;
            	UPDATE budget_standard_order A,
					    (SELECT 
					        pk, product_value
					    FROM
					        product) B 
					SET 
					    A.product_value = B.product_value
					WHERE
					    A.product_pk = B.pk;
             ]]>
			<comment>update product</comment>
		</sql>
	</changeSet>
	<changeSet id="29" author="simpletiny">
		<sql>
            <![CDATA[
            	insert into task value('autoUpdateProduct', 'updateProduct', '', '2', '2018-03-24 00:00:01', 'N', '', '1521787890103', 'taskupdateproduct');
             ]]>
			<comment>insert into task</comment>
		</sql>
	</changeSet>
	<changeSet id="30" author="simpletiny">
		<sql>
            <![CDATA[
            	ALTER TABLE product 
					ADD COLUMN gross_child_profit DECIMAL(12,2) NULL DEFAULT NULL COMMENT '毛利' AFTER off_shelves_date,
					ADD COLUMN gross_child_profit_rate FLOAT(7,2) NULL DEFAULT NULL COMMENT '毛利率' AFTER gross_child_profit,
					ADD COLUMN cash_child_flow DECIMAL(12,2) NULL DEFAULT NULL COMMENT '现金流' AFTER gross_child_profit_rate,
					ADD COLUMN spot_child_cash DECIMAL(12,2) NULL DEFAULT NULL COMMENT '现付资金' AFTER cash_child_flow;
             ]]>
			<comment>ALTER TABLE product</comment>
		</sql>
	</changeSet>
	<changeSet id="31" author="simpletiny">
		<sql>
            <![CDATA[
            	ALTER TABLE product_delay 
					ADD COLUMN gross_child_profit DECIMAL(12,2) NULL DEFAULT NULL COMMENT '毛利' AFTER update_time,
					ADD COLUMN gross_child_profit_rate FLOAT(7,2) NULL DEFAULT NULL COMMENT '毛利率' AFTER gross_child_profit,
					ADD COLUMN cash_child_flow DECIMAL(12,2) NULL DEFAULT NULL COMMENT '现金流' AFTER gross_child_profit_rate,
					ADD COLUMN spot_child_cash DECIMAL(12,2) NULL DEFAULT NULL COMMENT '现付资金' AFTER cash_child_flow;
             ]]>
			<comment>ALTER TABLE product_delay</comment>
		</sql>
	</changeSet>
	<changeSet id="32" author="simpletiny">
		<sql>
            <![CDATA[
            	ALTER TABLE client 
					ADD COLUMN client_county VARCHAR(20) NULL AFTER talk_level;
             ]]>
			<comment>ALTER TABLE client </comment>
		</sql>
	</changeSet>
	<changeSet id="33" author="simpletiny">
		<sql>
            <![CDATA[
            	update client set talk_level = '核心' where talk_level = '强';
				update client set talk_level = '主力' where talk_level = '中';
				update client set talk_level = '排斥' where talk_level = '弱';
				update client set talk_level = '市场' where talk_level = '未知';
             ]]>
			<comment>update TABLE client </comment>
		</sql>
	</changeSet>
	<changeSet id="34" author="simpletiny">
		<sql>
            <![CDATA[
            	    CREATE VIEW view_relation_level AS
				    SELECT sales,sales_name, 
				    COUNT(pk) AS sum_cnt,
				    COUNT(IF(relation_level IN('朋友级','商务级'),1,NULL)) AS strong_cnt,
					COUNT(IF(relation_level='市场级',1,NULL)) AS middle_cnt,
					COUNT(IF(relation_level='新增级',1,NULL)) AS weak_cnt,
					COUNT(IF(relation_level='排斥级',1,NULL)) AS bad_cnt,
					COUNT(IF(relation_level='' OR relation_level IS NULL,1,NULL)) AS unknow_cnt
				    FROM client_employee GROUP BY sales;
             ]]>
			<comment>CREATE VIEW view_relation_level </comment>
		</sql>
	</changeSet>
	<changeSet id="35" author="simpletiny">
		<sql>
            <![CDATA[
            	  ALTER TABLE client 
				  CHANGE COLUMN sales sales VARCHAR(600) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL ;
             ]]>
			<comment>ALTER TABLE client</comment>
		</sql>
	</changeSet>
	<changeSet id="36" author="simpletiny">
		<sql>
            <![CDATA[
            	 CREATE TABLE client_user (
				  client_pk CHAR(22) NOT NULL,
				  user_pk CHAR(22) NOT NULL,
				  pk CHAR(22) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NOT NULL,
				  create_user VARCHAR(10) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL,
				  create_time VARCHAR(15) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL,
				  update_user VARCHAR(10) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL,
				  update_time VARCHAR(15) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL,
				  PRIMARY KEY (pk))
				ENGINE = InnoDB
				DEFAULT CHARACTER SET = utf8
				COLLATE = utf8_bin
				COMMENT = '财务主体和销售对应表';
             ]]>
			<comment>CREATE TABLE client_user</comment>
		</sql>
	</changeSet>
	<changeSet id="37" author="simpletiny">
		<sql>
            <![CDATA[
            	 CREATE TABLE job_hopping_log (
				  client_employee_pk CHAR(22) NOT NULL,
				  hop_date VARCHAR(10) NULL,
				  pre_client_pk CHAR(22) NOT NULL,
				  now_client_pk CHAR(22) NOT NULL,
				  reason VARCHAR(200) NULL,
				  pk CHAR(22) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NOT NULL,
				  create_user VARCHAR(10) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL,
				  update_user VARCHAR(10) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL,
				  update_time VARCHAR(15) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL,
				  create_time VARCHAR(15) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL,
				  PRIMARY KEY (pk))
				ENGINE = InnoDB
				DEFAULT CHARACTER SET = utf8
				COLLATE = utf8_bin
				COMMENT = '跳槽记录表';
             ]]>
			<comment>CREATE TABLE job_hopping_log </comment>
		</sql>
	</changeSet>
	<changeSet id="38" author="simpletiny">
		<sql>
            <![CDATA[
            	 ALTER TABLE client_employee 
					ADD COLUMN dimission_flg CHAR(1) NULL DEFAULT 'N' COMMENT '离职flg' AFTER market_level;
             ]]>
			<comment> ALTER TABLE client_employee </comment>
		</sql>
	</changeSet>
	<changeSet id="39" author="simpletiny">
		<sql>
            <![CDATA[
            	 ALTER TABLE card 
					ADD COLUMN delete_flg CHAR NULL DEFAULT 'N' AFTER sort_index;
             ]]>
			<comment>  ALTER TABLE card </comment>
		</sql>
	</changeSet>
	<changeSet id="40" author="simpletiny">
		<sql>
            <![CDATA[
            	CREATE TABLE client_employee_user (
					  employee_pk CHAR(22) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NOT NULL,
					  user_pk CHAR(22) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NOT NULL,
					  pk CHAR(22) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NOT NULL,
					  create_user VARCHAR(10) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL,
					  create_time VARCHAR(15) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL,
					  update_user VARCHAR(10) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL,
					  update_time VARCHAR(15) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL,
					  PRIMARY KEY (pk))
					ENGINE = InnoDB
					DEFAULT CHARACTER SET = utf8
					COLLATE = utf8_bin
					COMMENT = '客户员工销售对应表';
             ]]>
			<comment>CREATE TABLE client_employee_user</comment>
		</sql>
	</changeSet>
	<changeSet id="41" author="simpletiny">
		<sql>
            <![CDATA[
            	CREATE VIEW view_client_employee_user AS
					SELECT A.employee_pk,GROUP_CONCAT(A.user_pk) AS user_pks,GROUP_CONCAT(IFNULL(B.user_name,'公开')) AS user_names FROM client_employee_user A
					LEFT JOIN user_base B ON A.user_pk=B.pk
					GROUP BY A.employee_pk ;
				CREATE VIEW view_client_user AS
					SELECT A.client_pk,GROUP_CONCAT(A.user_pk) AS user_pks,GROUP_CONCAT(IFNULL(B.user_name,'公开')) AS user_names FROM client_user A
					LEFT JOIN user_base B ON A.user_pk=B.pk
					GROUP BY A.client_pk; 
             ]]>
			<comment>CREATE VIEW view_client_employee_user and view_client_user</comment>
		</sql>
	</changeSet>
		<changeSet id="42" author="simpletiny">
		<sql>
            <![CDATA[
            		DROP VIEW IF EXISTS view_relation_level;
            	    CREATE VIEW view_relation_level AS
				    SELECT sales,sales_name, 
				    COUNT(pk) AS sum_cnt,
				    COUNT(IF(relation_level IN('朋友级','商务级'),1,NULL)) AS strong_cnt,
					COUNT(IF(relation_level='市场级',1,NULL)) AS middle_cnt,
					COUNT(IF(relation_level='新增级',1,NULL)) AS weak_cnt,
					COUNT(IF(relation_level='排斥级',1,NULL)) AS bad_cnt,
					COUNT(IF(relation_level='' OR relation_level IS NULL,1,NULL)) AS unknow_cnt
				    FROM client_employee WHERE delete_flg='N' GROUP BY sales;
             ]]>
			<comment>ALTER VIEW view_relation_level </comment>
		</sql>
	</changeSet>
	<changeSet id="43" author="simpletiny">
		<sql>
            <![CDATA[
            		DROP VIEW IF EXISTS client_relation_summary;
					CREATE VIEW client_relation_summary AS
				    SELECT 
				        A.name as client_employee_name,
				        A.pk as client_employee_pk,
				        G.user_pks AS sales,
				        G.user_names AS sales_name,
				        A.delete_flg as delete_flg,
				        A.relation_level as relation_level,
				        A.back_level as back_level,
				        A.market_level as market_level,
				        SUM(IF(LEFT(B.order_date, 7) = DATE_FORMAT(now(), '%Y-%m'),
				            B.order_count,
				            0)) as month_order_count,
				        C.last_confirm_date,
				        C.last_order_period,
				        D.receivable,
				        D.last_receivable_period,
				        E.target AS last_client_visit_target,
				        F.summary AS last_accurate_sale_summary
				    from
				        client_employee A
				            LEFT JOIN
				        view_order_count B ON A.pk = B.client_employee_pk
				            LEFT JOIN
				        order_period C ON A.pk = C.client_employee_pk
				            LEFT JOIN
				        receivable_for_client D ON A.pk = D.client_employee_pk
				            LEFT JOIN
				        view_last_client_visit E ON A.pk = E.client_employee_pk
				            LEFT JOIN
				        view_last_accurate_sale F ON A.pk = F.client_employee_pk
							LEFT JOIN
						view_client_employee_user G ON A.pk = G.employee_pk
				    GROUP BY A.pk;
             ]]>
			<comment>ALTER VIEW client_relation_summary </comment>
		</sql>
	</changeSet>
	<changeSet id="44" author="simpletiny">
		<sql>
            <![CDATA[
            		DROP VIEW IF EXISTS receivable_a;	
					create view receivable_a as
				    select 					
				    	B.pk AS sale_pk,
				        B.user_name AS sales_name,
				        A.sales,
				         count(CASE WHEN A.final_flg='N' THEN if(A.budget_balance!=0,A.pk,null) 
								ELSE if(A.final_balance!=0,A.pk,null) end) as all_count,
				        sum(A.budget_balance) as all_budget_balance,
				        sum(A.final_balance) as all_final_balance,
				        sum(CASE
				            WHEN A.final_flg='N' THEN A.budget_balance
				            ELSE A.final_balance
				        END) as all_balance
				    from
				        receivable A LEFT JOIN user_base B ON A.sales = B.user_number
				    group by A.sales;
             ]]>
			<comment>ALTER VIEW receivable_a </comment>
		</sql>
	</changeSet>
	<changeSet id="45" author="simpletiny">
		<sql>
            <![CDATA[
           		CREATE VIEW view_receivable_meter AS
				SELECT 
				    B.pk AS user_pk,
				    B.user_name AS user_name,
				    A.sales AS user_number,
				    SUM(CASE
				        WHEN A.final_flg = 'N' THEN A.budget_balance
				        ELSE A.final_balance
				    END) AS receivable,
				    SUM(CASE
				        WHEN
				            DATEDIFF(NOW(), A.return_date) >= 20
				                AND DATEDIFF(NOW(), A.return_date) <= 30
				        THEN
				            IF(A.final_flg = 'N',
				                A.budget_balance,
				                A.final_balance)
				        ELSE 0
				    END) AS warning
				FROM
				    receivable A
				        LEFT JOIN
				    user_base B ON A.sales = B.user_number
				GROUP BY A.sales;
             ]]>
			<comment>CREATE VIEW view_receivable_meter </comment>
		</sql>
	</changeSet>
	<changeSet id="46" author="simpletiny">
		<sql>
            <![CDATA[
          CREATE VIEW  view_score AS
			SELECT sum((IFNULL(A.adult_count,0)+IFNULL(A.special_count,0))*A.product_value) AS score,
		    sum(IF(LEFT(A.confirm_date,7)=LEFT(curdate(),7),(IFNULL(A.adult_count,0)+IFNULL(A.special_count,0))*A.product_value,0) ) as month_score,
			A.create_user AS user_number,
			B.user_name AS user_name,
	        B.pk AS user_pk
			FROM budget_standard_order A
			LEFT JOIN user_base B on A.create_user = B.user_number
	        GROUP by create_user;
             ]]>
			<comment> CREATE VIEW  view_score</comment>
		</sql>
	</changeSet>
	<changeSet id="47" author="simpletiny">
		<sql>
            <![CDATA[
					DROP VIEW IF EXISTS month_order_count;
					CREATE VIEW month_order_count AS
					select 
				        A.client_employee_pk as client_employee_pk, count(A.client_employee_pk) as month_order_count,
						B.relation_level as relation_level,
				        B.back_level as back_level,
				        B.market_level as market_level,
						LEFT(A.confirm_date, 7) as month
				    from
						budget_order_view A 
						LEFT JOIN client_employee B on A.client_employee_pk=B.pk
				    group by A.client_employee_pk,month;
	          ]]>
			<comment>ALTER VIEW month_order_count</comment>
		</sql>
	</changeSet>
	<changeSet id="48" author="simpletiny">
		<sql>
            <![CDATA[
					ALTER TABLE client_employee 
					CHANGE COLUMN financial_body_pk financial_body_pk CHAR(22) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL ,
					ADD COLUMN review_flg CHAR(1) NULL DEFAULT 'Y' AFTER dimission_flg;
	          ]]>
			<comment>ALTER TABLE client_employee </comment>
		</sql>
	</changeSet>
	<changeSet id="49" author="simpletiny">
		<sql>
            <![CDATA[
					CREATE TABLE mobile_touch (
					  client_employee_pk CHAR(22) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NOT NULL,
					  date VARCHAR(10) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NOT NULL,
					  touch_target VARCHAR(10) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NOT NULL,
					  summary VARCHAR(500) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NOT NULL,
					  pk CHAR(22) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NOT NULL,
					  create_time VARCHAR(15) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL,
					  create_user VARCHAR(10) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL,
					  update_time VARCHAR(15) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL,
					  update_user VARCHAR(10) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL)
					ENGINE = InnoDB
					DEFAULT CHARACTER SET = utf8
					COLLATE = utf8_bin
					COMMENT = '销售主动电联客户记录表';
	          ]]>
			<comment>CREATE TABLE mobile_touch</comment>
		</sql>
	</changeSet>
	<changeSet id="50" author="simpletiny">
		<sql>
            <![CDATA[
					CREATE TABLE incoming_call (
					  client_employee_pk CHAR(22) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NOT NULL,
					  date VARCHAR(10) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NOT NULL,
					  type VARCHAR(10) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NOT NULL,
					  summary VARCHAR(500) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NOT NULL,
					  pk CHAR(22) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NOT NULL,
					  create_time VARCHAR(15) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL,
					  create_user VARCHAR(10) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL,
					  update_time VARCHAR(15) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL,
					  update_user VARCHAR(10) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT NULL)
					ENGINE = InnoDB
					DEFAULT CHARACTER SET = utf8
					COLLATE = utf8_bin
					COMMENT = '被动咨询记录表';
	          ]]>
			<comment>CREATE TABLE incoming_call</comment>
		</sql>
	</changeSet>
</databaseChangeLog>



