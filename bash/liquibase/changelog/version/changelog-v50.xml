<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext"
	xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.1.xsd
        http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd">
	<changeSet id="1" author="simpletiny">
		<sql>
            <![CDATA[
            	ALTER TABLE xinchi.budget_standard_order 
				ADD COLUMN passenger_captain VARCHAR(10) NULL COMMENT '队长名称' AFTER receivable_comment;
             ]]>
			<comment>ALTER TABLE budget_standard_order </comment>
		</sql>
	</changeSet>
	<changeSet id="2" author="simpletiny">
		<sql>
            <![CDATA[
            		DROP VIEW IF EXISTS budget_order_view;
            		CREATE VIEW budget_order_view AS
					select  A.team_number, 
					    	A.product_name,
							'' as product_pk,
					    	A.client_employee_pk, 
					    	C.name AS client_employee_name,
					    	A.independent_flg, 
					    	A.comment, 
					    	A.other_cost_comment, 
					    	A.other_cost, 
					    	A.fy, 
					    	A.special_cost, 
					    	A.special_count, 
					    	A.adult_cost, 
					    	A.adult_count, 
					    	A.receivable, 
					    	A.days, 
					    	A.departure_date, 
					    	A.pk, 
					    	A.update_user,
					    	A.create_user AS create_user_number,
					    	B.user_name AS create_user,
					    	A.confirm_flg, 
					    	A.create_time,
					    	A.update_time,
					    	A.confirm_date,
					    	A.confirm_file,
					    	'N' AS standard_flg,
					    	A.product_manager AS product_manager_number,
					    	D.user_name AS product_manager,
					    	A.air_ticket_cost,
					    	A.product_cost,
					    	A.operate_flg,
					    	A.name_list,
                            '' AS passenger_captain,
                            '' AS receivable_comment,
                            '' AS treat_comment
					from budget_non_standard_order A LEFT JOIN user_base B ON A.create_user = B.user_number
					LEFT JOIN client_employee C ON A.client_employee_pk = C.pk
					LEFT JOIN user_base D ON A.product_manager = D.user_number
					union all 
					select  A.team_number, 
					    	C.name AS product_name,
							A.product_pk,
					    	A.client_employee_pk,
					    	D.name AS client_employee_name,
					    	A.independent_flg, 
					    	A.comment, 
					    	A.other_cost_comment, 
					    	A.other_cost, 
					    	A.fy, 
					    	A.special_cost, 
					    	A.special_count, 
					    	A.adult_cost, 
					    	A.adult_count, 
					    	A.receivable, 
					    	A.days, 
					    	A.departure_date, 
					    	A.pk, 
					    	A.update_user, 
					    	A.create_user AS create_user_number, 
					    	B.user_name AS create_user,
					    	A.confirm_flg, 
					    	A.create_time,
					    	A.update_time,
					    	A.confirm_date,
					    	A.confirm_file,
					    	'Y' AS standard_flg,
					    	C.product_manager AS product_manager_number,
					    	E.user_name AS product_manager,
					    	A.air_ticket_cost,
					    	A.product_cost,
					    	A.operate_flg,
					    	A.name_list,
                            A.passenger_captain,
                            A.receivable_comment,
                            A.treat_comment
					from budget_standard_order A LEFT JOIN user_base B ON A.create_user = B.user_number
					LEFT JOIN product C ON A.product_pk = C.pk
					LEFT JOIN client_employee D ON A.client_employee_pk = D.pk
       				LEFT JOIN user_base E ON C.product_manager = E.user_number
             ]]>
			<comment>ALTER VIEW budget_order_view </comment>
		</sql>
	</changeSet>
	<changeSet id="3" author="simpletiny">
		<sql>
            <![CDATA[
            		update sale_order_name_list set chairman='Y' where pk in(
					select A.pk from (SELECT 
						pk,
					    MIN(SUBSTR(id, 7, 8))
					FROM
					    sale_order_name_list
					    where isnull(order_pk )
					    group by team_number) A)
             ]]>
			<comment>UPDATE sale_order_name_list</comment>
		</sql>
	</changeSet>
	<changeSet id="4" author="simpletiny">
		<sql>
            <![CDATA[
            		ALTER TABLE budget_standard_order 
						ADD COLUMN ticket_number VARCHAR(10) NULL AFTER passenger_captain,
						ADD COLUMN start_city VARCHAR(10) NULL AFTER ticket_number,
						ADD COLUMN start_airport VARCHAR(10) NULL AFTER start_city,
						ADD COLUMN end_city VARCHAR(10) NULL AFTER start_airport,
						ADD COLUMN end_airport VARCHAR(10) NULL AFTER end_city,
						ADD COLUMN off_time VARCHAR(5) NULL AFTER end_airport,
						ADD COLUMN land_time VARCHAR(5) NULL AFTER off_time,
						ADD COLUMN next_day TINYINT NULL DEFAULT 0  AFTER land_time;
             ]]>
			<comment>ALTER TABLE budget_standard_order </comment>
		</sql>
	</changeSet>
	<changeSet id="5" author="simpletiny">
		<sql>
            <![CDATA[
            		DROP VIEW IF EXISTS budget_order_view;
            		CREATE VIEW budget_order_view AS
					select  A.team_number, 
					    	A.product_name,
							'' as product_pk,
					    	A.client_employee_pk, 
					    	C.name AS client_employee_name,
					    	A.independent_flg, 
					    	A.comment, 
					    	A.other_cost_comment, 
					    	A.other_cost, 
					    	A.fy, 
					    	A.special_cost, 
					    	A.special_count, 
					    	A.adult_cost, 
					    	A.adult_count, 
					    	A.receivable, 
					    	A.days, 
					    	A.departure_date, 
					    	A.pk, 
					    	A.update_user,
					    	A.create_user AS create_user_number,
					    	B.user_name AS create_user,
					    	A.confirm_flg, 
					    	A.create_time,
					    	A.update_time,
					    	A.confirm_date,
					    	A.confirm_file,
					    	'N' AS standard_flg,
					    	A.product_manager AS product_manager_number,
					    	D.user_name AS product_manager,
					    	A.air_ticket_cost,
					    	A.product_cost,
					    	A.operate_flg,
					    	A.name_list,
                            '' AS passenger_captain,
                            '' AS receivable_comment,
                            '' AS treat_comment,
                            '' AS client_name,
                            '' AS ticket_number,
                            '' AS start_city,
                            '' AS start_airport,
                            '' AS end_city,
                            '' AS end_airport,
                            '' AS off_time,
                            '' AS land_time,
                            '' AS next_day
					from budget_non_standard_order A LEFT JOIN user_base B ON A.create_user = B.user_number
					LEFT JOIN client_employee C ON A.client_employee_pk = C.pk
					LEFT JOIN user_base D ON A.product_manager = D.user_number
					union all 
					select  A.team_number, 
					    	C.name AS product_name,
							A.product_pk,
					    	A.client_employee_pk,
					    	D.name AS client_employee_name,
					    	A.independent_flg, 
					    	A.comment, 
					    	A.other_cost_comment, 
					    	A.other_cost, 
					    	A.fy, 
					    	A.special_cost, 
					    	A.special_count, 
					    	A.adult_cost, 
					    	A.adult_count, 
					    	A.receivable, 
					    	A.days, 
					    	A.departure_date, 
					    	A.pk, 
					    	A.update_user, 
					    	A.create_user AS create_user_number, 
					    	B.user_name AS create_user,
					    	A.confirm_flg, 
					    	A.create_time,
					    	A.update_time,
					    	A.confirm_date,
					    	A.confirm_file,
					    	'Y' AS standard_flg,
					    	C.product_manager AS product_manager_number,
					    	E.user_name AS product_manager,
					    	A.air_ticket_cost,
					    	A.product_cost,
					    	A.operate_flg,
					    	A.name_list,
                            A.passenger_captain,
                            A.receivable_comment,
                            A.treat_comment,
                            F.client_short_name AS client_name,
                            A.ticket_number,
                            A.start_city,
                            A.start_airport,
                            A.end_city,
                            A.end_airport,
                            A.off_time,
                            A.land_time,
                            A.next_day
					from budget_standard_order A LEFT JOIN user_base B ON A.create_user = B.user_number
					LEFT JOIN product C ON A.product_pk = C.pk
					LEFT JOIN client_employee D ON A.client_employee_pk = D.pk
       				LEFT JOIN user_base E ON C.product_manager = E.user_number
       				LEFT JOIN client F ON D.financial_body_pk = F.pk
             ]]>
			<comment>ALTER VIEW budget_order_view </comment>
		</sql>
	</changeSet>
	<changeSet id="6" author="simpletiny">
		<sql>
            <![CDATA[
            	ALTER TABLE budget_standard_order 
				CHANGE COLUMN start_city start_city VARCHAR(10) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT '' ,
				CHANGE COLUMN start_airport start_airport VARCHAR(10) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT '' ,
				CHANGE COLUMN end_city end_city VARCHAR(10) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT '' ,
				CHANGE COLUMN end_airport end_airport VARCHAR(10) CHARACTER SET 'utf8' COLLATE 'utf8_bin' NULL DEFAULT '' ;
				
				update budget_standard_order set start_city ='' where start_city is null;
				update budget_standard_order set start_airport ='' where start_airport is null;
				update budget_standard_order set end_city ='' where end_city is null;
				update budget_standard_order set end_airport ='' where end_airport is null;
             ]]>
			<comment>ALTER TABLE budget_standard_order </comment>
		</sql>
	</changeSet>


	<changeSet id="7" author="simpletiny">
		<sql>
            <![CDATA[
            		DROP VIEW IF EXISTS budget_order_view;
            		CREATE VIEW budget_order_view AS
					select  A.team_number, 
					    	A.product_name,
							'' as product_pk,
					    	A.client_employee_pk, 
					    	C.name AS client_employee_name,
					    	A.independent_flg, 
					    	A.comment, 
					    	A.other_cost_comment, 
					    	A.other_cost, 
					    	A.fy, 
					    	A.special_cost, 
					    	A.special_count, 
					    	A.adult_cost, 
					    	A.adult_count, 
					    	A.receivable, 
					    	A.days, 
					    	A.departure_date, 
					    	A.pk, 
					    	A.update_user,
					    	A.create_user AS create_user_number,
					    	B.user_name AS create_user,
					    	A.confirm_flg, 
					    	A.create_time,
					    	A.update_time,
					    	A.confirm_date,
					    	A.confirm_file,
					    	'N' AS standard_flg,
					    	A.product_manager AS product_manager_number,
					    	D.user_name AS product_manager,
					    	A.air_ticket_cost,
					    	A.product_cost,
					    	A.operate_flg,
					    	A.name_list,
                            '' AS passenger_captain,
                            '' AS receivable_comment,
                            '' AS treat_comment,
                            '' AS client_name,
                            '' AS ticket_number,
                            '' AS start_city,
                            '' AS start_airport,
                            '' AS end_city,
                            '' AS end_airport,
                            '' AS off_time,
                            '' AS land_time,
                            '' AS next_day,
                            case when
							A.departure_date>now() then 'no'
							when now()>=A.departure_date and
							DATE_ADD(A.departure_date,interval A.days-1 day) >
							now()
							then 'yes'
							when now()>=DATE_ADD(A.departure_date,interval A.days-1 day) then 'back'
							end
							AS status
					from budget_non_standard_order A LEFT JOIN user_base B ON A.create_user = B.user_number
					LEFT JOIN client_employee C ON A.client_employee_pk = C.pk
					LEFT JOIN user_base D ON A.product_manager = D.user_number
					union all 
					select  A.team_number, 
					    	C.name AS product_name,
							A.product_pk,
					    	A.client_employee_pk,
					    	D.name AS client_employee_name,
					    	A.independent_flg, 
					    	A.comment, 
					    	A.other_cost_comment, 
					    	A.other_cost, 
					    	A.fy, 
					    	A.special_cost, 
					    	A.special_count, 
					    	A.adult_cost, 
					    	A.adult_count, 
					    	A.receivable, 
					    	A.days, 
					    	A.departure_date, 
					    	A.pk, 
					    	A.update_user, 
					    	A.create_user AS create_user_number, 
					    	B.user_name AS create_user,
					    	A.confirm_flg, 
					    	A.create_time,
					    	A.update_time,
					    	A.confirm_date,
					    	A.confirm_file,
					    	'Y' AS standard_flg,
					    	C.product_manager AS product_manager_number,
					    	E.user_name AS product_manager,
					    	A.air_ticket_cost,
					    	A.product_cost,
					    	A.operate_flg,
					    	A.name_list,
                            A.passenger_captain,
                            A.receivable_comment,
                            A.treat_comment,
                            F.client_short_name AS client_name,
                            A.ticket_number,
                            A.start_city,
                            A.start_airport,
                            A.end_city,
                            A.end_airport,
                            A.off_time,
                            A.land_time,
                            A.next_day,
                            case when
							A.departure_date>now() then 'no'
							when now()>=A.departure_date and
							DATE_ADD(A.departure_date,interval A.days-1 day) >
							now()
							then 'yes'
							when now()>=DATE_ADD(A.departure_date,interval A.days-1 day) then 'back'
							end
							AS status
					from budget_standard_order A LEFT JOIN user_base B ON A.create_user = B.user_number
					LEFT JOIN product C ON A.product_pk = C.pk
					LEFT JOIN client_employee D ON A.client_employee_pk = D.pk
       				LEFT JOIN user_base E ON C.product_manager = E.user_number
       				LEFT JOIN client F ON D.financial_body_pk = F.pk
             ]]>
			<comment>ALTER VIEW budget_order_view </comment>
		</sql>
	</changeSet>
</databaseChangeLog>



