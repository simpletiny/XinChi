package seentao.xhsn.person.center.service.impl;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import seentao.xhsn.bean.HsDesiredPositionBO;
import seentao.xhsn.bean.HsEnterpriseBO;
import seentao.xhsn.bean.HsEtpReleasejobBO;
import seentao.xhsn.bean.HsInterviewInformBO;
import seentao.xhsn.bean.HsPutresumeBO;
import seentao.xhsn.bean.HsResumeBO;
import seentao.xhsn.bean.HsResumeVisitorBO;
import seentao.xhsn.bean.HsSubjoinBO;
import seentao.xhsn.bean.HsUserBO;
import seentao.xhsn.bean.HsUserbasicinfoBO;
import seentao.xhsn.enterprise.info.dao.IInfoDAO;
import seentao.xhsn.enterprise.releasejob.dao.IReleasejobDAO;
import seentao.xhsn.enterprise.sendInform.dao.ISendInformDAO;
import seentao.xhsn.person.center.bean.PersonBean;
import seentao.xhsn.person.center.bean.PutResumeBean;
import seentao.xhsn.person.center.bean.RecommendedJobBean;
import seentao.xhsn.person.center.bean.ResumeVisitorBean;
import seentao.xhsn.person.center.service.IPersonCenterService;
import seentao.xhsn.person.desired.dao.IDesiredPositionDao;
import seentao.xhsn.person.hssubjoin.dao.IHsSubjoinDAO;
import seentao.xhsn.person.hsuser.dao.IHsUserDAO;
import seentao.xhsn.person.info.dao.IUBInfoDao;
import seentao.xhsn.person.put.dao.IPutResumeDAO;
import seentao.xhsn.person.resume.dao.IResumeDAO;
import seentao.xhsn.person.resumevisitor.dao.IResumeVisitorDAO;
import seentao.xhsn.sys.dictionaryfiledmap.dao.IDictionaryFieldMapDao;
import seentao.xhsn.tools.ArrayBoUtil;
import seentao.xhsn.tools.Page;

/**
 * 个人中心service 实现类
 * 
 * @author niushixing 2014-12-9 下午4:20:33
 * 
 */
@Service
public class PersonCenterServiceImpl implements IPersonCenterService {

	@Autowired
	private IDesiredPositionDao desiredDao;
	@Autowired
	private IUBInfoDao ubDao;
	@Autowired
	private IHsUserDAO userDao;
	@Autowired
	private IHsSubjoinDAO subDao;

	@Override
	public PersonBean getPersonBean(String user_id, String res_id) {
		HsUserBO user = new HsUserBO();
		user = userDao.selectByPrimaryKey(user_id);

		HsSubjoinBO sub = null;
		sub = subDao.findByUserIdAndResId(user_id, res_id);
		if (null == sub)
			sub = new HsSubjoinBO();

		HsUserbasicinfoBO ub = null;
		ub = ubDao.getByUserSysId(user_id);
		if (null == ub)
			ub = new HsUserbasicinfoBO();

		HsDesiredPositionBO desire = new HsDesiredPositionBO();
		List<HsDesiredPositionBO> list = desiredDao.findByUserIdAndResId(user_id, res_id);
		if (null != list && list.size() > 0) {
			desire = list.get(0);
		}

		PersonBean bean = new PersonBean();
		bean.setName(ub.getUser_name());
		bean.setCellphone(ub.getUser_phone());
		bean.setEmail(ub.getUser_email());

		// TODO 需要后台转化，现在后台没有工作种类数据
		bean.setDesire_job(desire.getJob_type());
		if (null != sub.getJob_exp_year()) {
			String exp = dicDao.getDictByParam("hs_userbasicinfo", "job_exp_year", sub.getJob_exp_year()).get("value");
			bean.setExp(exp);
		}

		bean.setImgPath(ub.getUser_photo());

		// 取得投放简历个数
		int applyCnt = putDao.getPutCnt(user_id, res_id);
		bean.setApplyCnt(applyCnt);
		// 取得面试通知个数
		int letterCnt = interviewDao.getInterviewCnt(user_id, res_id);
		bean.setLetterCnt(letterCnt);
		// 取得简历查看个数
		int visitorCnt = visitDao.getVisitorCnt(user_id, res_id);
		bean.setVisitorCnt(visitorCnt);
		return bean;
	}

	/**
	 * 取得用户的推荐工作，包括算法
	 * 
	 * @return
	 */
	@Override
	public List<RecommendedJobBean> findRecommendedJobs(Page<HsEtpReleasejobBO> page) {
		List<RecommendedJobBean> list = new ArrayList<RecommendedJobBean>();
		List<HsEtpReleasejobBO> jobList = new ArrayList<HsEtpReleasejobBO>();
		jobList = jobDao.getRecommendedJobByPage(page);
		if (null != jobList) {
			for (HsEtpReleasejobBO bo : jobList) {
				RecommendedJobBean bean = new RecommendedJobBean();
				bean.setJob_id(bo.getId());
				bean.setJobName(bo.getRel_name());
				bean.setComName(bo.getCompany_name());
				bean.setJobLocation(bo.getCounty_code());
				HsEnterpriseBO ent = infoDao.selectByPrimaryKey(bo.getCom_id());

				if (null != ent.getSize_id()) {
					String comSize = dicDao.getDictByParam("hs_enterprise", "size_id", ent.getSize_id()).get("value");
					bean.setComSize(comSize);
				}
				if (null != ent.getCom_type()) {
					String comProperty = dicDao.getDictByParam("hs_enterprise", "com_type", ent.getCom_type()).get(
							"value");
					bean.setComProperty(comProperty);
				}

				if (null != bo.getExp_id()) {
					String jobExp = dicDao.getDictByParam("hs_etp_releasejob", "exp_id", bo.getExp_id()).get("value");
					bean.setJobExp(jobExp);
				}

				if (null != bo.getEducation_code()) {
					String education = dicDao.getDictByParam("hs_etp_releasejob", "education_code",
							bo.getEducation_code()).get("value");
					bean.setJobEducation(education);
				}

				if (null != bo.getSalary_code()) {
					String salary = dicDao.getDictByParam("hs_etp_releasejob", "salary_code", bo.getSalary_code()).get(
							"value");
					bean.setJobSalary(salary);
				}
				bean.setJobDuty(bo.getRel_description());
				try {
					SimpleDateFormat sf = new SimpleDateFormat("yyyy-MM-dd");
					bean.setPublishTime(sf.format(sf.parse(bo.getCreate_time())));
				} catch (ParseException e) {
					bean.setPublishTime(null);
				}
				list.add(bean);
			}
		}
		return list;
	}

	@Autowired
	private IPutResumeDAO putDao;
	@Autowired
	private IResumeDAO resDao;
	@Autowired
	private IReleasejobDAO jobDao;
	@Autowired
	private IInfoDAO infoDao;
	@Autowired
	private IDictionaryFieldMapDao dicDao;

	@Override
	public List<PutResumeBean> findPutResumeByPage(Page<HsPutresumeBO> page) {
		List<PutResumeBean> listBean = new ArrayList<PutResumeBean>();
		List<HsPutresumeBO> list = putDao.findPutResumeByPage(page);
		if (null != list) {
			for (HsPutresumeBO put : list) {
				PutResumeBean bean = new PutResumeBean();
				SimpleDateFormat sf = new SimpleDateFormat("yyyy-MM-dd");
				bean.setPutDate(sf.format(put.getPutdatetime()));
				String job_id = put.getJob_id();
				HsEtpReleasejobBO job = jobDao.selectByPrimaryKey(job_id);
				if (null != job) {
					bean.setJobName(job.getRel_name());
					// dicDao.getDictByParam("", "", job.getCounty_code());
					bean.setJobArea(ArrayBoUtil.getCityByCode(job.getCounty_code()));
					String com_id = job.getCom_id();
					HsEnterpriseBO com = infoDao.selectByPrimaryKey(com_id);
					if (null != com) {
						bean.setComName(com.getEnt_name());
					}
				}

				HsResumeBO resume = resDao.selectByPrimaryKey(((HsPutresumeBO) page.getParams().get("bo")).getRes_id());
				if (null != resume) {
					bean.setResName(resume.getName());
				}
				listBean.add(bean);
			}
		}

		return listBean;
	}

	@Autowired
	private IResumeVisitorDAO visitDao;

	@Override
	public List<ResumeVisitorBean> findVisitorByPage(Page<HsResumeVisitorBO> page) {
		List<ResumeVisitorBean> list = new ArrayList<ResumeVisitorBean>();
		List<HsResumeVisitorBO> bolist = visitDao.findVisitorByPage(page);
		if (null != bolist) {
			for (HsResumeVisitorBO bo : bolist) {
				ResumeVisitorBean bean = new ResumeVisitorBean();
				String com_id = bo.getEnt_id();
				SimpleDateFormat sf = new SimpleDateFormat("yyyy-MM-dd");
				bean.setVisitDate(sf.format(bo.getVisitTime()));
				bean.setVisitCnt(bo.getVisitCnt());
				HsEnterpriseBO com = infoDao.selectByPrimaryKey(com_id);
				if (null != com) {
					bean.setComName(com.getEnt_name());
					bean.setComSize(dicDao.getDictByParam("hs_enterprise", "size_id", com.getSize_id()).get("value"));
					bean.setComType(ArrayBoUtil.getTradeByCode(com.getTrade_code()));
				}
				list.add(bean);
			}
		}
		return list;
	}

	@Autowired
	private ISendInformDAO interviewDao;

	@Override
	public List<HsInterviewInformBO> findInterviewByPage(Page<HsInterviewInformBO> page) {
		List<HsInterviewInformBO> list = new ArrayList<HsInterviewInformBO>();
		list = interviewDao.findInterviewByPage(page);
		return list;
	}
}
