package seentao.xhsn.person.customskill.action;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import org.apache.commons.beanutils.PropertyUtils;
import org.apache.commons.lang3.StringUtils;
import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Controller;

import seentao.xhsn.bean.HsCustomSkillBO;
import seentao.xhsn.bean.HsDictionaryDataBO;
import seentao.xhsn.bean.HsPersonLeftMenuBO;
import seentao.xhsn.bean.HsResumeBO;
import seentao.xhsn.common.ResourcesConstants;
import seentao.xhsn.common.SeentaoApplicationContext;
import seentao.xhsn.common.SupperBO;
import seentao.xhsn.common.UserSessionBean;
import seentao.xhsn.exception.BusinessException;
import seentao.xhsn.person.customskill.bean.HsCustomSkillExtendBO;
import seentao.xhsn.person.customskill.service.ICustomSkillService;
import seentao.xhsn.person.resume.service.IResumeService;
import seentao.xhsn.sys.dictionaryfiledmap.service.IDictionaryFieldMapService;
import seentao.xhsn.sys.leftmenu.service.ILeftMenuService;


/**
 * @Description:专业技能填写和修改
 * @author 李君彦
 * @date 2014-11-24 下午3:07:41 
 * @version V1.0   
 */

@Controller
@Scope("prototype")
public class CustomSkillAction{
	private Logger logger=Logger.getLogger(CustomSkillAction.class);
	
	private HsCustomSkillExtendBO bo;
	//是否继续新增
	private String isAdd;
	
	private List<HsCustomSkillExtendBO> boList;
	/**
	 * 当前左侧选中的菜单id
	 */
	private String lm_tab_name;
		
	/**
	 * 左侧菜单的集合
	 */
	private List<HsPersonLeftMenuBO> leftmenus;
		
	/**
	 * 简历完成度
	 */
	private String res_completeness;
	@Autowired
	private ILeftMenuService lmService;
	@Autowired
	private ICustomSkillService customSkillService;
	@Autowired
	private IDictionaryFieldMapService dictFieldMapService;
	
	private Map<String, List<HsDictionaryDataBO>> dicts;
	
	@Autowired
	private IResumeService resumeService;
	/**
	 * 新增
	 * @return
	 */
	public String saveCustomSkill(){
		UserSessionBean bean = (UserSessionBean) SeentaoApplicationContext.getSession(ResourcesConstants.LOGIN_SESSION_KEY);
		bo.setRes_id(bean.getRes_id());
		bo.setUser_id(bean.getUser_sys_id());
		HsCustomSkillBO customSkillBO=new HsCustomSkillBO();
		this.copyProperties(customSkillBO, bo);
		if(StringUtils.isNotEmpty(bo.getId()))
			customSkillService.update(customSkillBO);
		else
			customSkillService.insert(customSkillBO);
		
		HsResumeBO resBo = resumeService.getByPk(bean.getRes_id());
		resumeService.generateSkill(resBo);
		return "SUCCESS";
	}
	
	public String updateCustomSkill(){
		customSkillService.update(bo);
		UserSessionBean bean = (UserSessionBean) SeentaoApplicationContext.getSession(ResourcesConstants.LOGIN_SESSION_KEY);
		HsResumeBO resBo = resumeService.getByPk(bean.getRes_id());
		resumeService.generateSkill(resBo);
		return "SUCCESS";
	}
	
	public String delCustomSkill(){
		customSkillService.delCustomSkill(bo.getId());
		UserSessionBean bean = (UserSessionBean) SeentaoApplicationContext.getSession(ResourcesConstants.LOGIN_SESSION_KEY);
		HsResumeBO resBo = resumeService.getByPk(bean.getRes_id());
		resumeService.generateSkill(resBo);
		return "SUCCESS";
	}
	
	public String findCustomSkill(){
		HsCustomSkillBO customSkillBO = customSkillService.selectByPrimaryKey(bo.getId());
		dicts = dictFieldMapService.findDictDataByParam(bo.getTable_name());
		this.copyProperties(bo,customSkillBO); 
		if(StringUtils.isNotEmpty(customSkillBO.getProfessional_code())){
			Map<String, String> professional = dictFieldMapService.getDictValueByParam(bo.getTable_name(), "professional_code", customSkillBO.getProfessional_code());
			bo.setProfessional_value(professional.get("value"));
		}
		if(StringUtils.isNotEmpty(customSkillBO.getLevel())){
			Map<String, String> level = dictFieldMapService.getDictValueByParam(bo.getTable_name(), "level", customSkillBO.getLevel());
			bo.setLevel_value(level.get("value"));
		}
		return "SUCCESS";
	}

	private void copyProperties(SupperBO dest, SupperBO src) {
		try {
			PropertyUtils.copyProperties(dest, src);
		} catch (Exception e) {
			logger.error("属性值拷贝失败",e);
			throw new BusinessException(e);
		}
	}
	
	public String findAllCustomSkill(){
		HsCustomSkillBO paramBO=new HsCustomSkillBO();
		UserSessionBean sessionBean=(UserSessionBean) SeentaoApplicationContext.getSession(ResourcesConstants.LOGIN_SESSION_KEY);
		paramBO.setRes_id(sessionBean.getRes_id());
		paramBO.setUser_id(sessionBean.getUser_sys_id());
		List<HsCustomSkillBO> list = customSkillService.getAllByParam(paramBO);
		dicts = dictFieldMapService.findDictDataByParam(paramBO.getTable_name());
		HsCustomSkillExtendBO extendBO =null;
		boList=new ArrayList<HsCustomSkillExtendBO>();
		for(HsCustomSkillBO customSkillBO:list){
			extendBO=new HsCustomSkillExtendBO();
			this.copyProperties(extendBO, customSkillBO);
			Map<String, String> professional = dictFieldMapService.getDictValueByParam(customSkillBO.getTable_name(), "professional_code", customSkillBO.getProfessional_code());
			extendBO.setProfessional_value(professional.get("value"));
			boList.add(extendBO);
		}
		isAdd=isAdd==null?"n":isAdd;
		//菜单处理
		leftmenus = lmService.findLeftMenuByParams();
		// 获取简历完成度
		res_completeness = lmService.getCompletenessByPK();
		return "SUCCESS";
	}
	/**
	 * 表单验证
	 */
	public void validateAddCustomSkill(){
		
	}

	public HsCustomSkillExtendBO getBo() {
		return bo;
	}

	public void setBo(HsCustomSkillExtendBO bo) {
		this.bo = bo;
	}

	public List<HsCustomSkillExtendBO> getBoList() {
		return boList;
	}

	public void setBoList(List<HsCustomSkillExtendBO> boList) {
		this.boList = boList;
	}

	public Map<String, List<HsDictionaryDataBO>> getDicts() {
		return dicts;
	}

	public void setDicts(Map<String, List<HsDictionaryDataBO>> dicts) {
		this.dicts = dicts;
	}

	public String getIsAdd() {
		return isAdd;
	}

	public void setIsAdd(String isAdd) {
		this.isAdd = isAdd;
	}

	public String getLm_tab_name() {
		return lm_tab_name;
	}

	public void setLm_tab_name(String lm_id) {
		this.lm_tab_name = lm_id;
	}

	public List<HsPersonLeftMenuBO> getLeftmenus() {
		return leftmenus;
	}

	public void setLeftmenus(List<HsPersonLeftMenuBO> leftmenus) {
		this.leftmenus = leftmenus;
	}

	public String getRes_completeness() {
		return res_completeness;
	}

	public void setRes_completeness(String res_completeness) {
		this.res_completeness = res_completeness;
	}
	
	
	
}