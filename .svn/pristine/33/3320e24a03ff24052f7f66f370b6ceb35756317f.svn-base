package seentao.xhsn.enterprise.releasejob.service.impl;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import seentao.xhsn.bean.HsEtpReleasejobBO;
import seentao.xhsn.common.ResourcesConstants;
import seentao.xhsn.common.SeentaoApplicationContext;
import seentao.xhsn.common.UserSessionBean;
import seentao.xhsn.enterprise.releasejob.bean.EnterpriseJobInfo;
import seentao.xhsn.enterprise.releasejob.dao.IReleasejobDAO;
import seentao.xhsn.enterprise.releasejob.service.IReleasejobService;
import seentao.xhsn.sys.dictionaryfiledmap.dao.IDictionaryFieldMapDao;
import seentao.xhsn.tools.Page;

/**
 * 企业发布职位Service实现类
 * 
 * @author niushixing 2014-12-3 上午10:26:09
 * 
 */
@Service
public class ReleasejobServiceImpl implements IReleasejobService {
	@Autowired
	private IReleasejobDAO rjDao;

	@Override
	@Transactional
	public String saveReleaseJob(HsEtpReleasejobBO bo) {
		if (null == bo.getId() || bo.getId().trim().equals("")) {
			bo.setCom_id(((UserSessionBean) SeentaoApplicationContext.getSession(ResourcesConstants.LOGIN_SESSION_KEY))
					.getUser_id());
			rjDao.insert(bo);
		} else {
			rjDao.update(bo);
		}
		return "OK";
	}

	@Override
	@Transactional
	public void updateJobStatus(String id, String status) {
		rjDao.updateJobStatus(id, status);
	}

	@Override
	public List<EnterpriseJobInfo> findJobList(String type, Page<HsEtpReleasejobBO> page) {
		String com_id = ((UserSessionBean) SeentaoApplicationContext.getSession(ResourcesConstants.LOGIN_SESSION_KEY))
				.getUser_id();
		HsEtpReleasejobBO bo = new HsEtpReleasejobBO();
		bo.setCom_id(com_id);
		bo.setRel_status(type);
		Map<String, Object> params = new HashMap<String, Object>();
		params.put("bo", bo);
		page.setParams(params);

		List<EnterpriseJobInfo> jobList = new ArrayList<EnterpriseJobInfo>();
		List<HsEtpReleasejobBO> rjlist = rjDao.getAllByParam(page);
		for (HsEtpReleasejobBO bor : rjlist) {
			int cnt = rjDao.getPutResumeCnt(bor.getCom_id(), bor.getId());
			EnterpriseJobInfo info = new EnterpriseJobInfo();
			info.setRjboId(bor.getId());
			info.setJobName(bor.getRel_name());

			if (null != bor.getExp_id()) {
				String jobExp = dicDao.getDictByParam("hs_etp_releasejob", "exp_id", bor.getExp_id()).get("value");
				info.setJobExp(jobExp);
			}

			info.setResumeCnt(String.valueOf(cnt));
			if (null != bor.getEducation_code()) {
				String education = dicDao
						.getDictByParam("hs_etp_releasejob", "education_code", bor.getEducation_code()).get("value");
				info.setEducation(education);
			}
			jobList.add(info);
		}
		return jobList;
	}

	@Autowired
	private IDictionaryFieldMapDao dicDao;

	@Override
	public HsEtpReleasejobBO findReleaseJobById(String rjboId) {
		HsEtpReleasejobBO rjbo = rjDao.selectByPrimaryKey(rjboId);
		if (null != rjbo.getSalary_code()) {
			String monthlySalary = dicDao.getDictByParam("hs_etp_releasejob", "salary_code", rjbo.getSalary_code())
					.get("value");
			rjbo.setMonthly_salary(monthlySalary);
		}
		if (null != rjbo.getEducation_code()) {
			String educationValue = dicDao.getDictByParam("hs_etp_releasejob", "education_code",
					rjbo.getEducation_code()).get("value");
			rjbo.setEducation_value(educationValue);
		}
		if (null != rjbo.getExp_id()) {
			String exp_value = dicDao.getDictByParam("hs_userbasicinfo", "job_exp_year", rjbo.getExp_id()).get("value");
			rjbo.setExp_value(exp_value);
		}
		return rjbo;
	}

	@Override
	public EnterpriseJobInfo getJobInfoById(String id) {
		HsEtpReleasejobBO bor = rjDao.selectByPrimaryKey(id);
		int cnt = rjDao.getPutResumeCnt(bor.getCom_id(), bor.getId());
		EnterpriseJobInfo job = new EnterpriseJobInfo();
		job.setRjboId(bor.getId());
		job.setJobName(bor.getRel_name());
		job.setResumeCnt(String.valueOf(cnt));
		if (null != bor.getExp_id()) {
			String jobExp = dicDao.getDictByParam("hs_etp_releasejob", "exp_id", bor.getExp_id()).get("value");
			job.setJobExp(jobExp);
		}
		if (null != bor.getEducation_code()) {
			String education = dicDao.getDictByParam("hs_etp_releasejob", "education_code", bor.getEducation_code())
					.get("value");
			job.setEducation(education);
		}
		return job;
	}
}
