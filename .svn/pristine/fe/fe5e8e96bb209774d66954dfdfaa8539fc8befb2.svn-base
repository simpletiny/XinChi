package seentao.xhsn.findpswd.service.impl;

import java.sql.Timestamp;
import java.util.Date;
import java.util.List;

import org.apache.commons.codec.binary.Base64;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import seentao.xhsn.bean.HsUserBO;
import seentao.xhsn.common.DBCommonUtil;
import seentao.xhsn.common.DictionaryEnum;
import seentao.xhsn.findpswd.service.IFindPswdService;
import seentao.xhsn.regist.dao.IRegistDao;
import seentao.xhsn.tools.PropertiesUtil;
import seentao.xhsn.tools.mail.MailSender;
import seentao.xhsn.tools.mail.MailSenderInfo;

/** 
 * @author wjx 
 * @date 2014年12月30日 上午11:25:11 
 * @note 
 */
@Service
@Transactional
public class FindPswdServiceImpl implements IFindPswdService {
	@Autowired
	private IRegistDao registDao;
	
	@Override
	public boolean sendEmailByFindPswd(String user_email) {
		boolean flag = false;
		//1:根据邮箱，修改验证码
		HsUserBO parambo = new HsUserBO();
		parambo.setUser_email(user_email); 
		parambo.setUser_type(Integer.valueOf(DictionaryEnum.ENTERPRISE_TYPE.getStringValue())); 
		List<HsUserBO> userboList = registDao.findUserByParam(parambo);
		if(userboList != null && userboList.size() > 0){
			String code = DBCommonUtil.genPk().substring(DBCommonUtil.genPk().length() - 6);
			HsUserBO bo = new HsUserBO();
			bo.setId(userboList.get(0).getId());
			bo.setVerification_code(code);
			bo.setUser_opentime(new Timestamp(new Date().getTime()));
			registDao.update(bo);
			//2:给邮箱发送邮件
			sendEmail(user_email, code);
			flag = true;
		}
		return flag;
	}

	private void sendEmail(String email, String pswd) {
		MailSenderInfo mailInfo = new MailSenderInfo();
		mailInfo.setMailServerHost(PropertiesUtil.getProperty("mailServerHost"));
		mailInfo.setMailServerPort(PropertiesUtil.getProperty("mailServerPort"));
		mailInfo.setValidate(true);
		mailInfo.setUserName(PropertiesUtil.getProperty("mailSendUser"));
		String pwd = new String(Base64.decodeBase64(PropertiesUtil.getProperty("mailSendPwd")));
		mailInfo.setPassword(pwd);
		mailInfo.setFromAddress(PropertiesUtil.getProperty("mailSendUser"));
		mailInfo.setToAddress(email);
		String subject = email + "，您的验证码";
		mailInfo.setSubject(subject);
		String html = "<div id=\"mailContentContainer\" > " + " <p>亲爱的" + email
				+ "您好:<br><br> 您的验证码是：<b>" + pswd + "</b>。</p></div>";
		mailInfo.setContent(html);
		// 这个类主要来发送邮件
		MailSender sms = new MailSender();
		sms.sendHtmlMail(mailInfo);
	}

	@Override
	public void updateVerification(HsUserBO user) {
		String code = DBCommonUtil.genPk().substring(DBCommonUtil.genPk().length() - 6);
		user.setVerification_code(code);
		registDao.update(user);
	}

}
