package seentao.xhsn.sys.resume.service.impl;

import java.io.File;
import java.util.List;
import java.util.Map;
import java.util.UUID;

import javax.servlet.ServletContext;

import org.apache.struts2.ServletActionContext;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import seentao.xhsn.bean.HsResumeBO;
import seentao.xhsn.bean.HsUserBO;
import seentao.xhsn.common.DictionaryEnum;
import seentao.xhsn.common.ResourcesConstants;
import seentao.xhsn.person.hsuser.dao.IHsUserDAO;
import seentao.xhsn.person.resume.dao.IResumeDAO;
import seentao.xhsn.person.resume.service.IResumeService;
import seentao.xhsn.sys.resume.service.IResumeManagerService;
import seentao.xhsn.tools.FreemakerUtil;
import seentao.xhsn.tools.MD5Util;
import seentao.xhsn.tools.PropertiesUtil;

@Service
public class ResumeManagerServiceImpl implements IResumeManagerService {

	@Autowired
	private IHsUserDAO userDao;
	@Autowired
	private IResumeService resService;
	@Autowired
	private IResumeDAO resumeDao;
	
	@Override
	@Transactional
	public void generateTemplet() {
		HsUserBO userBO=new HsUserBO();
		userBO.setUser_type(Integer.valueOf(DictionaryEnum.PERSON_TYPE.getStringValue()));
		//查找所有学生
		List<HsUserBO> userList = userDao.getAllByParam(userBO);
		for(HsUserBO ubo:userList){
			HsResumeBO resumeBO = resumeDao.getByUserId(ubo.getId());
			//生成基本信息
			resService.generateBaseInfo(resumeBO);
			//求职意向
			resService.generateDesire(resumeBO);
			//自我评价
			resService.generateEvaluate(resumeBO);
			//工作实习
			resService.generatePractice(resumeBO);
			//教育
			resService.generateEducation(resumeBO);
			//证书
			resService.generateCertificate(resumeBO);
			//培训
			resService.generateTrain(resumeBO);
			//项目
			resService.generateProject(resumeBO);
			//技能
			resService.generateSkill(resumeBO);
		}
	}
	
	/**
	 * 简历导出静态文件生成
	 * @return
	 */
	private String generateExportHtml(String tempKey,String tempFolde,String userID,Map<String, Object> data){
		String filesysPath = PropertiesUtil.getProperty(ResourcesConstants.UPLOAD_PATH);
		String templetPath = PropertiesUtil.getProperty(tempKey);
		String savePath = createExportPath(filesysPath, userID + "/" + PropertiesUtil.getProperty(tempFolde));
		String htmlPath =filesysPath + savePath;
		ServletContext context = ServletActionContext.getServletContext();		
		FreemakerUtil.createHTML(context, data, templetPath, htmlPath);
		return savePath;
	}

	/**
	 * 生成HTML路径
	 * 
	 * @return
	 */
	private String createExportPath(String filesysPath,String savePath) {
		
		String htmlpath = filesysPath + PropertiesUtil.getProperty("resumeexportfolder") + savePath;
		File file = new File(htmlpath);
		if (!file.exists()) {
			file.mkdirs();
		}
		String path = PropertiesUtil.getProperty("resumeexportfolder") + savePath;
		String name = createHtmlName() + ".html";
		path += name;
		return path;
	}
	
	/**
	 * 生成HTML名称
	 * 
	 * @return
	 */
	private String createHtmlName() {
		String id = UUID.randomUUID().toString();
		return MD5Util.getMD5Str(id);
	}
}
