package seentao.xhsn.sys.dictionaryfiledmap.dao.impl;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.apache.ibatis.session.SqlSession;
import org.mybatis.spring.support.SqlSessionDaoSupport;
import org.springframework.stereotype.Service;

import seentao.xhsn.bean.HsDictionaryDataBO;
import seentao.xhsn.bean.HsDictionaryFieldMapBO;
import seentao.xhsn.common.DaoUtil;
import seentao.xhsn.sys.dictionaryfiledmap.dao.IDictionaryFieldMapDao;

/** 
 * @author wjx 
 * @date 2014年11月28日 下午2:06:57 
 * @note 
 */
@Service
public class DictionaryFieldMapDaoImpl extends SqlSessionDaoSupport implements
		IDictionaryFieldMapDao {

	private SqlSession sqlSession;
	private DaoUtil daoUtil;

	public void initDao() {
		if (daoUtil == null) {
			sqlSession = sqlSession == null ? getSqlSession() : sqlSession;
			daoUtil = new DaoUtil(sqlSession);
		}
	}
	
	/**
	 * 根据对象来获取该对象所需要的字典数据
	 * @param bo
	 * @return
	 */
	@Override
	public Map<String, List<HsDictionaryDataBO>> findByParam(String tablename){
		Map<String, List<HsDictionaryDataBO>> result = null;
		List<HsDictionaryFieldMapBO> maps = findMapByTabName(tablename);
		if(maps != null && maps.size() > 0){
			result = new HashMap<String, List<HsDictionaryDataBO>>();
			for (int i = 0; i < maps.size(); i++) {
				HsDictionaryFieldMapBO dfm  = maps.get(i);
				List<HsDictionaryDataBO> datas = null;
				if(dfm != null && dfm.getDictionary_catalog() != null && dfm.getDictionary_catalog().trim().length() > 0){
					datas = findDatasByDictCatalog(dfm.getDictionary_catalog());
					result.put(dfm.getDictionary_catalog(), datas);
				}
			}
		}
		return result;
	}
	
	/**
	 * 根据字典编目获取字典的数据列表
	 * @param dictionary_catalog
	 * @return
	 */
	private List<HsDictionaryDataBO> findDatasByDictCatalog(
			String dictionary_catalog) {
		HsDictionaryDataBO param = new HsDictionaryDataBO();
		param.setDictionary_catalog(dictionary_catalog);
		return daoUtil.selectByBOParamT("seentao.xhsn.bean.mappers.HsDictionaryDataBOMapper.selectByPram", param);
	}

	/**
	 * 根据表名获取映射信息
	 * @param tablename
	 * @return
	 */
	private List<HsDictionaryFieldMapBO> findMapByTabName(String tablename) {
		HsDictionaryFieldMapBO param = new HsDictionaryFieldMapBO();
		param.setTable_name(tablename);
		return daoUtil.selectByBOParamT("seentao.xhsn.bean.mappers.HsDictionaryFieldMapBOMapper.selectByParam", param);
	}

	@Override
	public Map<String, String> getDictByParam(String tablename, String fieldname,
			String dict_code) {
		Map<String, String> result = null;
		/*String sql = "select * from hs_dictionary_data "
				+ "where dictionary_catalog=("
					+ "select dictionary_catalog from hs_dictionary_field_map "
					+ "where table_name='" + tablename + "' and field_name='" + fieldname + "'"
				+ ") and dictionary_code='" + dict_code + "'";*/
		Map<String, String > param = new HashMap<String, String>();
		param.put("table_name", tablename);
		param.put("field_name", fieldname);
		param.put("dict_code", dict_code);
		List<Map> result_list =  daoUtil.selectByMapParam("seentao.xhsn.bean.mappers.HsUserbasicinfoBOMapper.selectDictValueByParam", param);
		if(result_list != null && result_list.size() > 0){
			result = result_list.get(0);
		}else{
			result = new HashMap<String, String>();
			result.put("value", "");
		}
		return result;
	}

}
