package seentao.xhsn.sys.person.service.impl;

import java.sql.Timestamp;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Iterator;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import seentao.xhsn.bean.HsResumeBO;
import seentao.xhsn.bean.HsTaskBO;
import seentao.xhsn.common.ResourcesConstants;
import seentao.xhsn.person.resume.dao.IResumeDAO;
import seentao.xhsn.sys.person.bean.PersonResumeBean;
import seentao.xhsn.sys.person.service.IPersonService;
import seentao.xhsn.sys.seentaotask.service.ISeenTaoTaskService;
import seentao.xhsn.tools.Page;

@Service
public class PersonServiceImpl implements IPersonService {
	@Autowired
	private IResumeDAO resumeDao;

	@Override
	public List<PersonResumeBean> searchResume(Page page) {
		List<PersonResumeBean> list = new ArrayList<PersonResumeBean>();
		list = resumeDao.getResumeForAdminByPage(page);
		Iterator<PersonResumeBean> iter = list.iterator();
		SimpleDateFormat sf = new SimpleDateFormat("yyyy-MM-dd");
		while (iter.hasNext()) {
			PersonResumeBean bean = iter.next();
			bean.setGender(bean.getGender().equals("0") ? "男" : "女");
			if (null != bean.getModify_time()) {
				try {
					bean.setModify_time(sf.format(sf.parse(bean.getModify_time())));
				} catch (ParseException e) {
					bean.setModify_time(null);
					continue;
				}
			}
			if (null != bean.getCreate_time()) {
				try {
					bean.setCreate_time(sf.format(sf.parse(bean.getModify_time())));
				} catch (ParseException e) {
					bean.setCreate_time(null);
					continue;
				}
			}
		}
		return list;
	}

	@Override
	@Transactional
	public void autoOpenResume(String[] param) {
		HsResumeBO bo = new HsResumeBO();
		if (param != null && param.length > 0) {
			bo.setId(param[0]);
			bo.setIsopen("Y");
		}
		resumeDao.update(bo);
	}

	@Autowired
	private ISeenTaoTaskService taskService;

	@Override
	@Transactional
	public String closeResume(String res_id) {
		// 更新数据库
		HsResumeBO bo = new HsResumeBO();
		bo.setId(res_id);
		bo.setIsopen("N");
		resumeDao.update(bo);
		// 添加计划任务
		HsTaskBO task = new HsTaskBO();
		Calendar c = Calendar.getInstance();
		c.setTimeInMillis(System.currentTimeMillis());
		c.add(Calendar.MONTH, 3);
		task.setExecuteTime(new Timestamp(c.getTimeInMillis()));
		task.setExecutor("personServiceImpl");
		task.setMethod("autoOpenResume");
		task.setParameters(res_id);
		task.setTaskType(ResourcesConstants.TASK_ONETIME);
		task.setIsdone("N");
		taskService.addTask(task);
		return "OK";
	}

	@Override
	@Transactional
	public String openResume(String res_id) {
		HsResumeBO bo = new HsResumeBO();
		bo.setId(res_id);
		bo.setIsopen("Y");
		resumeDao.update(bo);
		// 去除任务列表中相关的任务
		HsTaskBO task = new HsTaskBO();
		task.setExecutor("personServiceImpl");
		task.setMethod("autoOpenResume");
		task.setParameters(res_id);
		taskService.removeTask(task);
		return "OK";
	}
}
