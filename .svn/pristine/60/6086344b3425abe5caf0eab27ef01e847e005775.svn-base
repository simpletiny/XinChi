package seentao.xhsn.sys.adminlogin;

import org.apache.commons.beanutils.PropertyUtils;
import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Controller;

import seentao.xhsn.bean.HsUserBO;
import seentao.xhsn.common.DictionaryEnum;
import seentao.xhsn.common.ResourcesConstants;
import seentao.xhsn.common.SeentaoApplicationContext;
import seentao.xhsn.common.UserSessionBean;
import seentao.xhsn.exception.BusinessException;
import seentao.xhsn.login.action.LoginAction;
import seentao.xhsn.login.bean.LoginBean;
import seentao.xhsn.login.service.ILoginService;
import seentao.xhsn.login.util.PassWordUtil;

import com.opensymphony.xwork2.ActionSupport;

/** 
 * @author wjx 
 * @date 2015年1月13日 下午4:55:39 
 * @note 
 */
@Controller
@Scope("prototype")
public class AdminLoginAction extends ActionSupport {

	private static final long serialVersionUID = 1L;
	private Logger logger = Logger.getLogger(AdminLoginAction.class);
	
	private LoginBean admin;
	private HsUserBO bo;
	private String tip;
	
	@Autowired
	private ILoginService loginService;
	
	public String adminLogin(){
		if(validateField(admin)){
			if(admin != null && DictionaryEnum.ADMIN_TYPE.getStringValue().equals(String.valueOf(admin.getType()))){
				String pwd=PassWordUtil.createPassword(admin.getUser_pwd());
				bo =  loginService.getUserBeanByLoginInfo(admin.getUser_mail(), pwd, String.valueOf(admin.getType()));
				if (bo == null) {
					this.tip = "用户名、密码错误！";
					return "FAIL";
				} else {
					UserSessionBean sessionBean = new UserSessionBean();
					try {
						PropertyUtils.copyProperties(sessionBean, bo);
					} catch (Exception e) {
						logger.error("设置session失败", e);
						throw new BusinessException(e);
					}
					sessionBean.setUser_sys_id(bo.getId());
					sessionBean.setUser_email(bo.getUser_email());
					sessionBean.setUser_type(bo.getUser_type());
					SeentaoApplicationContext.setSession(
							ResourcesConstants.LOGIN_SESSION_KEY, sessionBean);
				}
			}
		}else{
			//tip = "字段校验失败";
			return "FAIL";
		}
		return "SUCCESS";
	}
	
	/** 系统用户登录校验
	 * @param bean
	 * @return
	 */
	private boolean validateField(LoginBean bean) {
		if(bean ==  null){
			this.tip = "参数不正确！";
			return false;
		}
		if(bean.getUser_mail() == null || bean.getUser_mail().trim().length() <= 0){
			this.tip = "用户名不能为空！";
			return false;
		}
		if(bean.getUser_pwd() == null || bean.getUser_pwd().trim().length() <= 0){
			this.tip = "密码不能为空！";
			return false;
		}
		
		return true;
	}

	public LoginBean getAdmin() {
		
		return admin;
	}

	public void setAdmin(LoginBean admin) {
		this.admin = admin;
	}

	public HsUserBO getBo() {
		return bo;
	}

	public void setBo(HsUserBO bo) {
		this.bo = bo;
	}

	public String getTip() {
		return tip;
	}

	public void setTip(String tip) {
		this.tip = tip;
	}
	

}
