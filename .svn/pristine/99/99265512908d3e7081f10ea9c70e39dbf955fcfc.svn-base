package seentao.xhsn.enterprise.info.service.impl;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.util.UUID;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import seentao.xhsn.bean.HsEnterpriseBO;
import seentao.xhsn.common.ResourcesConstants;
import seentao.xhsn.common.SeentaoApplicationContext;
import seentao.xhsn.enterprise.info.dao.IInfoDAO;
import seentao.xhsn.enterprise.info.service.IEnterpriseService;
import seentao.xhsn.tools.MD5Util;
import seentao.xhsn.tools.PropertiesUtil;

/**
 * @author wjx
 * @date 2014年12月4日 下午3:21:49
 * @note 公司基本信息的service的实现类
 */
@Service
public class EnterpriseServiceImpl implements IEnterpriseService {

	@Autowired
	private IInfoDAO infoDAO;

	@Override
	public HsEnterpriseBO getByPK(String id) {
		return infoDAO.selectByPrimaryKey(id);
	}

	@Override
	public void update(HsEnterpriseBO bo) {
		infoDAO.update(bo);
	}

	@Override
	public HsEnterpriseBO getBySysUserId(String id) {
		return infoDAO.getBySysUserId(id);
	}

	@Override
	public String uploadLogo(File file, String fileFileName) {
//		ServletContext context = ServletActionContext.getServletContext();

//		String basePath = context.getRealPath("/");
		String savePath = PropertiesUtil.getProperty(ResourcesConstants.UPLOAD_PATH);
		String path = "enterpriselogo/";
		String ext = fileFileName.substring(fileFileName.lastIndexOf("."), fileFileName.length());
		String ent_id = SeentaoApplicationContext.getCurrentUser();
		path += ent_id + "/";
		String fileName = MD5Util.getMD5Str(UUID.randomUUID().toString()) + ext;
		File folder = new File(savePath + path);
		if (!folder.exists()) {
			folder.mkdirs();
		}
		File newFile = new File(folder.getAbsolutePath() + "/" + fileName);
		try {
			FileOutputStream fos = new FileOutputStream(newFile);
			FileInputStream fis = new FileInputStream(file);
			byte[] buffer = new byte[1024];
			int len = 0;
			while ((len = fis.read(buffer)) > 0) {
				fos.write(buffer, 0, len);
			}
			fos.flush();
			fos.close();
			fis.close();
		} catch (Exception e) {
			return null;
		}
		return (path + fileName);
	}
}
