package seentao.xhsn.person.desired.action;

import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Controller;

import seentao.xhsn.bean.HsDesiredPositionBO;
import seentao.xhsn.bean.HsDictionaryDataBO;
import seentao.xhsn.bean.HsPersonLeftMenuBO;
import seentao.xhsn.bean.HsResumeBO;
import seentao.xhsn.common.ResourcesConstants;
import seentao.xhsn.common.SeentaoApplicationContext;
import seentao.xhsn.common.UserSessionBean;
import seentao.xhsn.person.desired.service.IDesiredPositionService;
import seentao.xhsn.person.resume.service.IResumeService;
import seentao.xhsn.sys.dictionaryfiledmap.service.IDictionaryFieldMapService;
import seentao.xhsn.sys.leftmenu.service.ILeftMenuService;
import seentao.xhsn.tools.ArrayBoUtil;

import com.opensymphony.xwork2.ActionSupport;

/** 
 * @author wjx 
 * @date 2014年11月24日 上午11:51:51 
 * @note 求职意向action
 */
@Controller
@Scope("prototype")
public class DesiredPositionAction extends ActionSupport{

	private static final long serialVersionUID = 1L;
	
	@Autowired
	private IDesiredPositionService service;
	
	@Autowired
	private IDictionaryFieldMapService dictFieldMapService;
	
	@Autowired
	private ILeftMenuService lmService;
	
	private String id;
	private HsDesiredPositionBO bo ;
	private String user_id;
	private String res_id;
	private Boolean edit_flag;
	private Map<String, List<HsDictionaryDataBO>> dicts;
	
	/**
	 * 当前左侧选中的菜单id
	 */
	private String lm_tab_name;
	
	/**
	 * 左侧菜单的集合
	 */
	private List<HsPersonLeftMenuBO> leftmenus;
	
	/**
	 * 简历完成度
	 */
	private String res_completeness;
	
	private String err_msg;
	
	/**
	 * 进入编辑页面
	 * 1、根据用户id和简历id获取求职意向信息
	 * 2、获取该类的字典信息
	 * @return
	 */
	public String edit(){
		UserSessionBean bean = (UserSessionBean) SeentaoApplicationContext.getSession(ResourcesConstants.LOGIN_SESSION_KEY);
		user_id = bean.getUser_sys_id();
		res_id = bean.getRes_id();
		bo = service.getByUserIdAndResId(user_id, res_id);
		if(bo != null && bo.getId() != null && bo.getId().trim().length() > 0){
			edit_flag = false;
			bo.setEmployment_type_value(dictFieldMapService.getDictValueByParam(bo.getTable_name(), "employment_type", bo.getEmployment_type()).get("value"));
			bo.setDesired_salary_scope_value(dictFieldMapService.getDictValueByParam(bo.getTable_name(), "desired_salary_scope", bo.getDesired_salary_scope()).get("value"));
			bo.setState_value(dictFieldMapService.getDictValueByParam(bo.getTable_name(), "state", bo.getState()).get("value"));
			bo.setDesired_city_value(ArrayBoUtil.getValueByCodes(ResourcesConstants.ARRAY_CITY, 
					ResourcesConstants.FIELD_CITY_CODE, 
					bo.getDesired_city(), 
					ResourcesConstants.FIELD_CITY_VALUE));
			bo.setJob_type_value(ArrayBoUtil.getValueByCodes(ResourcesConstants.ARRAY_JOB, 
					ResourcesConstants.FIELD_JOB_CODE, 
					bo.getJob_type(), 
					ResourcesConstants.FIELD_JOB_VALUE));
			bo.setDesired_trade_value(ArrayBoUtil.getValueByCodes(ResourcesConstants.ARRAY_TRADE, 
					ResourcesConstants.FIELD_TRADE_CODE, 
					bo.getDesired_trade(), 
					ResourcesConstants.FIELD_TRADE_VALUE));
		}else{
			edit_flag = true;
			bo  = new HsDesiredPositionBO();
			bo.setUser_id(user_id);
			bo.setRes_id(res_id);
		}
		
		lm_tab_name = bo.getTable_name();
		leftmenus = lmService.findLeftMenuByParams();
		dicts = dictFieldMapService.findDictDataByParam(new HsDesiredPositionBO().getTable_name());
		res_completeness = lmService.getCompletenessByPK();
		return "SUCCESS";
	}
	@Autowired
	private IResumeService resumeService;
	/**
	 * 保存一条信息
	 * @return
	 */
	public String save(){
		String result  = "SUCCESS";
		if(validateSaveForm(bo)){
			service.saveBo(bo);
			edit_flag = false;
			result =  "SUCCESS";
		}else{
			edit_flag = true;
			result = "FAIL";
		}
		bo.setEmployment_type_value(dictFieldMapService.getDictValueByParam(bo.getTable_name(), "employment_type", bo.getEmployment_type()).get("value"));
		bo.setDesired_salary_scope_value(dictFieldMapService.getDictValueByParam(bo.getTable_name(), "desired_salary_scope", bo.getDesired_salary_scope()).get("value"));
		bo.setState_value(dictFieldMapService.getDictValueByParam(bo.getTable_name(), "state", bo.getState()).get("value"));
		lm_tab_name = bo.getTable_name();
		leftmenus = lmService.findLeftMenuByParams();
		dicts = dictFieldMapService.findDictDataByParam(new HsDesiredPositionBO().getTable_name());
		res_completeness = lmService.getCompletenessByPK();
		bo.setDesired_city_value(ArrayBoUtil.getValueByCodes(ResourcesConstants.ARRAY_CITY, 
				ResourcesConstants.FIELD_CITY_CODE, 
				bo.getDesired_city(), 
				ResourcesConstants.FIELD_CITY_VALUE));
		bo.setJob_type_value(ArrayBoUtil.getValueByCodes(ResourcesConstants.ARRAY_JOB, 
				ResourcesConstants.FIELD_JOB_CODE, 
				bo.getJob_type(), 
				ResourcesConstants.FIELD_JOB_VALUE));
		bo.setDesired_trade_value(ArrayBoUtil.getValueByCodes(ResourcesConstants.ARRAY_TRADE, 
				ResourcesConstants.FIELD_TRADE_CODE, 
				bo.getDesired_trade(), 
				ResourcesConstants.FIELD_TRADE_VALUE));
		
		UserSessionBean bean = (UserSessionBean) SeentaoApplicationContext.getSession(ResourcesConstants.LOGIN_SESSION_KEY);
		HsResumeBO resBo = resumeService.getByPk(bean.getRes_id());
		resumeService.generateDesire(resBo);
		return result;
	}
	
	/**
	 * 校验表单
	 */
	public boolean validateSaveForm(HsDesiredPositionBO bo){
		//校验工作性质非空
		if(bo.getEmployment_type() == null || bo.getEmployment_type().trim().length() <= 0){
			err_msg = "期望工作性质不能为空";
			return false;
		}
		//校验期望工作地点非空
		if(bo.getDesired_city() == null || bo.getDesired_city().trim().length() <= 0){
			err_msg = "期望工作地点不能为空";
			return false;
		}
		//校验期望从事职业非空
		if(bo.getJob_type() == null || bo.getJob_type().trim().length() <= 0){
			err_msg = "期望从事职业不能为空";
			return false;
		}
		//校验期望从事行业非空
		if(bo.getDesired_trade() == null || bo.getDesired_trade().trim().length() <= 0){
			err_msg = "期望从事行业不能为空";
			return false;
		}
		//校验期望薪资非空
		if(bo.getDesired_salary_scope() == null || bo.getDesired_salary_scope().trim().length() <= 0){
			err_msg = "期望薪资不能为空";
			return false;
		}
		//校验工作状态非空
		if(bo.getState() == null || bo.getState().trim().length() <= 0){
			err_msg = "目前工作状态不能为空";
			return false;
		}
		return true;
		
		
	}

	public String getId() {
		return id;
	}

	public void setId(String id) {
		this.id = id;
	}

	public HsDesiredPositionBO getBo() {
		return bo;
	}

	public void setBo(HsDesiredPositionBO bo) {
		this.bo = bo;
	}

	public String getUser_id() {
		return user_id;
	}

	public void setUser_id(String user_id) {
		this.user_id = user_id;
	}

	public String getRes_id() {
		return res_id;
	}

	public void setRes_id(String res_id) {
		this.res_id = res_id;
	}

	public Boolean getEdit_flag() {
		return edit_flag;
	}

	public void setEdit_flag(Boolean edit_flag) {
		this.edit_flag = edit_flag;
	}

	public Map<String, List<HsDictionaryDataBO>> getDicts() {
		return dicts;
	}

	public void setDicts(Map<String, List<HsDictionaryDataBO>> dicts) {
		this.dicts = dicts;
	}

	public String getLm_tab_name() {
		return lm_tab_name;
	}

	public void setLm_tab_name(String lm_tab_name) {
		this.lm_tab_name = lm_tab_name;
	}

	public List<HsPersonLeftMenuBO> getLeftmenus() {
		return leftmenus;
	}

	public void setLeftmenus(List<HsPersonLeftMenuBO> leftmenus) {
		this.leftmenus = leftmenus;
	}

	public String getRes_completeness() {
		return res_completeness;
	}

	public void setRes_completeness(String res_completeness) {
		this.res_completeness = res_completeness;
	}

	public String getErr_msg() {
		return err_msg;
	}

	public void setErr_msg(String err_msg) {
		this.err_msg = err_msg;
	}
	
	
	
	
}
