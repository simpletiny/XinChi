<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xinchi.bean.mapper.ClientEmployeeMapper">
	<resultMap id="BaseResultMap" type="com.xinchi.bean.ClientEmployeeBean">
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="nick_name" property="nick_name" jdbcType="VARCHAR" />
		<result column="sex" property="sex" jdbcType="CHAR" />
		<result column="age" property="age" jdbcType="VARCHAR" />
		<result column="wechat" property="wechat" jdbcType="VARCHAR" />
		<result column="wechat1" property="wechat1" jdbcType="VARCHAR" />
		<result column="qq" property="qq" jdbcType="VARCHAR" />
		<result column="type" property="type" jdbcType="VARCHAR" />
		<result column="cellphone" property="cellphone" jdbcType="VARCHAR" />
		<result column="cellphone1" property="cellphone1" jdbcType="VARCHAR" />
		<result column="telephone" property="telephone" jdbcType="VARCHAR" />
		<result column="fax" property="fax" jdbcType="VARCHAR" />
		<result column="id" property="id" jdbcType="VARCHAR" />
		<result column="financial_body_pk" property="financial_body_pk" jdbcType="CHAR" />
		<result column="financial_body_name" property="financial_body_name" jdbcType="VARCHAR" />
		<result column="area" property="area" jdbcType="VARCHAR" />
		<result column="sales" property="sales" jdbcType="VARCHAR" />
		<result column="sales_name" property="sales_name" jdbcType="VARCHAR" />
		<result column="create_user" property="create_user" jdbcType="VARCHAR" />
		<result column="update_user" property="update_user" jdbcType="VARCHAR" />
		<result column="pk" property="pk" jdbcType="CHAR" />
		<result column="comment" property="comment" jdbcType="VARCHAR" />
		<result column="public_flg" property="public_flg" jdbcType="CHAR" />
		<result column="review_flg" property="review_flg" jdbcType="CHAR" />
		<result column="quit_flg" property="quit_flg" jdbcType="CHAR" />
		<result column="birth_year" property="birth_year" jdbcType="VARCHAR" />
		<result column="create_time" property="create_time" jdbcType="VARCHAR" />
		<result column="update_time" property="update_time" jdbcType="VARCHAR" />
		<result column="delete_flg" property="delete_flg" jdbcType="VARCHAR" />
		<result column="relation_level" property="relation_level" jdbcType="VARCHAR" />
		<result column="back_level" property="back_level" jdbcType="VARCHAR" />
		<result column="market_level" property="market_level" jdbcType="VARCHAR" />
		<result column="useful_time" property="useful_time" jdbcType="VARCHAR" />
		<result column="head_photo" property="head_photo" jdbcType="VARCHAR" />
		<result column="last_order_period" property="last_order_period" jdbcType="INTEGER" />
		<result column="year_oder_count" property="year_oder_count" jdbcType="INTEGER" />
	</resultMap>
	<resultMap id="AdminResultMap" extends="BaseResultMap" type="com.xinchi.bean.ClientEmployeeBean">
		<collection column="pk" property="employee_users" ofType="com.xinchi.bean.ClientEmployeeUserBean" select="selectEmployeeUserByEmployeePk">
			<result column="employee_pk" property="employee_pk" jdbcType="CHAR" />
			<result column="user_pk" property="user_pk" jdbcType="CHAR" />
			<result column="user_name" property="user_name" jdbcType="VACHAR" />
			<result column="pk" property="pk" jdbcType="CHAR" />
			<result column="create_user" property="create_user" jdbcType="VARCHAR" />
			<result column="update_user" property="update_user" jdbcType="VARCHAR" />
			<result column="create_time" property="create_time" jdbcType="VARCHAR" />
			<result column="update_time" property="update_time" jdbcType="VARCHAR" />
		</collection>
	</resultMap>


	<resultMap id="RelationLevelMap" type="com.xinchi.bean.RelationLevelDto">
		<result column="sales" property="sales" jdbcType="VARCHAR" />
		<result column="sales_name" property="sales_name" jdbcType="VARCHAR" />
		<result column="sum_cnt" property="sum_cnt" jdbcType="INTEGER" />
		<result column="strong_cnt" property="strong_cnt" jdbcType="INTEGER" />
		<result column="middle_cnt" property="middle_cnt" jdbcType="INTEGER" />
		<result column="weak_cnt" property="weak_cnt" jdbcType="INTEGER" />
		<result column="bad_cnt" property="bad_cnt" jdbcType="INTEGER" />
		<result column="unknow_cnt" property="unknow_cnt" jdbcType="INTEGER" />
	</resultMap>

	<sql id="Base_Column_List">

		name,
		nick_name,
		sex,
		wechat,
		wechat1,
		qq,
		type,
		cellphone,
		cellphone1,
		telephone,
		fax,
		id,
		financial_body_pk,
		financial_body_name,
		area,
		sales,
		sales_name,
		create_user,
		update_user,
		pk,
		comment,
		public_flg,
		birth_year,
		create_time,
		update_time,
		delete_flg,
		relation_level,
		back_level,
		market_level,
		review_flg,
		quit_flg,
		head_photo
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
		select
		A.name,
		A.nick_name,
		A.sex,
		A.wechat,
		A.wechat1,
		A.qq,
		A.type,
		A.cellphone,
		A.cellphone1,
		A.telephone,
		A.fax,
		A.id,
		A.financial_body_pk,
		IFNULL(B.client_short_name,A.financial_body_name) AS
		financial_body_name,
		A.area,
		A.sales,
		A.sales_name,
		A.create_user,
		A.update_user,
		A.pk,
		A.comment,
		A.public_flg,
		A.birth_year,
		A.create_time,
		A.update_time,
		A.delete_flg,
		A.relation_level,
		A.back_level,
		A.market_level,
		A.review_flg,
		A.quit_flg,
		A.head_photo
		from client_employee
		A LEFT JOIN
		client B ON
		A.financial_body_pk =
		B.pk
		where A.pk = #{pk,jdbcType=CHAR}
	</select>
	<select id="selectByPks" resultMap="BaseResultMap">
		select
		*
		from client_employee
		where pk in
		<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
			#{item}
		</foreach>
	</select>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from client_employee
		where pk = #{pk,jdbcType=CHAR}
	</delete>

	<insert id="insert" parameterType="com.xinchi.bean.ClientEmployeeBean">

		insert into client_employee

		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="name != null">
				name,
			</if>
			<if test="nick_name != null">
				nick_name,
			</if>
			<if test="sex != null">
				sex,
			</if>
			<if test="wechat != null">
				wechat,
			</if>
			<if test="wechat1 != null">
				wechat1,
			</if>
			<if test="qq != null">
				qq,
			</if>
			<if test="type != null">
				type,
			</if>
			<if test="cellphone != null">
				cellphone,
			</if>
			<if test="cellphone1 != null">
				cellphone1,
			</if>
			<if test="telephone != null">
				telephone,
			</if>
			<if test="fax != null">
				fax,
			</if>
			<if test="id != null">
				id,
			</if>
			<if test="financial_body_pk != null">
				financial_body_pk,
			</if>
			<if test="financial_body_name != null">
				financial_body_name,
			</if>
			<if test="area != null">
				area,
			</if>
			<if test="sales != null">
				sales,
			</if>
			<if test="sales_name != null">
				sales_name,
			</if>
			<if test="create_user != null">
				create_user,
			</if>
			<if test="update_user != null">
				update_user,
			</if>
			<if test="pk != null">
				pk,
			</if>
			<if test="comment != null">
				comment,
			</if>
			<if test="public_flg != null">
				public_flg,
			</if>
			<if test="birth_year != null">
				birth_year,
			</if>
			<if test="create_time != null">
				create_time,
			</if>
			<if test="update_time != null">
				update_time,
			</if>
			<if test="delete_flg != null">
				delete_flg,
			</if>
			<if test="head_photo != null">
				head_photo,
			</if>
			<if test="review_flg != null">
				review_flg,
			</if>
			<if test="quit_flg != null">
				quit_flg,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="nick_name != null">
				#{nick_name,jdbcType=VARCHAR},
			</if>
			<if test="sex != null">
				#{sex,jdbcType=CHAR},
			</if>
			<if test="wechat != null">
				#{wechat,jdbcType=VARCHAR},
			</if>
			<if test="wechat1 != null">
				#{wechat1,jdbcType=VARCHAR},
			</if>
			<if test="qq != null">
				#{qq,jdbcType=VARCHAR},
			</if>
			<if test="type != null">
				#{type,jdbcType=VARCHAR},
			</if>
			<if test="cellphone != null">
				#{cellphone,jdbcType=VARCHAR},
			</if>
			<if test="cellphone1 != null">
				#{cellphone1,jdbcType=VARCHAR},
			</if>
			<if test="telephone != null">
				#{telephone,jdbcType=VARCHAR},
			</if>
			<if test="fax != null">
				#{fax,jdbcType=VARCHAR},
			</if>
			<if test="id != null">
				#{id,jdbcType=VARCHAR},
			</if>
			<if test="financial_body_pk != null">
				#{financial_body_pk,jdbcType=CHAR},
			</if>
			<if test="financial_body_name != null">
				#{financial_body_name,jdbcType=VARCHAR},
			</if>
			<if test="area != null">
				#{area,jdbcType=VARCHAR},
			</if>
			<if test="sales != null">
				#{sales,jdbcType=VARCHAR},
			</if>
			<if test="sales_name != null">
				#{sales_name,jdbcType=VARCHAR},
			</if>
			<if test="create_user != null">
				#{create_user,jdbcType=VARCHAR},
			</if>
			<if test="update_user != null">
				#{update_user,jdbcType=VARCHAR},
			</if>
			<if test="pk != null">
				#{pk,jdbcType=CHAR},
			</if>
			<if test="comment != null">
				#{comment,jdbcType=VARCHAR},
			</if>
			<if test="public_flg != null">
				#{public_flg,jdbcType=CHAR},
			</if>
			<if test="birth_year != null">
				#{birth_year,jdbcType=VARCHAR},
			</if>
			<if test="create_time != null">
				#{create_time,jdbcType=VARCHAR},
			</if>
			<if test="update_time != null">
				#{update_time,jdbcType=VARCHAR},
			</if>
			<if test="delete_flg != null">
				#{delete_flg,jdbcType=CHAR},
			</if>
			<if test="head_photo != null">
				#{head_photo,jdbcType=VARCHAR},
			</if>
			<if test="review_flg != null">
				#{review_flg,jdbcType=CHAR},
			</if>
			<if test="quit_flg != null">
				#{quit_flg,jdbcType=CHAR},
			</if>
		</trim>
	</insert>


	<update id="updateByPrimaryKey" parameterType="com.xinchi.bean.ClientEmployeeBean">
		update client_employee
		<set>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="nick_name != null">
				nick_name = #{nick_name,jdbcType=VARCHAR},
			</if>
			<if test="sex != null">
				sex = #{sex,jdbcType=CHAR},
			</if>
			<if test="wechat != null">
				wechat = #{wechat,jdbcType=VARCHAR},
			</if>
			<if test="wechat1 != null">
				wechat1 = #{wechat1,jdbcType=VARCHAR},
			</if>
			<if test="qq != null">
				qq = #{qq,jdbcType=VARCHAR},
			</if>
			<if test="type != null">
				type = #{type,jdbcType=VARCHAR},
			</if>
			<if test="cellphone != null">
				cellphone = #{cellphone,jdbcType=VARCHAR},
			</if>
			<if test="cellphone1 != null">
				cellphone1 = #{cellphone1,jdbcType=VARCHAR},
			</if>
			<if test="telephone != null">
				telephone = #{telephone,jdbcType=VARCHAR},
			</if>
			<if test="fax != null">
				fax = #{fax,jdbcType=VARCHAR},
			</if>
			<if test="id != null">
				id = #{id,jdbcType=VARCHAR},
			</if>
			<if test="financial_body_pk != null">
				financial_body_pk = #{financial_body_pk,jdbcType=CHAR},
			</if>
			<if test="financial_body_name != null">
				financial_body_name = #{financial_body_name,jdbcType=VARCHAR},
			</if>
			<if test="area != null">
				area = #{area,jdbcType=VARCHAR},
			</if>
			<if test="sales != null">
				sales = #{sales,jdbcType=VARCHAR},
			</if>
			<if test="sales_name != null">
				sales_name = #{sales_name,jdbcType=VARCHAR},
			</if>
			<if test="create_user != null">
				create_user = #{create_user,jdbcType=VARCHAR},
			</if>
			<if test="update_user != null">
				update_user = #{update_user,jdbcType=VARCHAR},
			</if>
			<if test="pk != null">
				pk = #{pk,jdbcType=CHAR},
			</if>
			<if test="comment != null">
				comment = #{comment,jdbcType=VARCHAR},
			</if>
			<if test="public_flg != null">
				public_flg = #{public_flg,jdbcType=VARCHAR},
			</if>
			<if test="birth_year != null">
				birth_year = #{birth_year,jdbcType=VARCHAR},
			</if>
			<if test="update_user != null">
				update_user = #{update_user,jdbcType=VARCHAR},
			</if>
			<if test="update_time != null">
				update_time = #{update_time,jdbcType=VARCHAR},
			</if>
			<if test="delete_flg != null">
				delete_flg = #{delete_flg,jdbcType=VARCHAR},
			</if>
			<if test="relation_level != null">
				relation_level = #{relation_level,jdbcType=VARCHAR},
			</if>
			<if test="back_level != null">
				back_level = #{back_level,jdbcType=VARCHAR},
			</if>
			<if test="market_level != null">
				market_level = #{market_level,jdbcType=VARCHAR},
			</if>
			<if test="dimission_flg != null">
				dimission_flg = #{dimission_flg,jdbcType=VARCHAR},
			</if>
			<if test="head_photo != null">
				head_photo = #{head_photo,jdbcType=VARCHAR},
			</if>
			<if test="review_flg != null">
				review_flg = #{review_flg,jdbcType=VARCHAR},
			</if>
			<if test="quit_flg != null">
				quit_flg = #{quit_flg,jdbcType=VARCHAR},
			</if>
		</set>
		where pk = #{pk,jdbcType=CHAR}
	</update>

	<select id="selectByParam" parameterType="com.xinchi.bean.ClientEmployeeBean" resultMap="BaseResultMap">
		select
		A.name,
		A.nick_name,
		A.sex,
		CASE WHEN isnull(A.birth_year) or A.birth_year='' then 0 else year(now())-A.birth_year
		END as age,
		A.wechat,
		A.wechat1,
		A.qq,
		A.type,
		A.cellphone,
		A.cellphone1,
		A.telephone,
		A.fax,
		A.id,
		A.financial_body_pk,
		IFNULL(B.client_short_name,A.financial_body_name) AS
		financial_body_name,
		B.client_area as area,
		C.user_names AS
		sales_name,
		A.create_user,
		A.update_user,
		A.pk,
		A.comment,
		A.public_flg,
		A.delete_flg,
		A.birth_year,
		A.create_time,
		A.update_time,
		A.relation_level,
		A.back_level,
		A.market_level,
		A.dimission_flg,
		A.review_flg,
		A.quit_flg,
		A.head_photo
		from
		client_employee
		A LEFT
		JOIN client B ON A.financial_body_pk = B.pk
		LEFT JOIN view_client_employee_user C ON A.pk =
		C.employee_pk
		<where>
			<if test="sales != null">
				and C.user_pks like CONCAT('%',#{sales,jdbcType=VARCHAR},'%')
			</if>
			<if test="name != null">
				and A.name = #{name,jdbcType=VARCHAR}
			</if>
			<if test="financial_body_pk != null">
				and A.financial_body_pk = #{financial_body_pk,jdbcType=VARCHAR}
			</if>
			<if test="financial_body_name != null">
				and B.client_short_name = #{financial_body_name,jdbcType=VARCHAR}
			</if>
			<if test="public_flg != null and public_flg !=''">
				and A.public_flg = #{public_flg,jdbcType=VARCHAR}
			</if>
			<if test='cellphone != null and cellphone !=""'>
				and (A.cellphone = #{cellphone,jdbcType=VARCHAR} OR A.cellphone1 = #{cellphone,jdbcType=VARCHAR})
			</if>
			<if test='wechat != null and wechat !=""'>
				and (A.wechat = #{wechat,jdbcType=VARCHAR} OR A.wechat1 = #{wechat,jdbcType=VARCHAR})
			</if>
			<if test='cellphone1 != null and cellphone1 !=""'>
				and (A.cellphone = #{cellphone1,jdbcType=VARCHAR} OR A.cellphone1 = #{cellphone1,jdbcType=VARCHAR})
			</if>
			<if test='wechat1 != null and wechat1 !=""'>
				and (A.wechat = #{wechat1,jdbcType=VARCHAR} OR A.wechat1 = #{wechat1,jdbcType=VARCHAR})
			</if>
		</where>
	</select>
	<select id="selectSameTelEmployee" parameterType="com.xinchi.bean.ClientEmployeeBean" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from client_employee

		<where>
			and ((cellphone = #{cellphone,jdbcType=VARCHAR} OR cellphone1 = #{cellphone,jdbcType=VARCHAR} OR cellphone =
			#{cellphone1,jdbcType=VARCHAR} OR cellphone1 = #{cellphone1,jdbcType=VARCHAR})
			OR (wechat = #{wechat,jdbcType=VARCHAR}
			OR wechat1 = #{wechat,jdbcType=VARCHAR} OR wechat = #{wechat1,jdbcType=VARCHAR} OR wechat1 =
			#{wechat1,jdbcType=VARCHAR}))
			and pk != #{pk,jdbcType=VARCHAR}
			and review_flg='Y'
		</where>
	</select>

	<select id="selectRelationCntBySales" parameterType="java.lang.String" resultMap="RelationLevelMap">
		select
		sales,
		sales_name,
		SUM(sum_cnt) AS sum_cnt,
		SUM(strong_cnt) AS strong_cnt,
		SUM(middle_cnt) AS middle_cnt,
		SUM(weak_cnt) AS weak_cnt,
		SUM(bad_cnt) AS bad_cnt,
		SUM(unknow_cnt) AS unknow_cnt
		from view_relation_level
		<where>
			and sales like CONCAT('%',#{sales,jdbcType=VARCHAR},'%')
		</where>
	</select>
	<select id="selectRelationCntAdmin" parameterType="java.lang.String" resultMap="RelationLevelMap">
		SELECT
		COUNT(pk) AS sum_cnt,
		COUNT(IF(relation_level IN ('朋友级' , '商务级'),1,NULL)) AS strong_cnt,
		COUNT(IF(relation_level = '市场级',1,NULL)) AS
		middle_cnt,
		COUNT(IF(relation_level = '新增级',1,NULL)) AS weak_cnt,
		COUNT(IF(relation_level = '排斥级',1,NULL)) AS bad_cnt,
		COUNT(IF(relation_level = ''OR relation_level IS NULL,1,NULL)) AS unknow_cnt
		FROM
		client_employee
		where delete_flg='N'
	</select>

	<select id="selectBodyPksByEmployeePks" resultType="java.lang.String">
		select distinct financial_body_pk from client_employee
		where pk in
		<foreach item="item" index="index" collection="array" open="(" separator="," close=")">
			#{item}
		</foreach>
	</select>

	<update id="stopEmployee">
		update client_employee set delete_flg='Y' where pk in
		<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
			#{item}
		</foreach>
	</update>
	<update id="recoveryEmployee">
		update client_employee set delete_flg='N' where pk in
		<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
			#{item}
		</foreach>
	</update>
	<update id="publicClientEmployee">
		update client_employee set public_flg='Y',sales='public' where pk in
		<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
			#{item}
		</foreach>
	</update>

	<select id="selectByPage" parameterType="com.xinchi.tools.Page" resultMap="BaseResultMap">
		select
		A.name,
		A.nick_name,
		A.sex,
		CASE WHEN isnull(A.birth_year) or A.birth_year='' then 0 else year(now())-A.birth_year
		END as age,
		A.wechat,
		A.wechat1,
		A.qq,
		A.type,
		A.cellphone,
		A.cellphone1,
		A.telephone,
		A.fax,
		A.id,
		A.financial_body_pk,
		IFNULL(B.client_short_name,A.financial_body_name) AS
		financial_body_name,
		B.client_area as area,
		C.user_names AS
		sales_name,
		A.create_user,
		A.update_user,
		A.pk,
		A.comment,
		A.public_flg,
		A.delete_flg,
		A.birth_year,
		A.create_time,
		A.update_time,
		A.relation_level,
		A.back_level,
		A.market_level,
		A.dimission_flg,
		A.review_flg,
		A.quit_flg,
		C.useful_time AS
		useful_time,
		A.head_photo,
		D.last_order_period AS last_order_period,
		D.year_order_count AS year_order_count
		from
		client_employee
		A LEFT
		JOIN client B ON A.financial_body_pk = B.pk
		LEFT JOIN view_client_employee_user C ON A.pk =
		C.employee_pk
		LEFT JOIN
		client_relation D ON A.pk = D.client_employee_pk

		<where>
			<if test="params.bo.name != null and params.bo.name !=''">
				and A.name like CONCAT('%',#{params.bo.name,jdbcType=VARCHAR},'%')
			</if>
			<if test="params.bo.area != null and params.bo.area !=''">
				and B.client_area = #{params.bo.area,jdbcType=VARCHAR}
			</if>
			<if test="params.bo.financial_body_name != null and params.bo.financial_body_name !=''">
				and B.client_short_name like CONCAT('%',#{params.bo.financial_body_name,jdbcType=VARCHAR},'%')
			</if>
			<if test="params.bo.sales != null and params.bo.sales !=''">
				and (C.user_pks like CONCAT('%',#{params.bo.sales,jdbcType=VARCHAR},'%') OR A.public_flg='Y')
			</if>
			<if test="params.bo.delete_flgs != null and params.bo.delete_flgs !=''">
				and A.delete_flg in
				<foreach item="item" index="index" collection="params.bo.delete_flgs" open="(" separator="," close=")">
					#{params.bo.delete_flgs[${index}]}
				</foreach>
			</if>
			<if test="params.bo.public_flgs != null and params.bo.public_flgs !=''">
				and A.public_flg in
				<foreach item="item" index="index" collection="params.bo.public_flgs" open="(" separator="," close=")">
					#{params.bo.public_flgs[${index}]}
				</foreach>
			</if>
			<if test="params.bo.review_flg != null and params.bo.review_flg !=''">
				and A.review_flg = #{params.bo.review_flg,jdbcType=CHAR}
			</if>
			<if test="params.bo.cellphone != null and params.bo.cellphone !=''">
				and (A.cellphone = #{params.bo.cellphone,jdbcType=CHAR} OR A.cellphone1 =
				#{params.bo.cellphone,jdbcType=CHAR})
			</if>
			<if test="params.bo.wechat != null and params.bo.wechat !=''">
				and (A.wechat = #{params.bo.wechat,jdbcType=CHAR} OR A.wechat1 = #{params.bo.wechat,jdbcType=CHAR})
			</if>
		</where>
		ORDER BY ISNULL(D.last_order_period), D.last_order_period,B.client_short_name,A.name
	</select>
	<select id="selectEmployeeUserByEmployeePk" parameterType="java.lang.String" resultType="com.xinchi.bean.ClientEmployeeUserBean">
		select
		A.employee_pk,A.user_pk,if(ISNULL(B.user_name),'公开',B.user_name) AS
		user_name,A.pk,A.create_time,A.create_user,A.update_time,A.update_user
		from client_employee_user A LEFT
		JOIN user_base B
		ON
		A.user_pk= B.pk
		where A.employee_pk = #{pk,jdbcType=CHAR}
	</select>
</mapper>