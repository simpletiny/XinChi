<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xinchi.bean.mapper.SaleWorkReportMapper">
	<resultMap id="BaseResultMap" type="com.xinchi.bean.SaleWorkReportDto">
		<result column="sale_name" property="sale_name" jdbcType="VARCHAR" />
		<result column="sale_number" property="sale_number" jdbcType="VARCHAR" />
		<result column="date" property="date" jdbcType="VARCHAR" />
		<result column="order_count" property="order_count" jdbcType="INTEGER" />
		<result column="client_employee_pk" property="client_employee_pk" jdbcType="VARCHAR" />
		<result column="client_employee_name" property="client_employee_name" jdbcType="VARCHAR" />
		<result column="client_pk" property="client_pk" jdbcType="VARCHAR" />
		<result column="client_name" property="client_name" jdbcType="VARCHAR" />
		<result column="visit_target" property="visit_target" jdbcType="VARCHAR" />
		<result column="visit_sub_target" property="visit_sub_target" jdbcType="VARCHAR" />
		<result column="visit_summary" property="visit_summary" jdbcType="VARCHAR" />
		<result column="accurate_sale_product" property="accurate_sale_product" jdbcType="VARCHAR" />
		<result column="accurate_sale_summary" property="accurate_sale_summary" jdbcType="VARCHAR" />
	</resultMap>
	<!-- Swr for sale work report -->
	<select id="selectSwrByPage" parameterType="com.xinchi.tools.Page" resultMap="BaseResultMap">
		select
		A.date,
		A.client_employee_pk,
		A.order_count,
		B.name AS client_employee_name,
		C.user_name AS sale_name,
		C.user_number AS sale_number,
		D.pk AS client_pk,
		D.client_short_name AS client_name

		from
		(select A.date,A.client_employee_pk,B.confirm_date,B.order_count from (select A.date,A.client_employee_pk from
		(select confirm_date AS date,client_employee_pk from budget_order_view group by client_employee_pk,confirm_date
		union all
		select date,client_employee_pk from client_visit where type='VISIT' group by client_employee_pk,date
		union All
		select date,client_employee_pk from accurate_sale group by client_employee_pk,date
		)A group by A.client_employee_pk,A.date) A
		LEFT JOIN
		(select confirm_date,count(pk) AS order_count,client_employee_pk from budget_order_view group by confirm_date,client_employee_pk) B
		ON A.date = B.confirm_date and A.client_employee_pk=B.client_employee_pk) A LEFT JOIN client_employee B ON A.client_employee_pk=B.PK
		LEFT JOIN
		user_base C ON B.sales=C.pk
		LEFT JOIN client D ON B.financial_body_pk=D.pk

		<where>
			<if test="params.bo.date != null and params.bo.date !=''">
				and A.date  = #{params.bo.date,jdbcType=VARCHAR}
			</if>
			<if test="params.bo.month != null and params.bo.month !=''">
				and LEFT(A.date,7) = #{params.bo.month,jdbcType=VARCHAR}
			</if>
			<if test="params.bo.sale_name != null and params.bo.sale_name !=''">
				and C.user_name like CONCAT('%',#{params.bo.sale_name,jdbcType=VARCHAR},'%')
			</if>
			<if test="params.bo.client_employee_name != null and params.bo.client_employee_name !=''">
				and B.name like CONCAT('%',#{params.bo.client_employee_name,jdbcType=VARCHAR},'%')
			</if>
			<if test="params.bo.client_name != null and params.bo.client_name !=''">
				and D.client_short_name like CONCAT('%',#{params.bo.client_name,jdbcType=VARCHAR},'%')
			</if>
		</where>

		ORDER BY A.date DESC
	</select>
</mapper>