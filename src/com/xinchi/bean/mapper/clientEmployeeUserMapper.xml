<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xinchi.bean.mapper.ClientEmployeeUserMapper">
	<resultMap id="BaseResultMap" type="com.xinchi.bean.ClientEmployeeUserBean">
		<result column="employee_pk" property="employee_pk" jdbcType="CHAR" />
		<result column="user_pk" property="user_pk" jdbcType="CHAR" />
		<result column="pk" property="pk" jdbcType="CHAR" />
		<result column="user_name" property="user_name" jdbcType="VARCHAR" />
		<result column="create_user" property="create_user" jdbcType="VARCHAR" />
		<result column="update_user" property="update_user" jdbcType="VARCHAR" />
		<result column="create_time" property="create_time" jdbcType="VARCHAR" />
		<result column="update_time" property="update_time" jdbcType="VARCHAR" />
	</resultMap>

	<sql id="Base_Column_List">
		employee_pk,
		user_pk,
		pk,
		create_user,
		update_user,
		create_time,
		update_time
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from client_employee_user
		where pk = #{pk,jdbcType=CHAR}
	</select>
	
	<select id="selectByEmployeePk" resultMap="BaseResultMap" parameterType="java.lang.String">
		select
		A.employee_pk,
		A.user_pk,
		A.pk,
		A.create_user,
		A.update_user,
		A.create_time,
		A.update_time,
		IFNULL(B.user_name,'公开') AS user_name
		from client_employee_user A LEFT JOIN user_base B ON A.user_pk = B.pk
		where A.employee_pk = #{employee_pk,jdbcType=CHAR}
	</select>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from client_employee_user
		where pk = #{pk,jdbcType=CHAR}
	</delete>
	<delete id="deleteByEmployeePk" parameterType="java.lang.String">
		delete from client_employee_user
		where employee_pk =
		#{employee_pk,jdbcType=CHAR}
	</delete>

	<insert id="insert" parameterType="com.xinchi.bean.ClientEmployeeUserBean">

		insert into client_employee_user

		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="employee_pk != null">
				employee_pk,
			</if>
			<if test="user_pk != null">
				user_pk,
			</if>
			<if test="pk != null">
				pk,
			</if>
			<if test="create_user != null">
				create_user,
			</if>
			<if test="update_user != null">
				update_user,
			</if>
			<if test="create_time != null">
				create_time,
			</if>
			<if test="update_time != null">
				update_time,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="employee_pk != null">
				#{employee_pk,jdbcType=CHAR},
			</if>
			<if test="user_pk != null">
				#{user_pk,jdbcType=CHAR},
			</if>
			<if test="pk != null">
				#{pk,jdbcType=CHAR},
			</if>
			<if test="create_user != null">
				#{create_user,jdbcType=VARCHAR},
			</if>
			<if test="update_user != null">
				#{update_user,jdbcType=VARCHAR},
			</if>
			<if test="create_time != null">
				#{create_time,jdbcType=VARCHAR},
			</if>
			<if test="update_time != null">
				#{update_time,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>


	<update id="updateByPrimaryKey" parameterType="com.xinchi.bean.ClientEmployeeUserBean">
		update client_employee_user
		<set>
			<if test="employee_pk != null">
				employee_pk = #{employee_pk,jdbcType=CHAR},
			</if>
			<if test="user_pk != null">
				user_pk = #{user_pk,jdbcType=CHAR},
			</if>
			<if test="pk != null">
				pk = #{pk,jdbcType=CHAR},
			</if>
			<if test="create_user != null">
				create_user = #{create_user,jdbcType=VARCHAR},
			</if>
			<if test="update_user != null">
				update_user = #{update_user,jdbcType=VARCHAR},
			</if>
			<if test="update_time != null">
				update_time = #{update_time,jdbcType=VARCHAR},
			</if>
		</set>
		where pk = #{pk,jdbcType=CHAR}
	</update>
	<select id="selectByParam" parameterType="com.xinchi.bean.ClientEmployeeUserBean" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from client_employee_user
	</select>
</mapper>