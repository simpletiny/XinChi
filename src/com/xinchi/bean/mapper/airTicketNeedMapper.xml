<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xinchi.bean.mapper.AirTicketNeedMapper">
	<resultMap id="BaseResultMap" type="com.xinchi.bean.AirTicketNeedBean">
		<result column="confirm_flg" property="confirm_flg" jdbcType="CHAR" />
		<result column="ticket_client_number" property="ticket_client_number" jdbcType="VARCHAR" />
		<result column="ticket_client_name" property="ticket_client_name" jdbcType="VARCHAR" />
		<result column="first_ticket_date" property="first_ticket_date" jdbcType="VARCHAR" />
		<result column="first_from_to" property="first_from_to" jdbcType="VARCHAR" />
		<result column="people_count" property="people_count" jdbcType="BIGINT" />
		<result column="team_number" property="team_number" jdbcType="VARCHAR" />
		<result column="product_pk" property="product_pk" jdbcType="VARCHAR" />
		<result column="sale_order_pk" property="sale_order_pk" jdbcType="VARCHAR" />
		<result column="air_ticket_cost" property="air_ticket_cost" jdbcType="DECIMAL" />
		<result column="standard_flg" property="standard_flg" jdbcType="VARCHAR" />
		<result column="passenger" property="passenger" jdbcType="VARCHAR" />
		<result column="ordered" property="ordered" jdbcType="VARCHAR" />
		<result column="comment" property="comment" jdbcType="VARCHAR" />
	</resultMap>
	<resultMap id="OrderAirInfoMap" type="com.xinchi.bean.OrderAirInfoBean">
		<result column="pk" property="pk" jdbcType="CHAR" />
		<result column="air_leg" property="air_leg" jdbcType="VARCHAR" />
		<result column="team_number" property="team_number" jdbcType="VARCHAR" />
		<result column="from_to_city" property="from_to_city" jdbcType="VARCHAR" />
		<result column="info_index" property="info_index" jdbcType="INTEGER" />
		<result column="air_index" property="air_index" jdbcType="INTEGER" />
		<result column="day_index" property="day_index" jdbcType="INTEGER" />
		<result column="from_to_place" property="from_to_place" jdbcType="VARCHAR" />
		<result column="standard_flg" property="standard_flg" jdbcType="VARCHAR" />
		<result column="departure_date" property="departure_date" jdbcType="VARCHAR" />
		<result column="operate_flg" property="operate_flg" jdbcType="VARCHAR" />
		<result column="confirm_date" property="confirm_date" jdbcType="VARCHAR" />
		<result column="confirm_flg" property="confirm_flg" jdbcType="VARCHAR" />
		<result column="air_date" property="air_date" jdbcType="VARCHAR" />
		<result column="product_manager_number" property="product_manager_number" jdbcType="VARCHAR" />
	</resultMap>

	<sql id="Base_Column_List">

		confirm_flg,
		ticket_client_number,
		first_ticket_date,
		first_from_to,
		people_count,
		team_number,
		product_pk,
		sale_order_pk,
		air_ticket_cost,
		standard_flg,
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from air_ticket_need
		where pk = #{pk,jdbcType=CHAR}
	</select>

	<select id="selectByParam" parameterType="com.xinchi.bean.AirTicketNeedBean" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from air_ticket_need
	</select>
	<select id="selectByPage" parameterType="com.xinchi.tools.Page" resultMap="BaseResultMap">
		SELECT
		A.confirm_flg,
		A.ticket_client_number,
		B.user_name AS ticket_client_name,
		A.first_ticket_date,
		A.first_from_to,
		A.people_count,
		A.team_number,
		A.sale_order_pk,
		A.standard_flg,
		A.passenger,
		A.ordered,
		A.comment
		FROM
		air_ticket_need A
		LEFT JOIN
		user_base B ON A.ticket_client_number = B.user_number
		LEFT JOIN
		air_ticket_order C ON A.team_number = C.team_number
		<where>
			<if test="params.bo.client_name != null and params.bo.client_name !=''">
				and B.user_name like CONCAT('%', #{params.bo.client_name,jdbcType=VARCHAR},'%')
			</if>
			<if test="params.bo.team_number != null and params.bo.team_number !=''">
				and A.team_number like CONCAT('%', #{params.bo.team_number,jdbcType=VARCHAR},'%')
			</if>
			<if test="params.bo.ordered != null and params.bo.ordered !=''">
				and A.ordered = #{params.bo.ordered,jdbcType=VARCHAR}
			</if>
		</where>
		<!-- <where> <if test="params.bo.status != null and params.bo.status !=''"> and A.confirm_flg in <foreach item="item" index="index" 
			collection="params.bo.status" open="(" separator="," close=")"> #{params.bo.status[${index}]} </foreach> </if> </where> -->
	</select>
	<select id="selectOrderByPage" parameterType="com.xinchi.tools.Page" resultMap="BaseResultMap">
		select
		A.confirm_flg,
		A.ticket_client_number,
		B.user_name AS
		ticket_client_name,
		A.first_ticket_date,
		A.air_ticket_cost,
		A.first_from_to,
		A.people_count,
		A.team_number,
		A.product_pk,
		A.sale_order_pk,
		A.air_ticket_cost,
		A.standard_flg
		from air_ticket_need A LEFT
		JOIN
		user_base B ON A.ticket_client_number = B.user_number
		where A.air_ticket_cost is not null
	</select>

	<select id="selectOrderAirInfoByTeamNumber" parameterType="java.lang.String" resultMap="OrderAirInfoMap">
		select
		pk,
		air_leg,
		info_index,
		day_index,
		from_to_city,
		CASE
		WHEN ISNULL(departure_date) THEN NULL
		ELSE
		DATE_ADD(departure_date,
		INTERVAL day_index - 1 DAY)
		END AS air_date,
		team_number,
		product_manager_number,
		standard_flg,
		departure_date,
		operate_flg,
		confirm_flg,
		confirm_date
		from
		view_order_air_info
		where team_number =
		#{team_number,jdbcType=CHAR}
		ORDER BY info_index
	</select>


</mapper>